[{"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\index.js":"1","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Welcome\\Welcome.js":"2","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\TeacherSignUp\\TeacherSignUp.jsx":"3","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\SignIn\\SignIn.jsx":"4","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\TeacherSignIn\\TeacherSignIn.jsx":"5","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Mainblog\\Mainblog.jsx":"6","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\SignUp\\SignUp.jsx":"7","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Header\\Header.jsx":"8","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\scrollLogin\\scrollLogin.jsx":"9","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\TeacherSignUp\\Avatar\\Avatar.jsx":"10","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\SignIn\\Avatar\\Avatar.jsx":"11","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Mainblog\\MainCard.jsx":"12","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\SignUp\\Avatar\\Avatar.jsx":"13","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\hook\\useWindowPosition.js":"14","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\LoginCard\\LoginCard.jsx":"15","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\App.jsx":"16","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\forgotpass\\forgotpass.jsx":"17","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\forgotpass\\Avatar\\Avatar.jsx":"18","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\attendance\\attendance.jsx":"19","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\teacherblog\\teacherblog.jsx":"20","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\resetpass\\Resetpass.jsx":"21","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\redux\\store.jsx":"22","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\redux\\reducers.jsx":"23","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\takeattendance\\takeattendance.jsx":"24","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\ClassLinks\\ClassLinks.jsx":"25","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\ClassLinks\\ClassLinksHeader.jsx":"26","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\ClassLinks\\PostedLinks\\PostedLinks.jsx":"27","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\ClassLinks\\NewLink\\NewLink.jsx":"28","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\ClassBlog\\ClassBlog.jsx":"29","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\ClassBlog\\Notes.jsx":"30","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\StudentClassBlog\\StudentClassBlog.jsx":"31","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\QueryBlog\\QueryBlog.jsx":"32","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Dashboard\\DashboardEvent\\DashboardEvent.jsx":"33","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Dashboard\\DashboardEvent\\DastboardAddEventArea\\DastboardAddEventArea.jsx":"34"},{"size":265,"mtime":1610526945339,"results":"35","hashOfConfig":"36"},{"size":1209,"mtime":1610789239422,"results":"37","hashOfConfig":"36"},{"size":6364,"mtime":1610721721039,"results":"38","hashOfConfig":"36"},{"size":6367,"mtime":1611299014847,"results":"39","hashOfConfig":"36"},{"size":6495,"mtime":1611497181611,"results":"40","hashOfConfig":"36"},{"size":6700,"mtime":1611660507952,"results":"41","hashOfConfig":"36"},{"size":8240,"mtime":1611299008925,"results":"42","hashOfConfig":"36"},{"size":2860,"mtime":1610789397228,"results":"43","hashOfConfig":"36"},{"size":1099,"mtime":1610789305352,"results":"44","hashOfConfig":"36"},{"size":419,"mtime":1610426897691,"results":"45","hashOfConfig":"36"},{"size":419,"mtime":1610426896802,"results":"46","hashOfConfig":"36"},{"size":782,"mtime":1610284952701,"results":"47","hashOfConfig":"36"},{"size":419,"mtime":1610426897544,"results":"48","hashOfConfig":"36"},{"size":685,"mtime":1610260051695,"results":"49","hashOfConfig":"36"},{"size":765,"mtime":1610287100771,"results":"50","hashOfConfig":"36"},{"size":3485,"mtime":1611662506484,"results":"51","hashOfConfig":"36"},{"size":4994,"mtime":1611062787513,"results":"52","hashOfConfig":"36"},{"size":419,"mtime":1610518631294,"results":"53","hashOfConfig":"36"},{"size":135,"mtime":1610789876279,"results":"54","hashOfConfig":"36"},{"size":5933,"mtime":1611497695968,"results":"55","hashOfConfig":"36"},{"size":5410,"mtime":1611062860453,"results":"56","hashOfConfig":"36"},{"size":952,"mtime":1611665559397,"results":"57","hashOfConfig":"36"},{"size":674,"mtime":1611039806674,"results":"58","hashOfConfig":"36"},{"size":14446,"mtime":1611591470494,"results":"59","hashOfConfig":"36"},{"size":3473,"mtime":1611309234533,"results":"60","hashOfConfig":"36"},{"size":1838,"mtime":1611148539396,"results":"61","hashOfConfig":"36"},{"size":3355,"mtime":1611310699252,"results":"62","hashOfConfig":"36"},{"size":7234,"mtime":1611310699234,"results":"63","hashOfConfig":"36"},{"size":10865,"mtime":1611482566900,"results":"64","hashOfConfig":"36"},{"size":3389,"mtime":1611419505989,"results":"65","hashOfConfig":"36"},{"size":11944,"mtime":1611656385657,"results":"66","hashOfConfig":"36"},{"size":2156,"mtime":1611660726272,"results":"67","hashOfConfig":"36"},{"size":8555,"mtime":1611672508259,"results":"68","hashOfConfig":"36"},{"size":1815,"mtime":1611658899396,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"2xcyq1",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"72"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"72"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"72"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"72"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"72"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\index.js",[],["159","160"],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Welcome\\Welcome.js",[],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\TeacherSignUp\\TeacherSignUp.jsx",["161","162","163"],"import React, { useState } from 'react';\r\nimport \"./TeacherSignUp.scss\";\r\nimport signUp from \"../assets/signUp.svg\";\r\nimport Avatar from \"./Avatar/Avatar\";\r\nimport wave from \"../assets/wave.png\";\r\nimport teacher from \"../assets/teacherPic.png\"\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nconst TeacherSignUp = () => {\r\n    const H = useHistory();\r\n    const [gender, setgender] = useState(1);\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [value, setValue] = useState('');\r\n    const [isActivePass, setIsActivePass] = useState(false);\r\n    const [valuePass, setValuePass] = useState('');\r\n    const [isActiveEmail, setIsActiveEmail] = useState(false);\r\n    const [valueEmail, setValueEmail] = useState('');\r\n    const [vis, setvis] = useState(\"hidden\");\r\n    const handleTextChange = (text) => {\r\n        setValue(text);\r\n\r\n        if (text !== '') {\r\n            setIsActive(true);\r\n        } else {\r\n            setIsActive(false);\r\n        }\r\n    }\r\n    const handleTextChangePass = (text) => {\r\n        setValuePass(text);\r\n\r\n        if (text !== '') {\r\n            setIsActivePass(true);\r\n        } else {\r\n            setIsActivePass(false);\r\n        }\r\n    }\r\n    const handleTextChangeEmail = (text) => {\r\n        setValueEmail(text);\r\n\r\n        if (text !== '') {\r\n            setIsActiveEmail(true);\r\n        } else {\r\n            setIsActiveEmail(false);\r\n        }\r\n    }\r\n\r\n    const changeGender = () => {\r\n        if (gender === 1) {\r\n            setgender(0);\r\n            console.log(gender);\r\n        }\r\n        else {\r\n            setgender(1);\r\n            console.log(gender);\r\n        }\r\n    }\r\n    const submitMember = async (event) => {\r\n        let d = new Date();\r\n        const d_s=d.getFullYear()+\" \"+d.getHours()+\":\"+d.getMinutes()+\":\"+d.getSeconds();\r\n        event.preventDefault();\r\n        console.log(`${gender} ${value} ${valueEmail} ${valuePass}`);\r\n        const info = { \"gender\": gender, \"username\": value, \"email\": valueEmail, \"password\": valuePass,\"lastloginat\":d_s }\r\n        try {\r\n            console.log(\"hiii\");\r\n            let data = await axios({\r\n                method: 'post',\r\n                url: 'http://127.0.0.1:8000/teacherStore/',\r\n                headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                data: info,\r\n                responseType: 'json'\r\n            });\r\n            console.log(data);\r\n            const fun = () => H.push(`/mainblog/${value}`);\r\n            fun();\r\n        }\r\n        catch {\r\n            setvis(\"visible\")\r\n            console.log(\"error\");\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"alert alert-danger alert-dismissible fade show m-0 px-2\" style={{ \"visibility\": vis }} role=\"alert\">\r\n                rollnumber or email already exists\r\n            </div>\r\n            <div className=\"signUpPage wholeteachersignup\">\r\n                <img className=\"wave\" src={wave} alt=\"wallpaper\"></img>\r\n                <div className=\"container\">\r\n                    <img src={signUp} alt=\"sigup\" className=\"img\"></img>\r\n                    <div className=\"login-content\">\r\n                        <form className=\"form\">\r\n                            <h2 className=\"title\">SignUP</h2>\r\n                            <img src={teacher} alt=\"Teacher profile pic\"></img>\r\n                            <div class=\"input-div one mt-3\">\r\n                                <div class=\"i\">\r\n                                    <i class=\"fas fa-user\"></i>\r\n                                </div>\r\n                                <div class=\"div\">\r\n                                    <h5 className={isActive ? \"Active\" : \"\"}>ID-Number</h5>\r\n                                    <input type=\"text\" class=\"input\" value={value}\r\n                                        onChange={(e) => handleTextChange(e.target.value)} required></input>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"input-div one\">\r\n                                <div class=\"i\">\r\n                                    <i class=\"fas fa-user\"></i>\r\n                                </div>\r\n                                <div class=\"div\">\r\n                                    <h5 className={isActiveEmail ? \"Active\" : \"\"}>Email</h5>\r\n                                    <input type=\"email\" class=\"input\" value={valueEmail}\r\n                                        onChange={(e) => handleTextChangeEmail(e.target.value)} required></input>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"input-div pass\">\r\n                                <div class=\"i\">\r\n                                    <i class=\"fas fa-lock\"></i>\r\n                                </div>\r\n                                <div class=\"div\">\r\n                                    <h5 className={isActivePass ? \"Active\" : \"\"}>Password</h5>\r\n                                    <input type=\"password\" class=\"input\" value={valuePass}\r\n                                        onChange={(e) => handleTextChangePass(e.target.value)} required></input>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"btn-group\">\r\n                                <button type=\"button\" className=\"btn btn-success dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    {gender === 1 ? \"Male\" : \"Female\"}\r\n                                </button>\r\n                                <ul className=\"dropdown-menu\">\r\n                                    <li><a className=\"dropdown-item\" onClick={changeGender}>Male</a></li>\r\n                                    <li><a className=\"dropdown-item\" onClick={changeGender}>Female</a></li>\r\n                                </ul>\r\n                            </div>\r\n                            <br />\r\n                            <a href=\"/TeacherSignIn\" className=\"have\" m-auto>Already a Member?</a>\r\n                            <input type=\"submit\" onClick={submitMember} class=\"btn\" value=\"SignUp\"></input>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TeacherSignUp;","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\SignIn\\SignIn.jsx",["164","165"],"import React, { useState } from 'react';\r\nimport \"./SignIn.scss\";\r\nimport signInpic1 from \"../assets/signInpic1.svg\";\r\nimport Avatar from \"./Avatar/Avatar\";\r\nimport wave from \"../assets/wave.png\";\r\nimport axios from 'axios';\r\nimport {BaseUrl} from '../App.jsx';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nconst SignIn = () => {\r\n    let state = useSelector(state=>state.signin);\r\n    let dispatch = useDispatch();\r\n    const H = useHistory();\r\n    const [gender, setgender] = useState(1);\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [value, setValue] = useState('');\r\n    const [isActivePass, setIsActivePass] = useState(false);\r\n    const [valuePass, setValuePass] = useState('');\r\n    const [vis,setvis] = useState(\"hidden\");\r\n    const handleTextChange = (text) => {\r\n        setValue(text);\r\n        if (text !== '') {\r\n            setIsActive(true);\r\n        } else {\r\n            setIsActive(false);\r\n        }\r\n    }\r\n\r\n    const handleTextChangePass = (text) => {\r\n        setValuePass(text);\r\n\r\n        if (text !== '') {\r\n            setIsActivePass(true);\r\n        } else {\r\n            setIsActivePass(false);\r\n        }\r\n    }\r\n\r\n    const changeGender = () => {\r\n        if (gender === 1) {\r\n            setgender(0);\r\n            console.log(gender);\r\n        }\r\n        else {\r\n            setgender(1);\r\n            console.log(gender);\r\n        }\r\n    }\r\n    const onsubmitlogin = async (e) => {\r\n        let d = new Date();\r\n        const d_s=d.getFullYear()+\"-\"+(d.getMonth()+1)+\"-\"+d.getDate()+\" \"+d.getHours()+\":\"+d.getMinutes()+\":\"+d.getSeconds();\r\n        e.preventDefault();\r\n        let info = { \"gender\": gender, \"rollno\": value, \"password\": valuePass,'date':d_s }\r\n        dispatch({type:'request_signin'});\r\n        try {\r\n            const data = await axios({\r\n                method: \"post\",\r\n                url: BaseUrl+\"studentexists/\",\r\n                headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                data: info,\r\n                responseType: 'json'\r\n            })\r\n            dispatch({type:\"success_signin\",payload:data.data});\r\n            localStorage.setItem('value',JSON.stringify({'rollno':value,'password':valuePass,'gender':gender}));\r\n            H.push(`/mainblog`);\r\n        }\r\n        catch {\r\n            dispatch({type:\"error_signin\",payload:\"error\"})\r\n            setvis(\"visible\")\r\n            console.log(\"error\");\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"alert text-center alert-danger alert-dismissible fade show m-0 px-2\" style={{ \"visibility\": vis }} role=\"alert\">\r\n                invalid details provided\r\n            </div>\r\n            <div className=\"loader-spinner\" style={{visibility:(state.loading )? \"visible\" : \"hidden\"}}>\r\n                <div className=\"spinner-grow text-success mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-danger mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-warning mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"signUpPage whole\" style={{visibility:(state.loading )? \"hidden\" : \"visible\"}}>\r\n                <img className=\"wave\" src={wave} alt=\"wallpaper\"></img>\r\n                <div className=\"container\">\r\n                    <img src={signInpic1} alt=\"sigup\" className=\"img\" mb-5 style={{ top: \"4rem\" }}></img>\r\n                    <div className=\"login-content\">\r\n                        <form className=\"form\">\r\n                            <h2 className=\"title\">SignIn</h2>\r\n                            <Avatar gender={gender} ></Avatar>\r\n                            <div class=\"input-div one mt-5\">\r\n                                <div class=\"i\">\r\n                                    <i class=\"fas fa-user\"></i>\r\n                                </div>\r\n                                <div class=\"div\">\r\n                                    <h5 className={isActive ? \"Active\" : \"\"}>RollNumber/Email</h5>\r\n                                    <input type=\"text\" class=\"input\" value={value}\r\n                                        onChange={(e) => handleTextChange(e.target.value)} required></input>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"input-div pass\">\r\n                                <div class=\"i\">\r\n                                    <i class=\"fas fa-lock\"></i>\r\n                                </div>\r\n                                <div class=\"div\">\r\n                                    <h5 className={isActivePass ? \"Active\" : \"\"}>Password</h5>\r\n                                    <input type=\"password\" class=\"input\" value={valuePass}\r\n                                        onChange={(e) => handleTextChangePass(e.target.value)} required></input>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"btn-group\">\r\n                                <button type=\"button\" className=\"btn btn-success dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    {gender === 1 ? \"Male\" : \"Female\"}\r\n                                </button>\r\n                                <ul className=\"dropdown-menu\">\r\n                                    <li><a className=\"dropdown-item\" onClick={changeGender}>Male</a></li>\r\n                                    <li><a className=\"dropdown-item\" onClick={changeGender}>Female</a></li>\r\n                                </ul>\r\n                            </div>\r\n                            <br />\r\n                            <a href=\"/SignUp\" className=\"have mr-3\">New to Visual Meet?</a>\r\n                            <a href=\"/forgotpass\">Forgot Password?</a>\r\n                            <input type=\"submit\" className=\"btn\" onClick={onsubmitlogin} value=\"Login\"></input>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SignIn;","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\TeacherSignIn\\TeacherSignIn.jsx",["166","167","168"],"import React, { useState,useEffect } from 'react';\r\nimport \"./TeacherSignIn.scss\";\r\nimport signInpic1 from \"../assets/signInpic1.svg\";\r\nimport wave from \"../assets/wave.png\";\r\nimport teacher from \"../assets/teacher.png\";\r\nimport axios from 'axios';\r\nimport {BaseUrl} from '../App.jsx';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nconst TeacherSignIn = () => {\r\n    let state = useSelector(state=>state.teachersignin);\r\n    let dispatch = useDispatch();\r\n    const H = useHistory();\r\n    const [gender, setgender] = useState(1);\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [value, setValue] = useState('');\r\n    const [isActivePass, setIsActivePass] = useState(false);\r\n    const [valuePass, setValuePass] = useState('');\r\n    const [vis, setvis] = useState(\"hidden\");\r\n\r\n    const handleTextChange = (text) => {\r\n        setValue(text);\r\n\r\n        if (text !== '') {\r\n            setIsActive(true);\r\n        } else {\r\n            setIsActive(false);\r\n        }\r\n    }\r\n\r\n    const handleTextChangePass = (text) => {\r\n        setValuePass(text);\r\n\r\n        if (text !== '') {\r\n            setIsActivePass(true);\r\n        } else {\r\n            setIsActivePass(false);\r\n        }\r\n    }\r\n\r\n    const changeGender = () => {\r\n        if (gender === 1) {\r\n            setgender(0);\r\n            console.log(gender);\r\n        }\r\n        else {\r\n            setgender(1);\r\n            console.log(gender);\r\n        }\r\n    }\r\n    const onsubmitlogin = async (e) => {\r\n        let d = new Date();\r\n        const d_s=d.getFullYear()+\"-\"+(d.getMonth()+1)+\"-\"+d.getDate()+\" \"+d.getHours()+\":\"+d.getMinutes()+\":\"+d.getSeconds();\r\n        e.preventDefault();\r\n        console.log(d_s)\r\n        let info = { \"gender\": gender, \"rollno\": value, \"password\": valuePass,\"date\":d_s }\r\n        dispatch({type:\"request_teachersignin\"});\r\n        try {\r\n            const data = await axios({\r\n                method: \"post\",\r\n                url: BaseUrl+\"teacherexists/\",\r\n                headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                data: info,\r\n                responseType: 'json'\r\n            })\r\n            dispatch({type:\"success_teachersignin\",payload:data.data});\r\n            localStorage.setItem('value',JSON.stringify({'rollno':value,'password':valuePass,'gender':gender}));\r\n            H.push(`/teacherblog`);\r\n        }\r\n        catch {\r\n            dispatch({type:\"error_teachersignin\",payload:\"error\"});\r\n            setvis(\"visible\");\r\n            console.log(\"error\");\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"alert alert-danger alert-dismissible fade show m-0 px-2\" style={{ \"visibility\": vis }} role=\"alert\">\r\n                invalid details provided\r\n            </div>\r\n            <div className=\"loader-spinner\" style={{visibility:(state.loading )? \"visible\" : \"hidden\"}}>\r\n                <div className=\"spinner-grow text-success mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-danger mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-warning mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"signUpPage wholeteachersignin\" style={{visibility:(state.loading )? \"hidden\" : \"visible\"}}>\r\n                <img className=\"wave\" src={wave} alt=\"wallpaper\"></img>\r\n                <div className=\"container\">\r\n                    <img src={signInpic1} alt=\"sigup\" className=\"img\" mb-5 style={{ top: \"4rem\" }}></img>\r\n                    <div className=\"login-content\">\r\n                        <form className=\"form\">\r\n                            <h2 className=\"title\">SignIn</h2>\r\n                            <img src={teacher} alt=\"Teacher profile pic\"></img>\r\n                            <div class=\"input-div one mt-4\">\r\n                                <div class=\"i\">\r\n                                    <i class=\"fas fa-user\"></i>\r\n                                </div>\r\n                                <div class=\"div\">\r\n                                    <h5 className={isActive ? \"Active\" : \"\"}>Id-Number/Email</h5>\r\n                                    <input type=\"text\" class=\"input\" value={value}\r\n                                        onChange={(e) => handleTextChange(e.target.value)} required></input>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"input-div pass\">\r\n                                <div class=\"i\">\r\n                                    <i class=\"fas fa-lock\"></i>\r\n                                </div>\r\n                                <div class=\"div\">\r\n                                    <h5 className={isActivePass ? \"Active\" : \"\"}>Password</h5>\r\n                                    <input type=\"password\" class=\"input\" value={valuePass}\r\n                                        onChange={(e) => handleTextChangePass(e.target.value)} required></input>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"btn-group\">\r\n                                <button type=\"button\" className=\"btn btn-success dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    {gender === 1 ? \"Male\" : \"Female\"}\r\n                                </button>\r\n                                <ul className=\"dropdown-menu\">\r\n                                    <li><a className=\"dropdown-item\" onClick={changeGender}>Male</a></li>\r\n                                    <li><a className=\"dropdown-item\" onClick={changeGender}>Female</a></li>\r\n                                </ul>\r\n                            </div>\r\n                            <br />\r\n                            <a href=\"/TeacherSignUp\" className=\"have\">New to Visual Meet?</a>\r\n                            <a href=\"/forgotpassteacher\">Forgot Password?</a>\r\n                            <input type=\"submit\" onClick={onsubmitlogin} className=\"btn\" value=\"Login\"></input>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TeacherSignIn;","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Mainblog\\Mainblog.jsx",["169","170","171","172"],"import React,{useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport icon from '../assets/icon.png';\r\nimport MainCard from './MainCard';\r\nimport attendance from '../assets/attendance.jpg'\r\nimport classlinks from '../assets/classlinks.png'\r\nimport queries from '../assets/query-board.png'\r\nimport event from '../assets/calendar.png'\r\nimport './Mainblog.scss';\r\nimport {BaseUrl} from '../App.jsx';\r\nimport {useParams} from 'react-router';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nconst Mainblog = () => {\r\n    let state = useSelector(state=>state.signin);\r\n    let dispatch = useDispatch();\r\n    const H = useHistory();\r\n    useEffect(async ()=>{\r\n        let d = new Date();\r\n        const d_s=d.getFullYear()+\"-\"+(d.getMonth()+1)+\"-\"+d.getDate()+\" \"+d.getHours()+\":\"+d.getMinutes()+\":\"+d.getSeconds();\r\n        // e.preventDefault();\r\n        const value=JSON.parse(localStorage.getItem('value'));\r\n        let info = {...value,'date':d_s };\r\n        dispatch({type:'request_signin'});\r\n        try {\r\n            const data = await axios({\r\n                method: \"post\",\r\n                url: BaseUrl+\"studentexists/\",\r\n                headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                data: info,\r\n                responseType: 'json'\r\n            })\r\n            dispatch({type:\"success_signin\",payload:data.data});\r\n            H.push(`/mainblog`);\r\n        }\r\n        catch {\r\n            dispatch({type:\"error_signin\",payload:\"error\"})\r\n            H.push('/error');\r\n        }\r\n    },[])\r\n    let props = [{ \"image\": attendance, \"title\": \"\", \"info\": \"ATTENDANCE\",\"link\":\"/attendance\" }, { \"image\": classlinks, \"title\": \"\",\"link\":\"/StudentClassBlog\", \"info\": \"CLASSLINKS\" }, { \"image\": queries, \"title\": \"\", \"info\": \"QUERYBLOG\",\"link\":\"/QueryBlog\" },\r\n    { \"image\": event, \"title\": \"\", \"info\": \"EVENTS\",\"link\":\"/QueryBlog\" }]\r\n    return (\r\n        <div>\r\n            <div className=\"loader-spinner\" style={{visibility:(state.loading )? \"visible\" : \"hidden\"}}>\r\n                <div className=\"spinner-grow text-success mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-danger mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-warning mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"container-fluid\" style={{ visibility:(state.loading )? \"hidden\" : \"visible\" }}>\r\n                <div className=\"row fixed-top\">\r\n                    <div className=\"col-12 navbar navbar-light bg-dark\">\r\n                        <div className=\"\">\r\n                            <Link className=\"navbar-brand\" >\r\n                                <img src={icon} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"\" />\r\n                                <label className=\"ml-2 text-white\">hii {JSON.parse(localStorage.getItem('value')).rollno}</label>\r\n                            </Link>\r\n                        </div>\r\n                        <label className=\"ml-auto text-white mt-1 text-center\">\r\n                            VISUAL MEET\r\n                                </label>\r\n                        <div className=\"ml-auto\">\r\n                            <button className=\"btn btn-outline-danger mr-2\" onClick={()=>{localStorage.removeItem('value');H.push(\"/\");}}>logout</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container mt-5\" >\r\n                    <div className=\"row ml-sm-5\" style={{ \"marginTop\": \"8rem\" }}>\r\n                        {/* {data.map((v)=><MainCard image={v.image} title={v.info} info={v.title}/>)} */}\r\n                        <div className=\"card MainCard h-100 my-5 mx-auto px-0 rounded-lg shadow\" style={{ \"width\": \"15rem\", \"height\": \"12rem\" }}>\r\n                            <img src={attendance} className=\"card-img-top img-responsive\" alt=\"...\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">{props[0].title}</h5>\r\n                                <p className=\"card-text\">{props[0].info}</p>\r\n                                <Link to={props[0].link} className=\"btn btn-primary\">click to view...</Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card MainCard h-100  my-5  mx-auto  rounded-lg shadow\" style={{ \"width\": \"15rem\", \"height\": \"12rem\" }}>\r\n                            <img src={queries} className=\"card-img-top img-responsive\" alt=\"...\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">{props[2].title}</h5>\r\n                                <p className=\"card-text\">{props[2].info}</p>\r\n                                <Link to={props[2].link} className=\"btn btn-primary\">click to view...</Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card MainCard h-100  my-5  mx-auto rounded-lg shadow\" style={{ \"width\": \"15rem\", \"height\": \"12rem\" }}>\r\n                            <img src={event} className=\"card-img-top img-responsive\" alt=\"...\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">{props[3].title}</h5>\r\n                                <p className=\"card-text\">{props[3].info}</p>\r\n                                <Link to={props[3].link} className=\"btn btn-primary\">click to view...</Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card MainCard h-100  my-5 mx-auto px-0 rounded-lg shadow\" style={{ \"width\": \"15rem\", \"height\": \"12rem\" }}>\r\n                            <img src={classlinks} className=\"card-img-top img-responsive\" alt=\"...\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">{props[1].title}</h5>\r\n                                <p className=\"card-text\">{props[1].info}</p>\r\n                                <Link to={props[1].link} className=\"btn btn-primary\">click to view...</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Mainblog\r\n","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\SignUp\\SignUp.jsx",["173","174"],"import React, { useState } from 'react';\r\nimport \"./SignUp.scss\";\r\nimport signUp from \"../assets/signUp.svg\";\r\nimport Avatar from \"./Avatar/Avatar\";\r\nimport wave from \"../assets/wave.png\";\r\nimport axios from 'axios';\r\nimport {BaseUrl} from '../App.jsx';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nconst SignUp = () => {\r\n    let state=useSelector(state=>state.signup);\r\n    let dispatch = useDispatch();\r\n    const [gender, setgender] = useState(1);\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [isActiveSection, setIsActiveSection] = useState(false);\r\n    const [value, setValue] = useState('');\r\n    const [isActivePass, setIsActivePass] = useState(false);\r\n    const [valuePass, setValuePass] = useState('');\r\n    const [isActiveEmail, setIsActiveEmail] = useState(false);\r\n    const [valueEmail, setValueEmail] = useState('');\r\n    const [section,setSection] = useState('');\r\n    const H = useHistory();\r\n    const [vis, setvis] = useState(\"hidden\");\r\n    const handleTextChange = (text) => {\r\n        setValue(text);\r\n        if (text !== '') {\r\n            setIsActive(true);\r\n        } else {\r\n            setIsActive(false);\r\n        }\r\n    }\r\n    const handleTextChangePass = (text) => {\r\n        setValuePass(text);\r\n\r\n        if (text !== '') {\r\n            setIsActivePass(true);\r\n        } else {\r\n            setIsActivePass(false);\r\n        }\r\n    }\r\n    const handleTextChangeEmail = (text) => {\r\n        setValueEmail(text);\r\n\r\n        if (text !== '') {\r\n            setIsActiveEmail(true);\r\n        } else {\r\n            setIsActiveEmail(false);\r\n        }\r\n    }\r\n    const handleTextChangeSection = (text) => {\r\n        setSection(text);\r\n        if (text !== '') {\r\n            setIsActiveSection(true);\r\n        } else {\r\n            setIsActiveSection(false);\r\n        }\r\n    }\r\n    const changeGender = () => {\r\n        if (gender === 1) {\r\n            setgender(0);\r\n            console.log(gender);\r\n        }\r\n        else {\r\n            setgender(1);\r\n            console.log(gender);\r\n        }\r\n    }\r\n    const submitMember = async (event) => {\r\n        event.preventDefault();\r\n        let d = new Date();\r\n        const d_s=d.getFullYear()+\"-\"+(d.getMonth()+1)+\"-\"+d.getDate()+\" \"+d.getHours()+\":\"+d.getMinutes()+\":\"+d.getSeconds();\r\n        console.log(d_s);\r\n        console.log(`${gender} ${value} ${valueEmail} ${valuePass}`);\r\n        const info = { \"gender\": gender,\"section\":section, \"username\": value, \"rollno\": value, \"email\": valueEmail, \"password\": valuePass,\"lastloginat\":d_s }\r\n        dispatch({type:\"request_signup\"});\r\n        try {\r\n            console.log(\"hiii\");\r\n            let data = await axios({\r\n                method: 'post',\r\n                url: BaseUrl+'studentStore/',\r\n                headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                data: info,\r\n                responseType: 'json'\r\n            });\r\n            dispatch({type:\"success_signup\",payload:data.data});\r\n            console.log(value);\r\n            localStorage.setItem('value',JSON.stringify({'rollno':value,'password':valuePass,'gender':gender}))\r\n            const fun = () => H.push('/mainblog');\r\n            fun();\r\n        }\r\n        catch {\r\n            dispatch({type:\"error_signup\",payload:'error'});\r\n            setvis(\"visible\")\r\n            console.log(\"error\");\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"alert text-center alert-danger alert-dismissible fade show m-0 px-2\" style={{ \"visibility\": vis }} role=\"alert\">\r\n                rollnumber or email already exists\r\n        </div>\r\n        <div className=\"loader-spinner\" style={{visibility:(state.loading )? \"visible\" : \"hidden\"}}>\r\n            <div className=\"spinner-grow text-success mr-1\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-danger mr-1\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-warning mr-1\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n        <div className=\"signUpPage wholesignup\" style={{visibility:(state.loading )? \"hidden\" : \"visible\"}}>\r\n            <img className=\"wave\" src={wave} alt=\"wallpaper\"></img>\r\n            <div className=\"container\"  >\r\n                <img src={signUp} alt=\"sigup\" className=\"img\"></img>\r\n                <div className=\"login-content\">\r\n                    <form className=\"form\">\r\n                        <h2 className=\"title\">SignUP</h2>\r\n                        <Avatar gender={gender}></Avatar>\r\n                        <div className=\"input-div one mt-3\">\r\n                            <div className=\"i\">\r\n                                <i className=\"fas fa-user\"></i>\r\n                            </div>\r\n                            <div className=\"div\">\r\n                                <h5 className={isActive ? \"Active\" : \"\"}>RollNumber</h5>\r\n                                <input type=\"text\" className=\"input\" value={value}\r\n                                    onChange={(e) => handleTextChange(e.target.value)} required></input>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"input-div one\">\r\n                            <div className=\"i\">\r\n                                <i className=\"fas fa-user\"></i>\r\n                            </div>\r\n                            <div className=\"div\">\r\n                                <h5 className={isActiveEmail ? \"Active\" : \"\"}>Email</h5>\r\n                                <input type=\"email\" class=\"input\" value={valueEmail}\r\n                                    onChange={(e) => handleTextChangeEmail(e.target.value)} required></input>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"input-div pass\">\r\n                            <div className=\"i\">\r\n                                <i className=\"fas fa-lock\"></i>\r\n                            </div>\r\n                            <div className=\"div\">\r\n                                <h5 className={isActivePass ? \"Active\" : \"\"}>Password</h5>\r\n                                <input type=\"password\" class=\"input\" value={valuePass}\r\n                                    onChange={(e) => handleTextChangePass(e.target.value)} required></input>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"input-div pass\">\r\n                            <div className=\"i\">\r\n                                <i className=\"fas fa-lock\"></i>\r\n                            </div>\r\n                            <div className=\"div\">\r\n                                <h5 className={isActiveSection ? \"Active\":\"\"}>section</h5>\r\n                                <input type=\"text\" class=\"input\" value={section}\r\n                                    onChange={(e) => handleTextChangeSection(e.target.value)} required></input>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"btn-group\">\r\n                            <button type=\"button\" className=\"btn btn-success dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                {gender === 1 ? \"Male\" : \"Female\"}\r\n                            </button>\r\n                            <ul className=\"dropdown-menu\">\r\n                                <li><a className=\"dropdown-item\" onClick={changeGender}>Male</a></li>\r\n                                <li><a className=\"dropdown-item\" onClick={changeGender}>Female</a></li>\r\n                            </ul>\r\n                        </div>\r\n                        <br />\r\n                        <a href=\"/SignIn\" className=\"have\" m-auto>Already a Member?</a>\r\n                        <input type=\"submit\" className=\"btn\" onClick={submitMember} value=\"SignUp\"></input>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SignUp;","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Header\\Header.jsx",["175","176"],"import React from 'react';\r\nimport './Header.scss';\r\nimport { Link } from 'react-scroll';\r\nimport icon from \"../assets/icon.png\";\r\nimport './Header.scss';\r\nimport '../scrollLogin/scrollLogin.scss';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <>\r\n            <nav className=\"navbar fixed-top navbar-expand-lg navbar-dark bg-dark\">\r\n                <div class=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"#\">\r\n                        <img src={icon} width=\"40\" height=\"40\" alt=\"\" style={{ borderRadius: '10px' }}></img>\r\n                    </a>\r\n                    <a className=\"navbar-brand\" href=\"#\">VISUAL MEET</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav ml-auto mr-3\">\r\n                            <li class=\"nav-item\">\r\n                                <Link className=\"ml-auto mr-3\" to=\"login-center\" smooth={true} style={{ color: \"#fff\" }}><button className=\"signin\">LOGIN</button></Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"ml-auto mr-3\" href=\"/SignUp\" style={{ color: \"#fff\" }}>\r\n                                    <button type=\"button\" className=\"btn btn-outline-warning ml-2\"><span>SIGNUP</span></button>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    {/* <a className=\"navbar-brand\" href=\"#\">\r\n                        <img src={icon} width=\"40\" height=\"40\" alt=\"\" style={{ borderRadius: '10px' }}></img>\r\n                    </a>\r\n                    <a className=\"navbar-brand\" href=\"/mainblog\">Virtual Meet</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n                        <Link className=\" signin ml-auto mr-3 text-white\" to=\"login-center\" smooth={true}>Sign in</Link>\r\n                        <button type=\"button\" className=\"btn btn-outline-warning ml-2\">Register</button>\r\n                    </div> */}\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n\r\n","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\scrollLogin\\scrollLogin.jsx",["177","178"],"import React from 'react';\r\nimport \"../scrollLogin/scrollLogin.scss\";\r\nimport LoginCard from \"../LoginCard/LoginCard\";\r\nimport teacher from \"../assets/teacher.png\";\r\nimport student from \"../assets/students.png\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { flexbox } from '@material-ui/system';\r\nimport useWindowPosition from '../hook/useWindowPosition';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst ScrollLogin = () =>{\r\n    const checked = useWindowPosition(\"welcome\");\r\n    return(\r\n        <>\r\n        <div className=\"pageTwo\"  id=\"login-center\">\r\n            <Link className=\"link1\" to=\"/TeacherSignIn\">\r\n                <LoginCard image={teacher} role=\"Teacher\" desc=\"Please Click on this card to SignIn as a Teacher\" checked={checked}></LoginCard>\r\n            </Link>\r\n            <Link to =\"/SignIn\" className=\"link1\">\r\n                <LoginCard image={student} role=\"Student\" desc=\"Please Click on this card to SignIn as a Student\" checked={checked}></LoginCard>\r\n            </Link>\r\n        </div>\r\n        \r\n        </>\r\n    );\r\n}\r\n\r\nexport default ScrollLogin;","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\TeacherSignUp\\Avatar\\Avatar.jsx",[],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\SignIn\\Avatar\\Avatar.jsx",[],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Mainblog\\MainCard.jsx",["179"],"import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n// import './Mainblog.scss'\r\nimport attendance from '../assets/attendance.jpg'\r\nconst MainCard = (props) => {\r\n    console.log(props);\r\n    return (\r\n        <>\r\n            <div className=\"card MainCard h-100 mt-5 ml-auto rounded-lg shadow\" style={{\"width\": \"12rem\"}}>\r\n                <img src=\"\" className=\"card-img-top img-responsive\" alt=\"...\" />\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{props.title}</h5>\r\n                    <p clasName=\"card-text\">{props.info}</p>\r\n                    <Link to={props.link} className=\"btn btn-primary\">click to view...</Link>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainCard\r\n","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\SignUp\\Avatar\\Avatar.jsx",[],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\hook\\useWindowPosition.js",[],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\LoginCard\\LoginCard.jsx",["180","181","182","183","184"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport \"./LoginCard.scss\"\r\nimport { Collapse } from '@material-ui/core';\r\n\r\nexport default function MediaCard(props) {\r\n  return (\r\n    <Collapse in={props.checked} {...(props.checked ? { timeout: 1000 } : {})}>\r\n      <div className=\"card logincard text-white bg-secondary shadow\" style={{width: \"18rem\"}}>\r\n        <div className=\"mag_img\">\r\n          <img className=\"card-img-top\" src={props.image} alt=\"Card image cap\"></img>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <h1 role>{props.role}</h1>\r\n          <p className=\"card-text desc\">{props.desc}</p>\r\n        </div>\r\n      </div>\r\n    </Collapse>\r\n  );\r\n} ","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\App.jsx",[],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\forgotpass\\forgotpass.jsx",["185","186"],"import React, { useState } from 'react';\r\nimport Avatar from \"./Avatar/Avatar\";\r\nimport wave from \"../assets/wave.png\";\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport signInpic1 from \"../assets/signInpic1.svg\";\r\nimport { BaseUrl } from '../App.jsx';\r\nimport './forgotpass.scss';\r\nconst ForgotPassword = (props) => {\r\n    const state = useSelector(state => state.forgetpass);\r\n    // console.log(state);\r\n    const dispatch = useDispatch();\r\n    const H = useHistory();\r\n    const [value, setValue] = useState('');\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [vis, setvis] = useState({ \"visibility\": \"hidden\", \"background\": \"#5ae663\", \"msg\": \"\" });\r\n    const handleTextChange = (text) => {\r\n        setValue(text);\r\n        if (text !== '') {\r\n            setIsActive(true);\r\n        } else {\r\n            setIsActive(false);\r\n        }\r\n    }\r\n    const onsubmitlogin = async (e) => {\r\n        e.preventDefault();\r\n        dispatch({ 'type': \"request_forgetpass\" })\r\n        console.log(state);\r\n        const info = { \"type\": props.type, \"email\": value }\r\n        try {\r\n            const data = await axios({\r\n                method: \"post\",\r\n                url: BaseUrl + \"forgetpassword/\",\r\n                headers: { \"Authorization\": \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                responseType: \"json\",\r\n                data: info\r\n            })\r\n            dispatch({type:\"success_forgetpass\",payload:data.data})\r\n            if (props.type === \"student\") {\r\n                H.push('/SignIn');\r\n            }\r\n            else {\r\n                H.push('/TeacherSignIn');\r\n            }\r\n            // setvis(()=>({\"background\":\"#5ae663\",\"visibility\":\"visible\",\"msg\":\"password as been sent to your mail\"}));\r\n        }\r\n        catch {\r\n            setvis(() => ({ \"background\": \"#e05871\", \"visibility\": \"visible\", \"msg\": \"invalid email\" }));\r\n            dispatch({ 'type': \"error_forgetpass\",'payload':\"error\"})\r\n            console.log(\"error\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"alert text-center alert-dismissible fade show m-0 px-2\" style={{ \"visibility\": vis.visibility, \"background\": vis.background }} role=\"alert\">\r\n                {vis.msg}\r\n            </div>\r\n            <div className=\"loader-spinner\" style={{visibility:(state.loading )? \"visible\" : \"hidden\"}}>\r\n                <div className=\"spinner-grow text-success mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-danger mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-warning mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"signUpPage whole\" style={{visibility:(state.loading )? \"hidden\" : \"visible\"}}>\r\n                <img className=\"wave\" src={wave} alt=\"wallpaper\"></img>\r\n                <h3 className=\"title text-center\">Password will be send to your mail</h3>\r\n                <div className=\"container\">\r\n                    <img src={signInpic1} alt=\"sigup\" className=\"img\" mb-5 style={{ top: \"4rem\" }}></img>\r\n                    <div className=\"login-content\">\r\n                        <form className=\"form\">\r\n                            <div class=\"input-div one\">\r\n                                <div class=\"i\">\r\n                                    <i class=\"fas fa-user\"></i>\r\n                                </div>\r\n                                <div class=\"div\">\r\n                                    <h5 className={isActive ? \"Active\" : \"\"}>Email</h5>\r\n                                    <input type=\"text\" class=\"input\" value={value}\r\n                                        onChange={(e) => handleTextChange(e.target.value)} required></input>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <Link to={(props.type == \"student\") ? '/resetpass' : '/resetpassteacher'}>anymore ways?</Link>\r\n                            </div>\r\n                            {/*\r\n                                <div class=\"input-div pass\">\r\n                                    <div class=\"i\">\r\n                                        <i class=\"fas fa-lock\"></i>\r\n                                    </div>\r\n                                </div> */}\r\n                            <br />\r\n                            <input type=\"submit\" className=\"btn\" onClick={onsubmitlogin} value=\"Submit\"></input>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword;","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\forgotpass\\Avatar\\Avatar.jsx",[],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\attendance\\attendance.jsx",[],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\teacherblog\\teacherblog.jsx",["187","188","189"],"import React,{useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport icon from '../assets/icon.png';\r\nimport attendance from '../assets/attendance.jpg'\r\nimport classlinks from '../assets/classlinks.png'\r\nimport queries from '../assets/query-board.png'\r\nimport event from '../assets/calendar.png'\r\nimport './teacherblog.scss';\r\nimport {BaseUrl} from '../App.jsx';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nconst Teacherblog = () => {\r\n  console.log(localStorage.getItem('value'))\r\n  const H = useHistory();\r\n  let state = useSelector(state=>state.teachersignin);\r\n  let dispatch = useDispatch();\r\n  useEffect(async ()=>{\r\n        let d = new Date();\r\n        const d_s=d.getFullYear()+\"-\"+(d.getMonth()+1)+\"-\"+d.getDate()+\" \"+d.getHours()+\":\"+d.getMinutes()+\":\"+d.getSeconds();\r\n        // e.preventDefault();\r\n        const value=JSON.parse(localStorage.getItem('value'));\r\n        let info = {...value,'date':d_s };\r\n        dispatch({type:'request_teachersignin'});\r\n        try {\r\n            const data = await axios({\r\n                method: \"post\",\r\n                url: BaseUrl+\"teacherexists/\",\r\n                headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                data: info,\r\n                responseType: 'json'\r\n            })\r\n            dispatch({type:\"success_teachersignin\",payload:data.data});\r\n            // H.push(`/mainblog`);\r\n        }\r\n        catch {\r\n            dispatch({type:\"error_teachersignin\",payload:\"error\"})\r\n            H.push('/error');\r\n        }\r\n    },[])\r\n    let props = [ { \"image\": classlinks, \"title\": \"\",\"link\":\"/ClassBlog\", \"info\": \"ADDCLASS\" }, { \"image\": queries, \"title\": \"\", \"info\": \"QUERYBLOG\" },\r\n    { \"image\": event, \"title\": \"\", \"info\": \"EVENTS\" }]\r\n    return (\r\n        <div>\r\n            <div className=\"loader-spinner\" style={{visibility:(state.loading )? \"visible\" : \"hidden\"}}>\r\n                <div className=\"spinner-grow text-success mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-danger mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-warning mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"container-fluid h-100\" style={{ visibility:(state.loading )? \"hidden\" : \"visible\" }}>\r\n                <div className=\"row fixed-top\">\r\n                    <div className=\"col-12 navbar navbar-light bg-dark\">\r\n                        <div className=\"\">\r\n                            <Link className=\"navbar-brand\" >\r\n                                <img src={icon} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"\" />\r\n                                <label className=\"ml-2 text-white\">hii {JSON.parse(localStorage.getItem('value')).rollno}</label>\r\n                            </Link>\r\n                        </div>\r\n                        <label className=\"ml-auto text-white mt-1 text-center\">\r\n                            VISUAL MEET\r\n                                </label>\r\n                        <div className=\"ml-auto\">\r\n                            <button className=\"btn btn-outline-danger mr-2\" onClick={()=>{localStorage.removeItem('value');H.push(\"/\");}}>logout</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container pt-5\" >\r\n                    <div className=\"row ml-sm-5\" style={{ \"marginTop\": \"8rem\" }}>\r\n                        {/* {data.map((v)=><MainCard image={v.image} title={v.info} info={v.title}/>)} */}\r\n                        <div className=\"card MainCard h-100  my-5 mx-auto px-0 rounded-lg shadow\" style={{ \"width\": \"15rem\", \"height\": \"12rem\" }}>\r\n                            <img src={classlinks} className=\"card-img-top img-responsive\" alt=\"...\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">{props[0].title}</h5>\r\n                                <p className=\"card-text\">{props[0].info}</p>\r\n                                <Link to={props[0].link} className=\"btn btn-primary\">click to view...</Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card MainCard h-100  my-5  mx-auto  rounded-lg shadow\" style={{ \"width\": \"15rem\", \"height\": \"12rem\" }}>\r\n                            <img src={queries} className=\"card-img-top img-responsive\" alt=\"...\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">{props[1].title}</h5>\r\n                                <p className=\"card-text\">{props[1].info}</p>\r\n                                <Link to={props[1].link} className=\"btn btn-primary\">click to view...</Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card MainCard h-100  my-5  mx-auto rounded-lg shadow\" style={{ \"width\": \"15rem\", \"height\": \"12rem\" }}>\r\n                            <img src={event} className=\"card-img-top img-responsive\" alt=\"...\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">{props[2].title}</h5>\r\n                                <p className=\"card-text\">{props[2].info}</p>\r\n                                <Link to={props[2].link} className=\"btn btn-primary\">click to view...</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Teacherblog;\r\n","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\resetpass\\Resetpass.jsx",["190"],"import React, { useState } from 'react';\r\nimport './Resetpass.scss';\r\nimport wave from \"../assets/wave.png\";\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport signInpic1 from \"../assets/signInpic1.svg\";\r\nimport {BaseUrl} from '../App.jsx';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nconst Resetpass = (props) => {\r\n    let state=useSelector(state=>state.resetpass);\r\n    let dispatch = useDispatch();\r\n    const H = useHistory();\r\n    const [value, setValue] = useState('');\r\n    const [isActivePass, setIsActivePass] = useState(false);\r\n    const [valuePass, setValuePass] = useState('');\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [vis, setvis] = useState({ \"visibility\": \"hidden\", \"background\": \"#5ae663\", \"msg\": \"\" });\r\n    const handleTextChange = (text) => {\r\n        setValue(text);\r\n\r\n        if (text !== '') {\r\n            setIsActive(true);\r\n        } else {\r\n            setIsActive(false);\r\n        }\r\n    }\r\n    const handleTextChangePass = (text) => {\r\n        setValuePass(text);\r\n\r\n        if (text !== '') {\r\n            setIsActivePass(true);\r\n        } else {\r\n            setIsActivePass(false);\r\n        }\r\n    }\r\n    const onsubmitlogin = async (e) => {\r\n        e.preventDefault();\r\n        const info = { \"password\": valuePass }\r\n        console.log(info);\r\n        console.log(value);\r\n        console.log(props.type);\r\n        dispatch({type:\"request_resetpass\"});\r\n        try {\r\n            const data = await axios({\r\n                method: \"patch\",\r\n                url: BaseUrl+props.type+\"Store/\"+value+\"/\",\r\n                headers: { \"Authorization\": \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                responseType: \"json\",\r\n                data: info\r\n            })\r\n            dispatch({type:\"success_resetpass\",payload:data.data})\r\n            if (props.type === \"student\") {\r\n                H.push('/SignIn');\r\n            }\r\n            else {\r\n                H.push('/TeacherSignIn');\r\n            }\r\n            // setvis(()=>({\"background\":\"#5ae663\",\"visibility\":\"visible\",\"msg\":\"password as been sent to your mail\"}));\r\n        }\r\n        catch {\r\n            setvis(() => ({ \"background\": \"#e05871\", \"visibility\": \"visible\", \"msg\": \"invalid email\" }));\r\n            console.log(\"error\")\r\n            dispatch({type:\"error_resetpass\",payload:\"error\"});\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"alert text-center alert-dismissible fade show m-0 px-2\" style={{ \"visibility\": vis.visibility, \"background\": vis.background }} role=\"alert\">\r\n                {vis.msg}\r\n            </div>\r\n            <div className=\"loader-spinner\" style={{visibility:(state.loading )? \"visible\" : \"hidden\"}}>\r\n                <div className=\"spinner-grow text-success mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-danger mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-warning mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"signUpPage whole\" style={{visibility:(state.loading )? \"hidden\" : \"visible\"}}>\r\n                <img className=\"wave\" src={wave} alt=\"wallpaper\"></img>\r\n                <h3 className=\"title text-center\">Reset your password</h3>\r\n                <div className=\"container\">\r\n                    <img src={signInpic1} alt=\"sigup\" className=\"img\" mb-5 style={{ top: \"4rem\" }}></img>\r\n                    <div className=\"login-content\">\r\n                        <form className=\"form\">\r\n                            <div class=\"input-div one\">\r\n                                <div class=\"i\">\r\n                                    <i class=\"fas fa-user\"></i>\r\n                                </div>\r\n                                <div class=\"div\">\r\n                                    <h5 className={isActive ? \"Active\" : \"\"}>Username</h5>\r\n                                    <input type=\"text\" class=\"input\" value={value}\r\n                                        onChange={(e) => handleTextChange(e.target.value)} required></input>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"input-div pass\">\r\n                                <div class=\"i\">\r\n                                    <i class=\"fas fa-lock\"></i>\r\n                                </div>\r\n                                <div class=\"div\">\r\n                                    <h5 className={isActivePass ? \"Active\" : \"\"}>New Password</h5>\r\n                                    <input type=\"password\" class=\"input\" value={valuePass}\r\n                                        onChange={(e) => handleTextChangePass(e.target.value)} required></input>\r\n                                </div>\r\n                            </div>\r\n                            <br />\r\n                            <input type=\"submit\" className=\"btn\" onClick={onsubmitlogin} value=\"Submit\"></input>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Resetpass;","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\redux\\store.jsx",[],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\redux\\reducers.jsx",[],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\takeattendance\\takeattendance.jsx",["191","192","193","194","195","196","197","198"],"import React, { useEffect, useState } from 'react'\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\nimport './takeattendance.scss';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { BaseUrl } from '../App.jsx';\r\nimport axios from 'axios';\r\nimport {useHistory} from 'react-router-dom';\r\nconst Takeattendance = () => {\r\n    useEffect(async ()=>{\r\n        let d = new Date();\r\n        const d_s=d.getFullYear()+\"-\"+(d.getMonth()+1)+\"-\"+d.getDate()+\" \"+d.getHours()+\":\"+d.getMinutes()+\":\"+d.getSeconds();\r\n        // e.preventDefault();\r\n        const value=JSON.parse(localStorage.getItem('value'));\r\n        let info = {...value,'date':d_s };\r\n        dispatch({type:'request_teachersignin'});\r\n        try {\r\n            const data = await axios({\r\n                method: \"post\",\r\n                url: BaseUrl+\"teacherexists/\",\r\n                headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                data: info,\r\n                responseType: 'json'\r\n            })\r\n            dispatch({type:\"success_teachersignin\",payload:data.data});\r\n            // H.push(`/takeattendance`);\r\n        }\r\n        catch {\r\n            dispatch({type:\"error_teachersignin\",payload:\"error\"})\r\n            H.push('/error');\r\n        }\r\n    },[]);\r\n    let [rows, setrows] = useState([]);\r\n    const H = useHistory();\r\n    const { subject, section ,time } = useParams();\r\n    let state = useSelector(state => state.takeattendance);\r\n    const dispatch = useDispatch();\r\n    let state1=useSelector(state=>state.uploadattendance);\r\n    const [uploadDetails, setuploadDetails] = useState([]);\r\n    const onCheckBoxClick = (p) => {\r\n        console.log(p.rowIds);\r\n        setuploadDetails(p.rowIds);\r\n    }\r\n    const uploadAttendanceForm = async () => {\r\n        dispatch({\"type\":\"request_uploadattendance\"});\r\n        let dict={};\r\n        uploadDetails.map((val)=>{\r\n            dict[val]=true;\r\n        })\r\n        rows.map((v)=>{\r\n            if(dict[v['username']]){\r\n                v[\"present\"]=true;\r\n            }\r\n            else{\r\n                v[\"present\"]=false;\r\n            }\r\n            v[\"section\"]=section;\r\n            v[\"subject\"]=subject;\r\n            v[\"class_time\"]=time;\r\n            v[\"posted_by\"]=JSON.parse(localStorage.getItem('value')).rollno;\r\n        })\r\n        console.log(rows);\r\n        try{\r\n            const data = await axios({\r\n                method:\"post\",\r\n                url:BaseUrl+\"addAttendance/\",\r\n                headers:{\"Authorization\":\"Token de5fca1fb449f586b63136af9a12ab5afc96602e\"},\r\n                responseType:\"application/json\",\r\n                data:{\"rows\":rows,\"teacheruser\":JSON.parse(localStorage.getItem(\"value\")).rollno}\r\n            })\r\n            dispatch({\"type\":\"success_uploadattendance\",\"payload\":data.data});\r\n            H.push('/ClassBlog');\r\n        }\r\n        catch{\r\n            dispatch({\"type\":\"error_uploadattendance\",\"payload\":\"error\"});\r\n            H.push('/error');\r\n        }\r\n    }\r\n    const columns = [\r\n        // { field: 'id', headerName: 'ID', width: 130 },\r\n        { field: 'id', headerName: 'ROLLNO', width: 160 },\r\n        { field: 'section', headerName: 'SECTION', width: 130, sortable: false, },\r\n        {\r\n            field: 'total_classes',\r\n            headerName: 'TOTAL CLASSES',\r\n            description: 'total classes taken in this subject',\r\n            width: 130,\r\n            sortable: false,\r\n            type: 'number',\r\n        },\r\n        {\r\n            field: 'total_classes_attended',\r\n            headerName: 'TOTAL_CLASSES_ATTENDED',\r\n            description: 'total classes attended in this subject',\r\n            sortable: false,\r\n            type: 'number',\r\n            width: 180,\r\n        },\r\n        {\r\n            field: 'lastloginat',\r\n            headerName: 'LASTLOGINAT',\r\n            description: 'last login time of student',\r\n            sortable: false,\r\n            width: 180,\r\n        },\r\n    ];\r\n    useEffect(async () => {\r\n        console.log(\"hii\");\r\n        dispatch({ 'type': \"request_takeattendance\" });\r\n        try {\r\n            console.log(\"hii\");\r\n            const data = await axios({\r\n                method: \"post\",\r\n                url: BaseUrl + 'attendanceBlog/',\r\n                responseType: \"json\",\r\n                headers: { \"Authorization\": \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                data: { \"section\": section, \"subject\": subject }\r\n            });\r\n            console.log(data.data);\r\n            setrows(data.data);\r\n            dispatch({ 'type': \"success_takeattendance\", payload: data.data });\r\n        }\r\n        catch {\r\n            dispatch({ 'type': \"error_takeattendance\", payload: \"error\" });\r\n            console.log(\"error\")\r\n        }\r\n    }, []);\r\n    const useStyles3 = makeStyles((theme) => ({\r\n        button: {\r\n            margin: theme.spacing(1),\r\n        },\r\n    }));\r\n    const useStyles2 = makeStyles((theme) => ({\r\n        formControl: {\r\n            margin: theme.spacing(1),\r\n            minWidth: 120,\r\n        },\r\n        selectEmpty: {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    }));\r\n    const useStyles1 = makeStyles((theme) => ({\r\n        root: {\r\n            width: '100%',\r\n        },\r\n        heading: {\r\n            fontSize: theme.typography.pxToRem(15),\r\n            fontWeight: theme.typography.fontWeightRegular,\r\n        },\r\n    }));\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n            flexGrow: 1,\r\n            display: 'none',\r\n            [theme.breakpoints.up('sm')]: {\r\n                display: 'block',\r\n            },\r\n        },\r\n        search: {\r\n            position: 'relative',\r\n            borderRadius: theme.shape.borderRadius,\r\n            backgroundColor: fade(theme.palette.common.white, 0.15),\r\n            '&:hover': {\r\n                backgroundColor: fade(theme.palette.common.white, 0.25),\r\n            },\r\n            marginLeft: 0,\r\n            width: '100%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                marginLeft: theme.spacing(1),\r\n                width: 'auto',\r\n            },\r\n        },\r\n        searchIcon: {\r\n            padding: theme.spacing(0, 2),\r\n            height: '100%',\r\n            position: 'absolute',\r\n            pointerEvents: 'none',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n        inputRoot: {\r\n            color: 'inherit',\r\n        },\r\n        inputInput: {\r\n            padding: theme.spacing(1, 1, 1, 0),\r\n            // vertical padding + font size from searchIcon\r\n            paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n            transition: theme.transitions.create('width'),\r\n            width: '100%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: '12ch',\r\n                '&:focus': {\r\n                    width: '20ch',\r\n                },\r\n            },\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n    const classes1 = useStyles1();\r\n    const classes2 = useStyles2();\r\n    const classes3 = useStyles3();\r\n    const [page, setpage] = React.useState(7);\r\n    const handleChange = (event) => {\r\n        setpage(event.target.value);\r\n    };\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid p-0\" style={{ visibility: (state1.loading) ? \"hidden\" : \"visible\" }}>\r\n                <div className=\"row \">\r\n                    <div className={classes.root}>\r\n                        <AppBar position=\"static\">\r\n                            <Toolbar>\r\n                                <IconButton\r\n                                    edge=\"start\"\r\n                                    className={classes.menuButton}\r\n                                    color=\"inherit\"\r\n                                    aria-label=\"open drawer\">\r\n                                    <MenuIcon />\r\n                                </IconButton>\r\n                                <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                                    Takeattendance\r\n                                </Typography>\r\n                                <div>\r\n                                    <FormControl className={classes2.formControl} style={{ color: \"#fff !important\", marginTop: \"-0rem\" }}>\r\n                                        <InputLabel id=\"demo-simple-select-label\" className=\"text-white\">pages</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-label\"\r\n                                            id=\"demo-simple-select\"\r\n                                            value={page}\r\n                                            className=\"text-white\"\r\n                                            onChange={handleChange}\r\n                                        >\r\n                                            <MenuItem value={5}>5</MenuItem>\r\n                                            <MenuItem value={10}>10</MenuItem>\r\n                                            <MenuItem value={15}>15</MenuItem>\r\n                                            <MenuItem value={20}>20</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </div>\r\n                                <div>\r\n                                    <Button onClick={uploadAttendanceForm} style={{ background: \"#d7dff7\" }}\r\n                                        variant=\"contained\"\r\n                                        color=\"default\"\r\n                                        className={classes3.button}\r\n                                        startIcon={<CloudUploadIcon />}\r\n                                    >\r\n                                        Upload\r\n                                    </Button>\r\n                                </div>\r\n                            </Toolbar>\r\n                        </AppBar>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className={classes1.root}>\r\n                        <Accordion>\r\n                            <AccordionSummary style={{ background: \"#d7dff7\", border: \"none !important\" }}\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls=\"panel1a-content\"\r\n                                id=\"panel1a-header\">\r\n                                <Typography className={classes.heading} color=\"primary\" style={{ fontWeight: \"600\" }}>Note <DoubleArrowIcon color=\"primary\" style={{ fontSize: \"1rem\" }} /></Typography>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails style={{ background: \"#d7dff7\", border: \"none !important\" }}>\r\n                                <Typography>\r\n                                    please click on checkbox if student is present or keep blank in case student is absent\r\n                                </Typography>\r\n                            </AccordionDetails>\r\n                        </Accordion>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"loader-spinner\" style={{ visibility: (state.loading) ? \"visible\" : \"hidden\" }}>\r\n                        <div className=\"spinner-grow text-success mr-1\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                        <div className=\"spinner-grow text-danger mr-1\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                        <div className=\"spinner-grow text-warning mr-1\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-5\" style={{ visibility: (state.loading || state1.loading) ? \"hidden\" : \"visible\" }}>\r\n                    <div style={{ height: '73vh', width: '100%' }}>\r\n                        <DataGrid rows={rows} columns={columns} pageSize={page} checkboxSelection onSelectionChange={onCheckBoxClick} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <div> */}\r\n                <div className=\"loader-spinner1\" style={{ visibility: (state1.loading) ? \"visible\" : \"hidden\" }}>\r\n                    <div className=\"spinner-grow text-success mr-1\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                    <div className=\"spinner-grow text-danger mr-1\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                    <div className=\"spinner-grow text-warning mr-1\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                {/* </div> */}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Takeattendance\r\n","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\ClassLinks\\ClassLinks.jsx",["199","200","201","202","203","204","205","206"],"import React, {useState} from 'react';\r\nimport \"./ClassLinks.scss\";\r\nimport { Link } from 'react-router-dom';\r\nimport icon from '../assets/icon.png';\r\nimport {useParams} from 'react-router';\r\nimport {useHistory} from 'react-router-dom';\r\nimport NewLink from './NewLink/NewLink';\r\nimport PostedLinks from './PostedLinks/PostedLinks';\r\nimport ClassLinksHeader from './ClassLinksHeader';\r\nimport { Button, makeStyles } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Modal from 'react-modal';\r\n\r\nconst useStyles = makeStyles({\r\n    addLink: {\r\n        borderRadius: \"50%\",\r\n        width: \"3rem\",\r\n        height: \"4rem\",\r\n        color: \"#cad315\",\r\n        backgroundColor: \"#f2f4c0\",\r\n        position: \"absolute\",\r\n        bottom: \"2rem\",\r\n        right: \"2rem\" \r\n    },\r\n    addIconLink: {\r\n        fontSize: \"3rem\"\r\n    }\r\n});\r\n\r\nfunction ClassLinks(props) {\r\n    const classes = useStyles(props);\r\n    const [modelOpen, setmodelOpen] = useState(false);\r\n    const [link, setlink] = useState();\r\n    const [classLink, setclassLink] = useState([]);\r\n\r\n    const closeModel = () => setmodelOpen(false);\r\n\r\n    const openModel = () => setmodelOpen(true);\r\n\r\n    const addClassLink = (newLink) => {\r\n        const tempLink = {\r\n            title: \"<h1>ahsdjsadhk</h1>\",\r\n            content: \"<p>Heloasdasd</p>\",\r\n            section:\"<p>Heloasdasd</p>\",\r\n            date:\"<p>Heloasdasd</p>\"\r\n        }\r\n        console.log(newLink);\r\n        console.log(classLink);\r\n        \r\n        setclassLink((prevData)=>{\r\n            return [...prevData, newLink]\r\n        })\r\n        console.log(classLink);\r\n    }\r\n\r\n    const onDelete = (id) => {\r\n        console.log(id);\r\n        setclassLink((prevData) => \r\n            prevData.filter((curData, idx) => {\r\n                if(idx===id[\"id\"]){\r\n                    console.log(\"yo!\")\r\n                }\r\n                return idx!==id[\"id\"];\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"linkBackground d-block\" style={{position:\"relative\", alignItems:\"center\"}}>\r\n            <ClassLinksHeader open={openModel}></ClassLinksHeader>\r\n            <h1 style={{textAlign: \"center\"}} className=\"linkHeading\">Class Links:</h1>\r\n            <div className=\"linksArea\">\r\n                {classLink.map((val, idx) => {\r\n                    return (\r\n                        <PostedLinks\r\n                            key={idx}\r\n                            id={idx}\r\n                            title={val.title}\r\n                            content={val.content}\r\n                            section={val.section}\r\n                            date={val.date}\r\n                            deleteItem = {onDelete}\r\n                        ></PostedLinks>\r\n                    )\r\n                })}\r\n            </div>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <Button className={classes.addLink} style={{border:\"none\", outline:\"none\"}}\r\n                onClick={openModel}>\r\n                <AddIcon className={classes.addIconLink}></AddIcon>\r\n            </Button>\r\n            {modelOpen? <div style={{width: \"100vw\", height: \"100vh\", position: \"fixed\", top: \"0px\", backgroundColor: \"rgba(0,0,0,0.5)\"}} onClick={closeModel}></div>:null}\r\n            <NewLink show={modelOpen} close={closeModel} addLink = {addClassLink}></NewLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClassLinks;\r\n","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\ClassLinks\\ClassLinksHeader.jsx",["207","208"],"import React from 'react';\r\nimport icon from '../assets/icon.png';\r\n\r\nfunction ClassLinksHeader(props) {\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar fixed-top navbar-expand-lg navbar-dark bg-dark\">\r\n                <div class=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"#\">\r\n                        <img src={icon} width=\"40\" height=\"40\" alt=\"\" style={{ borderRadius: '10px' }}></img>\r\n                    </a>\r\n                    <a className=\"navbar-brand\" href=\"#\">VISUAL MEET</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav ml-auto mr-3\">\r\n                            <li class=\"nav-item\">\r\n                                 <button style={{ color: \"#fff\", fontSize: \"1.3rem\", background: \"transparent\", outline:\"none\", border: \"none\"}} className=\"mr-3\" onClick={props.open}>NewLink</button>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"ml-auto mr-3\" href=\"/SignUp\" style={{ color: \"#fff\" }}>\r\n                                    <button type=\"button\" className=\"btn btn-outline-danger ml-2\"><span>LOGOUT</span></button>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClassLinksHeader;\r\n","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\ClassLinks\\PostedLinks\\PostedLinks.jsx",[],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\ClassLinks\\NewLink\\NewLink.jsx",["209","210","211","212","213","214"],"import React, { Component } from 'react';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Add from '@material-ui/icons/Add';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { EditorState, convertToRaw } from 'draft-js';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport \"./NewLink.scss\";\r\nimport { Button } from '@material-ui/core';\r\nimport transitions from '@material-ui/core/styles/transitions';\r\n\r\nclass NewLink extends Component {\r\n  state = {\r\n    count: 1,\r\n    titleState: EditorState.createEmpty(),\r\n    descState: EditorState.createEmpty(),\r\n    title: true,\r\n    desc: true\r\n  }\r\n\r\n  onTitleStateChange: Function = (titleState) => {\r\n    this.setState({\r\n      titleState,\r\n    });\r\n  };\r\n  onDescStateChange: Function = (descState) => {\r\n    this.setState({\r\n      descState,\r\n    });\r\n  };\r\n  onsectionStateChange: Function = (sectionState) => {\r\n    this.setState({\r\n      sectionState,\r\n    });\r\n  }\r\n  oneditorStateChange: Function =(editorState) => {\r\n    this.setState({\r\n      editorState,\r\n    });\r\n  }\r\n  addClassLink: Function = () => {\r\n    const newLink = {\r\n      title: draftToHtml(convertToRaw(this.state.titleState.getCurrentContent())),\r\n      content: draftToHtml(convertToRaw(this.state.descState.getCurrentContent())),\r\n      section: draftToHtml(convertToRaw(this.state.sectionState.getCurrentContent())),\r\n      date: draftToHtml(convertToRaw(this.state.editorState.getCurrentContent())),\r\n    }\r\n    console.log(newLink);\r\n    this.props.addLink(newLink)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"newLink ml-auto\" style={{\r\n        display: this.props.show ? \"inline-block\": \"none\",\r\n      }}>\r\n          <div className=\"newLinkCard\" style={{\r\n            transform: this.props.show ? \"translateY(0vh)\":\"translateY(100vh)\",\r\n            border: \"2px black solid\",\r\n            marginTop: \"0px !important\"\r\n          }}>\r\n          <Editor\r\n            style={{border: \"2px red solid\",\r\n            transform: this.props.show ? \"translateY(0vh)\":\"translateY(100vh)\"}}\r\n            editorState={this.state.titleState}\r\n            wrapperClassName=\"newWrapper\"\r\n            toolbarClassName=\"newToolBar\"\r\n            editorClassName=\"newEditor1\"\r\n            onEditorStateChange={this.onTitleStateChange}\r\n            toolbar={\r\n              {\r\n                fontSize: {\r\n                  options: [16, 18, 24, 30],\r\n                  defaultSize:14\r\n                }\r\n              }\r\n            }\r\n            /*toolbarHidden={this.state.title}\r\n            onFocus = {() => {\r\n              if(this.state.count===1){\r\n                this.setState(prevState => {\r\n                  return {count: prevState.count + 1}\r\n                });\r\n                this.setState({\r\n                  title: !this.state.title,\r\n                  desc: this.state.desc,\r\n                });\r\n              }\r\n              else{\r\n                this.setState({\r\n                  title: !this.state.title,\r\n                  desc: !this.state.desc,\r\n                });\r\n              }\r\n            }} */\r\n            placeholder=\"Title\"\r\n            />\r\n          <Editor\r\n            style={{border: \"2px red solid\",\r\n            transform: this.props.show ? \"translateY(10%)\":\"none\", transition: \"all 1.3s ease\"}}\r\n            editorState={this.state.descState}\r\n            wrapperClassName=\"newWrapper\"\r\n            editorClassName=\"newEditor2\"\r\n            toolbarClassName=\"newToolBar\"\r\n            onEditorStateChange={this.onDescStateChange}\r\n            /* toolbarHidden={this.state.desc}\r\n            onFocus = {() => {\r\n              if(this.state.count===1){\r\n                this.setState(prevState => {\r\n                  return {count: prevState.count + 1}\r\n                });\r\n                this.setState({\r\n                  title: this.state.title,\r\n                  desc: !this.state.desc,\r\n                });\r\n              }\r\n              else{\r\n                this.setState({\r\n                  title: !this.state.title,\r\n                  desc: !this.state.desc,\r\n                });\r\n              }\r\n            }} */\r\n            toolbar={\r\n              {\r\n                fontSize: {\r\n                  options: [8, 9, 10, 11, 12, 14, 16, 18],\r\n                  defaultSize: 14,\r\n                }\r\n              }\r\n            }\r\n            placeholder=\"Description\"\r\n            required\r\n          />\r\n          <Editor\r\n            style={{border: \"2px red solid\",\r\n            transform: this.props.show ? \"translateY(10%)\":\"none\", transition: \"all 1.3s ease\"}}\r\n            editorState={this.state.sectionState}\r\n            wrapperClassName=\"newWrapper\"\r\n            editorClassName=\"newEditor2\"\r\n            toolbarClassName=\"newToolBar\"\r\n            onEditorStateChange={this.onsectionStateChange}\r\n            toolbar={\r\n              {\r\n                fontSize: {\r\n                  options: [8, 9, 10, 11, 12, 14, 16, 18],\r\n                  defaultSize: 14,\r\n                }\r\n              }\r\n            }\r\n            placeholder=\"section\"\r\n            required\r\n          />\r\n          <Editor\r\n            style={{border: \"2px red solid\",\r\n            transform: this.props.show ? \"translateY(10%)\":\"none\", transition: \"all 1.3s ease\"}}\r\n            editorState={this.state.editorState}\r\n            wrapperClassName=\"newWrapper\"\r\n            editorClassName=\"newEditor2\"\r\n            toolbarClassName=\"newToolBar\"\r\n            onEditorStateChange={this.oneditorStateChange}\r\n            toolbar={\r\n              {\r\n                fontSize: {\r\n                  options: [8, 9, 10, 11, 12, 14, 16, 18],\r\n                  defaultSize: 14,\r\n                }\r\n              }\r\n            }\r\n            placeholder=\"date(YYYY:MM:DD HH-MM-SS in this format)\"\r\n            required\r\n          />\r\n          <div style={{backgroundColor: \"#00af91\",\r\n        transform: this.props.show ? \"translateY(0vh)\":\"translateY(100vh)\", trasition: \"all 1.3s ease\"}} className=\"newLinkAddButton\">\r\n\r\n            <Button variant=\"contained\" style={{border: \"none\",\r\n            outline:\"none\", margin:\"1rem\"}} className=\"mt-3 ml-auto newLinkAddButtons\" type=\"submit\" \r\n            onClick={\r\n              ()=>{\r\n                /* this.props.addLink(draftToHtml(convertToRaw(this.state.titleState.getCurrentContent())));\r\n                this.props.addLink(draftToHtml(convertToRaw(this.state.descState.getCurrentContent())));\r\n                */\r\n                this.addClassLink();\r\n                this.props.close();\r\n                this.onTitleStateChange(EditorState.createEmpty());\r\n                this.props.close();\r\n                this.onDescStateChange(EditorState.createEmpty());\r\n              }\r\n            }>\r\n            Add\r\n            </Button>\r\n\r\n            <Button variant=\"contained\" style={{border: \"none\",\r\n                    outline:\"none\", margin:\"1rem\", margin:\"auto\"}} className=\"newLinkAddButtons\" onClick={this.props.close}>Close</Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewLink;","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\ClassBlog\\ClassBlog.jsx",["215","216","217","218","219","220","221"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { BaseUrl } from '../App.jsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport './ClassBlog.scss';\r\nimport Notes from './Notes.jsx';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nconst ClassBlog = () => {\r\n    const H = useHistory();\r\n    let state = useSelector(state => state.teachersignin);\r\n    let state1 = useSelector(state => state.classblog);\r\n    let dispatch = useDispatch();\r\n    const [open, setOpen] = React.useState(true);\r\n    let [onadd, setonadd] = useState(true);\r\n    let [notesdata, setnotesdata] = useState([]);\r\n    const [vis,setvis]=useState(\"hidden\")\r\n    console.log(notesdata);\r\n    useEffect(async () => {\r\n        let d = new Date();\r\n        const d_s = d.getFullYear() + \"-\" + (d.getMonth() + 1) + \"-\" + d.getDate() + \" \" + d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds();\r\n        // e.preventDefault();\r\n        const value = JSON.parse(localStorage.getItem('value'));\r\n        let info = { ...value, 'date': d_s };\r\n        dispatch({ type: 'request_teachersignin' });\r\n        try {\r\n            const data = await axios({\r\n                method: \"post\",\r\n                url: BaseUrl + \"teacherexists/\",\r\n                headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                data: info,\r\n                responseType: 'json'\r\n            })\r\n            dispatch({ type: \"success_teachersignin\", payload: data.data });\r\n            H.push(`/ClassBlog`);\r\n        }\r\n        catch {\r\n            dispatch({ type: \"error_teachersignin\", payload: \"error\" })\r\n            H.push('/error');\r\n        }\r\n    }, []);\r\n    let [values, setvalues] = useState({ \"subject\": \"\", \"link\": \"\", \"section\": \"\", \"date\": \"\" })\r\n    useEffect(async () => {\r\n        dispatch({ 'type': 'request_getclassblog' });\r\n        try {\r\n            const data = await axios({\r\n                method: 'get',\r\n                url: BaseUrl + 'filterClassLinkBlogByUsername/' + JSON.parse(localStorage.getItem('value')).rollno,\r\n                headers: { 'Authorization': 'Token de5fca1fb449f586b63136af9a12ab5afc96602e' },\r\n                responseType: 'json'\r\n            })\r\n            console.log(\"hii\");\r\n            dispatch({ 'type': 'success_getclassblog', payload: data.data });\r\n            console.log(data.data);\r\n            setnotesdata(data.data);\r\n        }\r\n        catch {\r\n            console.log(\"error\");\r\n            dispatch({ 'type': 'error_getclassblog', payload: \"\" });\r\n        }\r\n    }, [onadd]);\r\n    // console.log(values);\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n            flexGrow: 1,\r\n        },\r\n    }));\r\n    const useStyles1 = makeStyles((theme) => ({\r\n        root: {\r\n            '& .MuiTextField-root': {\r\n                margin: theme.spacing(1),\r\n                width: '25ch',\r\n            },\r\n        },\r\n    }));\r\n    const addnotes = async () => {\r\n        console.log(\"hiii\");\r\n        console.log(values);\r\n        dispatch({ 'type': \"request_classblog\" });\r\n        console.log({ ...values, posted_by: JSON.parse(localStorage.getItem(\"value\")).rollno });\r\n        try {\r\n            const data = await axios({\r\n                method: \"post\",\r\n                url: BaseUrl + 'classLinkBlog/',\r\n                headers: { 'Authorization': 'Token de5fca1fb449f586b63136af9a12ab5afc96602e' },\r\n                data: { ...values, posted_by: JSON.parse(localStorage.getItem(\"value\")).rollno },\r\n                responseType: 'json'\r\n            })\r\n            console.log(\"successs\");\r\n            console.log(data.data);\r\n            dispatch({ 'type': \"success_classblog\" });\r\n            setvalues({ \"subject\": \"\", \"link\": \"\", \"section\": \"\", \"date\": \"\" });\r\n            setonadd((pre) => !pre);\r\n            setvis(\"visible\");\r\n        }\r\n        catch {\r\n            console.log(\"error\");\r\n            setvis(\"hidden\");\r\n            dispatch({ 'type': \"error_classblog\" });\r\n        }\r\n    }\r\n    const ondel = (info) => {\r\n        setonadd((pre) => !pre);\r\n    }\r\n    const onlogout = () => {\r\n        localStorage.removeItem('value');\r\n        H.push('/')\r\n    }\r\n    const classes = useStyles();\r\n    const classes1 = useStyles1();\r\n    return (\r\n        <div>\r\n            <div className=\"loader-spinner\" style={{ visibility: (state.loading) ? \"visible\" : \"hidden\" }}>\r\n                <div className=\"spinner-grow text-success mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-danger mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-warning mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n            <div style={{ visibility: (state.loading) ? \"hidden\" : \"visible\" }}>\r\n                <div className={classes.root}>\r\n                    <AppBar position=\"static\">\r\n                        <Toolbar>\r\n                            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                                <AddIcon onClick={addnotes} />\r\n                            </IconButton>\r\n                            <Typography variant=\"h6\" className={classes.title}>\r\n                                ADDCLASSES\r\n                        </Typography>\r\n                            <Button variant=\"contained\" onClick={onlogout} color=\"secondary\">Logout</Button>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                </div>\r\n                <Collapse in={open} style={{visibility:vis}}>\r\n                    <Alert\r\n                        action={\r\n                            <IconButton\r\n                                aria-label=\"close\"\r\n                                color=\"inherit\"\r\n                                size=\"small\"\r\n                                onClick={() => {\r\n                                    setOpen(false);\r\n                                }}\r\n                            >\r\n                                <CloseIcon fontSize=\"inherit\" />\r\n                            </IconButton>\r\n                        }\r\n                    >\r\n                        Added SuccessFully\r\n                    </Alert>\r\n                </Collapse>\r\n                <div className=\"container pt-5\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-6 border mx-auto boxx text-center px-md-3 shadow\" style={{ background: \"#d3e0f5\", borderRadius: \"2rem\" }}>\r\n                            {/* <TextField value={values.link}\r\n                            onChange={(e)=>setvalues((pre)=>({...pre,link:e.target.value}))}\r\n                            id=\"standard-multiline-static\"\r\n                            label=\"LINK\"\r\n                            multiline\r\n                            rows={3}\r\n                            // defaultValue=\"\"\r\n                        /><br/> */}\r\n                            <TextField id=\"standard-basic\" value={values.link} onChange={(e) => setvalues((pre) => ({ ...pre, link: e.target.value }))} label=\"LINK\" /><br />\r\n                            <TextField value={values.subject}\r\n                                onChange={(e) => setvalues((pre) => ({ ...pre, subject: e.target.value }))}\r\n                                id=\"standard-basic\" style={{ textAlign: \"center\", margin: \"0.3rem 0\" }} label=\"SUBJECT\" /> <br />\r\n                            <TextField value={values.section}\r\n                                onChange={(e) => setvalues((pre) => ({ ...pre, section: e.target.value }))}\r\n                                id=\"standard-basic\" style={{ textAlign: \"center\", margin: \"0.3rem 0\" }} label=\"SECTION\" /> <br /><br />\r\n                            <TextField\r\n                                // value={values.date}\r\n                                onChange={(e) => { setvalues((pre) => ({ ...pre, date: e.target.value })) }}\r\n                                id=\"datetime-local\"\r\n                                label=\"Next appointment\"\r\n                                type=\"datetime-local\"\r\n                                // defaultValue=\"2021-01-01T10:30\"\r\n                                className={classes.textField}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                style={{ textAlign: \"center\" }}\r\n                            />\r\n                            <br />\r\n                            <Button id=\"circleicon\" onClick={addnotes}><AddIcon id=\"addcircle\" /></Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"loader-spinner\" style={{ visibility: (state1.loading) ? \"visible\" : \"hidden\" }}>\r\n                    <div className=\"spinner-grow text-success mr-1\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                    <div className=\"spinner-grow text-danger mr-1\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                    <div className=\"spinner-grow text-warning mr-1\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container mt-5\" style={{ visibility: (state1.loading) ? \"hidden\" : \"visible\" }}>\r\n                    <div className=\"notesblog\" >\r\n                        {notesdata.map((val, i) => <Notes id={val.id} subject={val.subject} fun={ondel} link={val.link} date={val.class_time} section={val.section} />)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClassBlog\r\n","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\ClassBlog\\Notes.jsx",["222","223"],"import React from 'react'\r\nimport './ClassBlog.scss';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport axios from 'axios';\r\nimport {BaseUrl} from '../App.jsx';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nconst Notes = (props) => {\r\n    const H= useHistory();\r\n    const state = useSelector(state=>state.deletenotes);\r\n    const dispatch=useDispatch();\r\n    console.log(props);\r\n    const options = [\r\n        'delete',\r\n        'upload'\r\n    ];\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n  \r\n    const handleClick = (event) => {\r\n        // console.log(event.currentTarget);\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n  \r\n    const handleClose = async (op) => {\r\n        if(op===\"delete\"){\r\n            const info={\"id\":props.id};\r\n            console.log(props);\r\n            console.log(op);\r\n            dispatch({'type':\"request_deletenotes\"})\r\n            try{\r\n                const data = await axios({\r\n                    url: BaseUrl+'deleteClassLinks/',\r\n                    method:'delete',\r\n                    headers:{\"Authorization\":\"token de5fca1fb449f586b63136af9a12ab5afc96602e\"},\r\n                    data:info,\r\n                    requestType:\"json\"\r\n                });\r\n                console.log(data.data);\r\n                dispatch({'type':\"success_deletenotes\",'payload':data.data});\r\n                props.fun(info);\r\n            }\r\n            catch{\r\n                dispatch({'type':\"error_deletenotes\",'payload':\"\"});\r\n            }\r\n        }\r\n        else if(op===\"upload\"){\r\n            H.push(`takeattendance/${props.subject}/${props.section}/${props.date}`);\r\n        }\r\n        setAnchorEl(null);\r\n    };\r\n    const ITEM_HEIGHT = 48;\r\n    return (\r\n        <>\r\n            <div className=\"p-3 pr-5 mx-3 my-4 Notee border shadow\" style={{ background: \"#d3e0f5\", borderRadius: \"2rem\" }}>\r\n                <IconButton \r\n                    aria-label=\"more\"\r\n                    aria-controls=\"long-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleClick}\r\n                >\r\n                    <MoreVertIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id=\"long-menu\"\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    PaperProps={{\r\n                        style: {\r\n                            maxHeight: ITEM_HEIGHT * 4.5,\r\n                            width: '20ch',\r\n                        },\r\n                    }}>\r\n                    {options.map((option) => (\r\n                        <MenuItem key={option} selected={option === 'delete'} onClick={()=>handleClose(option)}>\r\n                            {option}\r\n                        </MenuItem>\r\n                    ))}\r\n                </Menu>\r\n                <h3>{props.subject}</h3>\r\n                <p><a href={props.link} target=\"_blank\">{props.link}</a></p>\r\n                <p>{props.section}</p>\r\n                <p>{props.date}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Notes\r\n","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\StudentClassBlog\\StudentClassBlog.jsx",["224","225","226","227","228","229"],"import React, { useEffect, useState } from 'react'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { DataGrid, getColDef } from '@material-ui/data-grid';\r\nimport { BaseUrl } from '../App.jsx';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\nconst StudentClassBlog = () => {\r\n    const H = useHistory();\r\n    let [onsearch, settable] = useState(false);\r\n    let [searchval, onsearchval] = useState(\"\");\r\n    const state1 = useSelector(state => state.StudentClassBlog);\r\n    const state2 = useSelector(state => state.onSearchLinks);\r\n    let state = useSelector(state => state.signin);\r\n    const dispatch = useDispatch();\r\n    useEffect(async () => {\r\n        let d = new Date();\r\n        const d_s = d.getFullYear() + \"-\" + (d.getMonth() + 1) + \"-\" + d.getDate() + \" \" + d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds();\r\n        const value = JSON.parse(localStorage.getItem('value'));\r\n        let info = { ...value, 'date': d_s };\r\n        dispatch({ type: 'request_signin' });\r\n        try {\r\n            const data = await axios({\r\n                method: \"post\",\r\n                url: BaseUrl + \"studentexists/\",\r\n                headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                data: info,\r\n                responseType: 'json'\r\n            })\r\n            dispatch({ type: \"success_signin\", payload: data.data });\r\n            // H.push(`/mainblog`);\r\n        }\r\n        catch {\r\n            dispatch({ type: \"error_signin\", payload: \"error\" })\r\n            H.push('/error');\r\n        }\r\n    }, [])\r\n    const [rows, setrows] = useState([]);\r\n    useEffect(async () => {\r\n        dispatch({ 'type': \"request_StudentClassBlog\" });\r\n        const info = { \"username\": JSON.parse(localStorage.getItem(\"value\")).rollno }\r\n        console.log(info);\r\n        try {\r\n            const data = await axios({\r\n                method: \"post\",\r\n                url: BaseUrl + \"getAttendanceStatus/\",\r\n                headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                responseType: \"json\",\r\n                data: info\r\n            })\r\n            dispatch({ 'type': \"success_StudentClassBlog\", \"payload\": data.data });\r\n            setrows(data.data);\r\n        }\r\n        catch {\r\n            dispatch({ 'type': \"error_StudentClassBlog\", \"payload\": \"error\" });\r\n            H.push('/error');\r\n        }\r\n    }, [onsearch])\r\n    const onSearch = async (e) => {\r\n        onsearchval(e.target.value);\r\n        dispatch({ 'type': 'request_onSearchLinks' })\r\n        try {\r\n            const info = { \"username\": JSON.parse(localStorage.getItem('value')).rollno, \"subject\": e.target.value }\r\n            console.log(info);\r\n            const data = await axios({\r\n                method: \"post\",\r\n                url: BaseUrl + \"onSearchLinkBlog/\",\r\n                headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                responseType: \"json\",\r\n                data: info\r\n            })\r\n            dispatch({ 'type': \"success_onSearchLinks\", \"payload\": data.data });\r\n            setrows(data.data);\r\n        }\r\n        catch {\r\n            dispatch({ 'type': \"error_onSearchLinks\", \"payload\": \"error\" });\r\n        }\r\n    }\r\n    const columns = [\r\n        {\r\n            field: 'posted_by',\r\n            headerName: 'TEACHER',\r\n            width: 130,\r\n            description: 'link was posted by',\r\n        },\r\n        { field: 'subject', headerName: 'SUBJECT', width: 130 },\r\n        {\r\n            field: 'class_day',\r\n            headerName: 'CLASS DAY',\r\n            width: 130,\r\n            description: 'The day when class as been taken',\r\n        },\r\n        {\r\n            field: 'class_time',\r\n            headerName: 'CLASS TIME',\r\n            description: 'The time when class starts',\r\n            width: 160,\r\n        },\r\n        {\r\n            field: 'get_status',\r\n            headerName: 'ATTENDANCE STATUS',\r\n            description: 'Attandence status of this class',\r\n            width: 220,\r\n        },\r\n        {\r\n            field: 'link',\r\n            headerName: 'LINK',\r\n            renderCell: (params) => {\r\n                // console.log(params);\r\n                return (<Link to={params.value} target=\"_blank\">\r\n                    {params.value}\r\n                </Link>\r\n            )\r\n        },\r\n            width: 200,\r\n            description: 'link was posted by',\r\n        },\r\n    ];\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n            flexGrow: 1,\r\n            display: 'none',\r\n            [theme.breakpoints.up('sm')]: {\r\n                display: 'block',\r\n            },\r\n        },\r\n        search: {\r\n            position: 'relative',\r\n            borderRadius: theme.shape.borderRadius,\r\n            backgroundColor: fade(theme.palette.common.white, 0.15),\r\n            '&:hover': {\r\n                backgroundColor: fade(theme.palette.common.white, 0.25),\r\n            },\r\n            marginLeft: 0,\r\n            width: '100%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                marginLeft: theme.spacing(1),\r\n                width: 'auto',\r\n            },\r\n        },\r\n        searchIcon: {\r\n            padding: theme.spacing(0, 2),\r\n            height: '100%',\r\n            position: 'absolute',\r\n            pointerEvents: 'none',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n        inputRoot: {\r\n            color: 'inherit',\r\n        },\r\n        inputInput: {\r\n            padding: theme.spacing(1, 1, 1, 0),\r\n            // vertical padding + font size from searchIcon\r\n            paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n            transition: theme.transitions.create('width'),\r\n            width: '100%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: '12ch',\r\n                '&:focus': {\r\n                    width: '20ch',\r\n                },\r\n            },\r\n        },\r\n    }));\r\n    const useStyles1 = makeStyles((theme) => ({\r\n        root: {\r\n            width: '100%',\r\n        },\r\n        heading: {\r\n            fontSize: theme.typography.pxToRem(15),\r\n            fontWeight: theme.typography.fontWeightRegular,\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n    const classes1 = useStyles1();\r\n    return (\r\n        <>\r\n            <div className=\"loader-spinner\" style={{ visibility: (state.loading) ? \"visible\" : \"hidden\" }}>\r\n                <div className=\"spinner-grow text-success mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-danger mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-warning mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n            <div style={{ visibility: (state.loading) ? \"hidden\" : \"visible\" }}>\r\n                <div className={classes.root}>\r\n                    <AppBar position=\"static\" style={{ background: \"#3f50b5\" }}>\r\n                        <Toolbar>\r\n                            <IconButton\r\n                                edge=\"start\"\r\n                                className={classes.menuButton}\r\n                                color=\"inherit\"\r\n                                aria-label=\"open drawer\">\r\n                                <RefreshIcon onClick={() => { settable((pre) => !pre); onsearchval(\"\") }} />\r\n                            </IconButton>\r\n                            <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                                LINKSBLOG\r\n                        </Typography>\r\n                            <div className={classes.search}>\r\n                                <div className={classes.searchIcon}>\r\n                                    <SearchIcon />\r\n                                </div>\r\n                                <InputBase\r\n                                    value={searchval}\r\n                                    onChange={onSearch}\r\n                                    placeholder=\"Search…\"\r\n                                    classes={{\r\n                                        root: classes.inputRoot,\r\n                                        input: classes.inputInput,\r\n                                    }}\r\n                                    inputProps={{ 'aria-label': 'search' }}\r\n                                />\r\n                            </div>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <div className={classes1.root}>\r\n                        <Accordion>\r\n                            <AccordionSummary style={{ background: \"#d7dff7\", border: \"none !important\" }}\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls=\"panel1a-content\"\r\n                                id=\"panel1a-header\">\r\n                                <Typography className={classes.heading} color=\"primary\" style={{ fontWeight: \"600\" }}>Note <DoubleArrowIcon color=\"primary\" style={{ fontSize: \"1rem\" }} /></Typography>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails style={{ background: \"#d7dff7\", border: \"none !important\" }}>\r\n                                <Typography>\r\n                                    please refresh the page for new updates and\r\n                                    search the attendance with subject name\r\n                                </Typography>\r\n                            </AccordionDetails>\r\n                        </Accordion>\r\n                    </div>\r\n                    <div className=\"loader-spinner\" style={{ visibility: (state1.loading || state2.loading) ? \"visible\" : \"hidden\" }}>\r\n                        <div className=\"spinner-grow text-success mr-1\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                        <div className=\"spinner-grow text-danger mr-1\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                        <div className=\"spinner-grow text-warning mr-1\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ height: 400, width: '100%',visibility: (state1.loading || state2.loading) ? \"hidden\" : \"visible\" }}>\r\n                        <DataGrid rows={rows} columns={columns} pageSize={5} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StudentClassBlog;\r\n","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\QueryBlog\\QueryBlog.jsx",["230","231"],"import React,{useEffect} from 'react';\r\nimport {BaseUrl} from '../App.jsx';\r\nimport axios from 'axios';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\n\r\nconst QueryBlog = () => {\r\n    let state = useSelector(state=>state.signin);\r\n    let dispatch = useDispatch();\r\n    const H = useHistory();\r\n    useEffect(async ()=>{\r\n        let d = new Date();\r\n        const d_s=d.getFullYear()+\"-\"+(d.getMonth()+1)+\"-\"+d.getDate()+\" \"+d.getHours()+\":\"+d.getMinutes()+\":\"+d.getSeconds();\r\n        // e.preventDefault();\r\n        const value=JSON.parse(localStorage.getItem('value'));\r\n        let info = {...value,'date':d_s };\r\n        dispatch({type:'request_signin'});\r\n        try {\r\n            const data = await axios({\r\n                method: \"post\",\r\n                url: BaseUrl+\"studentexists/\",\r\n                headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                data: info,\r\n                responseType: 'json'\r\n            })\r\n            dispatch({type:\"success_signin\",payload:data.data});\r\n            // H.push(`/mainblog`);\r\n        }\r\n        catch {\r\n            dispatch({type:\"error_signin\",payload:\"error\"})\r\n            H.push('/error');\r\n        }\r\n    },[])\r\n    return (\r\n        <>\r\n            <div className=\"loader-spinner\" style={{visibility:(state.loading )? \"visible\" : \"hidden\"}}>\r\n                <div className=\"spinner-grow text-success mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-danger mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-warning mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"container-fluid\" style={{visibility:(state.loading )? \"hidden\" : \"visible\"}}>\r\n                <h1>in QueryBlog</h1>  \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QueryBlog;\r\n","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Dashboard\\DashboardEvent\\DashboardEvent.jsx",["232","233","234","235","236","237","238","239","240"],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Dashboard\\DashboardEvent\\DastboardAddEventArea\\DastboardAddEventArea.jsx",[],{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","severity":1,"message":"246","line":4,"column":8,"nodeType":"247","messageId":"248","endLine":4,"endColumn":14},{"ruleId":"249","severity":1,"message":"250","line":129,"column":41,"nodeType":"251","endLine":129,"endColumn":93},{"ruleId":"249","severity":1,"message":"250","line":130,"column":41,"nodeType":"251","endLine":130,"endColumn":93},{"ruleId":"249","severity":1,"message":"250","line":123,"column":41,"nodeType":"251","endLine":123,"endColumn":93},{"ruleId":"249","severity":1,"message":"250","line":124,"column":41,"nodeType":"251","endLine":124,"endColumn":93},{"ruleId":"245","severity":1,"message":"252","line":1,"column":26,"nodeType":"247","messageId":"248","endLine":1,"endColumn":35},{"ruleId":"249","severity":1,"message":"250","line":126,"column":41,"nodeType":"251","endLine":126,"endColumn":93},{"ruleId":"249","severity":1,"message":"250","line":127,"column":41,"nodeType":"251","endLine":127,"endColumn":93},{"ruleId":"245","severity":1,"message":"253","line":5,"column":8,"nodeType":"247","messageId":"248","endLine":5,"endColumn":16},{"ruleId":"245","severity":1,"message":"254","line":12,"column":9,"nodeType":"247","messageId":"248","endLine":12,"endColumn":18},{"ruleId":"255","severity":1,"message":"256","line":19,"column":15,"nodeType":"257","endLine":41,"endColumn":6},{"ruleId":"255","severity":1,"message":"258","line":41,"column":7,"nodeType":"259","endLine":41,"endColumn":9,"suggestions":"260"},{"ruleId":"249","severity":1,"message":"250","line":166,"column":37,"nodeType":"251","endLine":166,"endColumn":89},{"ruleId":"249","severity":1,"message":"250","line":167,"column":37,"nodeType":"251","endLine":167,"endColumn":89},{"ruleId":"249","severity":1,"message":"261","line":13,"column":21,"nodeType":"251","endLine":13,"endColumn":58},{"ruleId":"249","severity":1,"message":"261","line":16,"column":21,"nodeType":"251","endLine":16,"endColumn":58},{"ruleId":"245","severity":1,"message":"262","line":6,"column":10,"nodeType":"247","messageId":"248","endLine":6,"endColumn":20},{"ruleId":"245","severity":1,"message":"263","line":7,"column":10,"nodeType":"247","messageId":"248","endLine":7,"endColumn":17},{"ruleId":"245","severity":1,"message":"264","line":4,"column":8,"nodeType":"247","messageId":"248","endLine":4,"endColumn":18},{"ruleId":"245","severity":1,"message":"252","line":2,"column":10,"nodeType":"247","messageId":"248","endLine":2,"endColumn":19},{"ruleId":"245","severity":1,"message":"265","line":2,"column":21,"nodeType":"247","messageId":"248","endLine":2,"endColumn":29},{"ruleId":"245","severity":1,"message":"262","line":3,"column":10,"nodeType":"247","messageId":"248","endLine":3,"endColumn":20},{"ruleId":"266","severity":1,"message":"267","line":12,"column":11,"nodeType":"251","endLine":12,"endColumn":80},{"ruleId":"268","severity":1,"message":"269","line":15,"column":15,"nodeType":"270","endLine":15,"endColumn":19},{"ruleId":"245","severity":1,"message":"246","line":2,"column":8,"nodeType":"247","messageId":"248","endLine":2,"endColumn":14},{"ruleId":"271","severity":1,"message":"272","line":90,"column":55,"nodeType":"273","messageId":"274","endLine":90,"endColumn":57},{"ruleId":"245","severity":1,"message":"264","line":5,"column":8,"nodeType":"247","messageId":"248","endLine":5,"endColumn":18},{"ruleId":"255","severity":1,"message":"256","line":18,"column":13,"nodeType":"257","endLine":40,"endColumn":6},{"ruleId":"255","severity":1,"message":"258","line":40,"column":7,"nodeType":"259","endLine":40,"endColumn":9,"suggestions":"275"},{"ruleId":"245","severity":1,"message":"276","line":4,"column":10,"nodeType":"247","messageId":"248","endLine":4,"endColumn":14},{"ruleId":"245","severity":1,"message":"277","line":7,"column":8,"nodeType":"247","messageId":"248","endLine":7,"endColumn":17},{"ruleId":"245","severity":1,"message":"278","line":16,"column":8,"nodeType":"247","messageId":"248","endLine":16,"endColumn":18},{"ruleId":"255","severity":1,"message":"256","line":29,"column":15,"nodeType":"257","endLine":51,"endColumn":6},{"ruleId":"255","severity":1,"message":"258","line":51,"column":7,"nodeType":"259","endLine":51,"endColumn":9,"suggestions":"279"},{"ruleId":"280","severity":1,"message":"281","line":66,"column":32,"nodeType":"257","messageId":"282","endLine":66,"endColumn":34},{"ruleId":"280","severity":1,"message":"281","line":69,"column":21,"nodeType":"257","messageId":"282","endLine":69,"endColumn":23},{"ruleId":"255","severity":1,"message":"256","line":126,"column":15,"nodeType":"257","endLine":146,"endColumn":6},{"ruleId":"255","severity":1,"message":"283","line":146,"column":8,"nodeType":"259","endLine":146,"endColumn":10,"suggestions":"284"},{"ruleId":"245","severity":1,"message":"276","line":3,"column":10,"nodeType":"247","messageId":"248","endLine":3,"endColumn":14},{"ruleId":"245","severity":1,"message":"285","line":4,"column":8,"nodeType":"247","messageId":"248","endLine":4,"endColumn":12},{"ruleId":"245","severity":1,"message":"254","line":5,"column":9,"nodeType":"247","messageId":"248","endLine":5,"endColumn":18},{"ruleId":"245","severity":1,"message":"286","line":6,"column":9,"nodeType":"247","messageId":"248","endLine":6,"endColumn":19},{"ruleId":"245","severity":1,"message":"287","line":12,"column":8,"nodeType":"247","messageId":"248","endLine":12,"endColumn":13},{"ruleId":"245","severity":1,"message":"288","line":33,"column":12,"nodeType":"247","messageId":"248","endLine":33,"endColumn":16},{"ruleId":"245","severity":1,"message":"289","line":33,"column":18,"nodeType":"247","messageId":"248","endLine":33,"endColumn":25},{"ruleId":"245","severity":1,"message":"290","line":41,"column":15,"nodeType":"247","messageId":"248","endLine":41,"endColumn":23},{"ruleId":"249","severity":1,"message":"261","line":9,"column":21,"nodeType":"251","endLine":9,"endColumn":58},{"ruleId":"249","severity":1,"message":"261","line":12,"column":21,"nodeType":"251","endLine":12,"endColumn":58},{"ruleId":"245","severity":1,"message":"291","line":2,"column":8,"nodeType":"247","messageId":"248","endLine":2,"endColumn":15},{"ruleId":"245","severity":1,"message":"292","line":3,"column":8,"nodeType":"247","messageId":"248","endLine":3,"endColumn":11},{"ruleId":"245","severity":1,"message":"262","line":4,"column":10,"nodeType":"247","messageId":"248","endLine":4,"endColumn":20},{"ruleId":"245","severity":1,"message":"293","line":7,"column":8,"nodeType":"247","messageId":"248","endLine":7,"endColumn":19},{"ruleId":"245","severity":1,"message":"294","line":12,"column":8,"nodeType":"247","messageId":"248","endLine":12,"endColumn":19},{"ruleId":"295","severity":1,"message":"296","line":196,"column":52,"nodeType":"297","messageId":"274","endLine":196,"endColumn":58},{"ruleId":"245","severity":1,"message":"298","line":11,"column":8,"nodeType":"247","messageId":"248","endLine":11,"endColumn":16},{"ruleId":"245","severity":1,"message":"299","line":18,"column":8,"nodeType":"247","messageId":"248","endLine":18,"endColumn":21},{"ruleId":"255","severity":1,"message":"256","line":31,"column":15,"nodeType":"257","endLine":53,"endColumn":6},{"ruleId":"255","severity":1,"message":"258","line":53,"column":8,"nodeType":"259","endLine":53,"endColumn":10,"suggestions":"300"},{"ruleId":"255","severity":1,"message":"256","line":55,"column":15,"nodeType":"257","endLine":73,"endColumn":6},{"ruleId":"255","severity":1,"message":"301","line":73,"column":8,"nodeType":"259","endLine":73,"endColumn":15,"suggestions":"302"},{"ruleId":"245","severity":1,"message":"303","line":128,"column":11,"nodeType":"247","messageId":"248","endLine":128,"endColumn":19},{"ruleId":"245","severity":1,"message":"304","line":13,"column":11,"nodeType":"247","messageId":"248","endLine":13,"endColumn":16},{"ruleId":"305","severity":1,"message":"306","line":86,"column":20,"nodeType":"251","endLine":86,"endColumn":57},{"ruleId":"245","severity":1,"message":"298","line":8,"column":8,"nodeType":"247","messageId":"248","endLine":8,"endColumn":16},{"ruleId":"245","severity":1,"message":"307","line":10,"column":20,"nodeType":"247","messageId":"248","endLine":10,"endColumn":29},{"ruleId":"255","severity":1,"message":"256","line":30,"column":15,"nodeType":"257","endLine":51,"endColumn":6},{"ruleId":"255","severity":1,"message":"258","line":51,"column":8,"nodeType":"259","endLine":51,"endColumn":10,"suggestions":"308"},{"ruleId":"255","severity":1,"message":"256","line":53,"column":15,"nodeType":"257","endLine":72,"endColumn":6},{"ruleId":"255","severity":1,"message":"258","line":72,"column":8,"nodeType":"259","endLine":72,"endColumn":18,"suggestions":"309"},{"ruleId":"255","severity":1,"message":"256","line":11,"column":15,"nodeType":"257","endLine":33,"endColumn":6},{"ruleId":"255","severity":1,"message":"258","line":33,"column":7,"nodeType":"259","endLine":33,"endColumn":9,"suggestions":"310"},{"ruleId":"245","severity":1,"message":"311","line":22,"column":11,"nodeType":"247","messageId":"248","endLine":22,"endColumn":18},{"ruleId":"245","severity":1,"message":"304","line":30,"column":11,"nodeType":"247","messageId":"248","endLine":30,"endColumn":16},{"ruleId":"255","severity":1,"message":"256","line":32,"column":15,"nodeType":"257","endLine":54,"endColumn":6},{"ruleId":"255","severity":1,"message":"258","line":54,"column":8,"nodeType":"259","endLine":54,"endColumn":10,"suggestions":"312"},{"ruleId":"255","severity":1,"message":"313","line":66,"column":8,"nodeType":"259","endLine":66,"endColumn":15,"suggestions":"314"},{"ruleId":"245","severity":1,"message":"315","line":78,"column":11,"nodeType":"247","messageId":"248","endLine":78,"endColumn":22},{"ruleId":"245","severity":1,"message":"303","line":133,"column":11,"nodeType":"247","messageId":"248","endLine":133,"endColumn":19},{"ruleId":"271","severity":1,"message":"316","line":177,"column":108,"nodeType":"273","messageId":"274","endLine":177,"endColumn":110},{"ruleId":"271","severity":1,"message":"316","line":181,"column":77,"nodeType":"273","messageId":"274","endLine":181,"endColumn":79},"no-native-reassign",["317"],"no-negated-in-lhs",["318"],"no-unused-vars","'Avatar' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'MainCard' is defined but never used.","'useParams' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'H' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["319"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'makeStyles' is defined but never used.","'flexbox' is defined but never used.","'attendance' is defined but never used.","'useState' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","jsx-a11y/aria-role","Elements with ARIA roles must use a valid, non-abstract ARIA role.","JSXAttribute","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["320"],"'Link' is defined but never used.","'InputBase' is defined but never used.","'SearchIcon' is defined but never used.",["321"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has missing dependencies: 'dispatch', 'section', and 'subject'. Either include them or remove the dependency array.",["322"],"'icon' is defined but never used.","'useHistory' is defined but never used.","'Modal' is defined but never used.","'link' is assigned a value but never used.","'setlink' is assigned a value but never used.","'tempLink' is assigned a value but never used.","'AddIcon' is defined but never used.","'Add' is defined but never used.","'htmlToDraft' is defined but never used.","'transitions' is defined but never used.","no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","'MenuIcon' is defined but never used.","'AddCircleIcon' is defined but never used.",["323"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["324"],"'classes1' is assigned a value but never used.","'state' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'getColDef' is defined but never used.",["325"],["326"],["327"],"'classes' is assigned a value but never used.",["328"],"React Hook useEffect has missing dependencies: 'endDay' and 'startDay'. Either include them or remove the dependency array.",["329"],"'beforeToday' is assigned a value but never used.","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"330","fix":"331"},{"desc":"330","fix":"332"},{"desc":"330","fix":"333"},{"desc":"334","fix":"335"},{"desc":"330","fix":"336"},{"desc":"337","fix":"338"},{"desc":"330","fix":"339"},{"desc":"340","fix":"341"},{"desc":"330","fix":"342"},{"desc":"330","fix":"343"},{"desc":"344","fix":"345"},"Update the dependencies array to be: [H, dispatch]",{"range":"346","text":"347"},{"range":"348","text":"347"},{"range":"349","text":"347"},"Update the dependencies array to be: [dispatch, section, subject]",{"range":"350","text":"351"},{"range":"352","text":"347"},"Update the dependencies array to be: [dispatch, onadd]",{"range":"353","text":"354"},{"range":"355","text":"347"},"Update the dependencies array to be: [H, dispatch, onsearch]",{"range":"356","text":"357"},{"range":"358","text":"347"},{"range":"359","text":"347"},"Update the dependencies array to be: [endDay, startDay, value]",{"range":"360","text":"361"},[1646,1648],"[H, dispatch]",[1644,1646],[2404,2406],[5915,5917],"[dispatch, section, subject]",[2374,2376],[3255,3262],"[dispatch, onadd]",[2444,2446],[3295,3305],"[H, dispatch, onsearch]",[1273,1275],[2253,2255],[2599,2606],"[endDay, startDay, value]"]