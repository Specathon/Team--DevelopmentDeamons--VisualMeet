[{"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\index.js":"1","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Welcome\\Welcome.js":"2","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\TeacherSignUp\\TeacherSignUp.jsx":"3","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\SignIn\\SignIn.jsx":"4","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\TeacherSignIn\\TeacherSignIn.jsx":"5","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Mainblog\\Mainblog.jsx":"6","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\SignUp\\SignUp.jsx":"7","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Header\\Header.jsx":"8","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\scrollLogin\\scrollLogin.jsx":"9","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\TeacherSignUp\\Avatar\\Avatar.jsx":"10","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\SignIn\\Avatar\\Avatar.jsx":"11","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Mainblog\\MainCard.jsx":"12","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\SignUp\\Avatar\\Avatar.jsx":"13","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\hook\\useWindowPosition.js":"14","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\LoginCard\\LoginCard.jsx":"15","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\App.jsx":"16","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\forgotpass\\forgotpass.jsx":"17","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\forgotpass\\Avatar\\Avatar.jsx":"18","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\attendance\\attendance.jsx":"19","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\teacherblog\\teacherblog.jsx":"20","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\resetpass\\Resetpass.jsx":"21","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\redux\\store.jsx":"22","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\redux\\reducers.jsx":"23","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\takeattendance\\takeattendance.jsx":"24"},{"size":265,"mtime":1610526945339,"results":"25","hashOfConfig":"26"},{"size":1209,"mtime":1610789239422,"results":"27","hashOfConfig":"26"},{"size":6364,"mtime":1610721721039,"results":"28","hashOfConfig":"26"},{"size":6331,"mtime":1611123672008,"results":"29","hashOfConfig":"26"},{"size":6471,"mtime":1611062909746,"results":"30","hashOfConfig":"26"},{"size":4783,"mtime":1611122405488,"results":"31","hashOfConfig":"26"},{"size":8135,"mtime":1611123678162,"results":"32","hashOfConfig":"26"},{"size":2860,"mtime":1610789397228,"results":"33","hashOfConfig":"26"},{"size":1099,"mtime":1610789305352,"results":"34","hashOfConfig":"26"},{"size":419,"mtime":1610426897691,"results":"35","hashOfConfig":"26"},{"size":419,"mtime":1610426896802,"results":"36","hashOfConfig":"26"},{"size":782,"mtime":1610284952701,"results":"37","hashOfConfig":"26"},{"size":419,"mtime":1610426897544,"results":"38","hashOfConfig":"26"},{"size":685,"mtime":1610260051695,"results":"39","hashOfConfig":"26"},{"size":765,"mtime":1610287100771,"results":"40","hashOfConfig":"26"},{"size":2591,"mtime":1611139186084,"results":"41","hashOfConfig":"26"},{"size":4994,"mtime":1611062787513,"results":"42","hashOfConfig":"26"},{"size":419,"mtime":1610518631294,"results":"43","hashOfConfig":"26"},{"size":135,"mtime":1610789876279,"results":"44","hashOfConfig":"26"},{"size":196,"mtime":1611038035650,"results":"45","hashOfConfig":"26"},{"size":5410,"mtime":1611062860453,"results":"46","hashOfConfig":"26"},{"size":650,"mtime":1611135870279,"results":"47","hashOfConfig":"26"},{"size":674,"mtime":1611039806674,"results":"48","hashOfConfig":"26"},{"size":13341,"mtime":1611140713730,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"2xcyq1",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\index.js",[],["111","112"],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Welcome\\Welcome.js",[],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\TeacherSignUp\\TeacherSignUp.jsx",["113","114","115"],"import React, { useState } from 'react';\r\nimport \"./TeacherSignUp.scss\";\r\nimport signUp from \"../assets/signUp.svg\";\r\nimport Avatar from \"./Avatar/Avatar\";\r\nimport wave from \"../assets/wave.png\";\r\nimport teacher from \"../assets/teacherPic.png\"\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nconst TeacherSignUp = () => {\r\n    const H = useHistory();\r\n    const [gender, setgender] = useState(1);\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [value, setValue] = useState('');\r\n    const [isActivePass, setIsActivePass] = useState(false);\r\n    const [valuePass, setValuePass] = useState('');\r\n    const [isActiveEmail, setIsActiveEmail] = useState(false);\r\n    const [valueEmail, setValueEmail] = useState('');\r\n    const [vis, setvis] = useState(\"hidden\");\r\n    const handleTextChange = (text) => {\r\n        setValue(text);\r\n\r\n        if (text !== '') {\r\n            setIsActive(true);\r\n        } else {\r\n            setIsActive(false);\r\n        }\r\n    }\r\n    const handleTextChangePass = (text) => {\r\n        setValuePass(text);\r\n\r\n        if (text !== '') {\r\n            setIsActivePass(true);\r\n        } else {\r\n            setIsActivePass(false);\r\n        }\r\n    }\r\n    const handleTextChangeEmail = (text) => {\r\n        setValueEmail(text);\r\n\r\n        if (text !== '') {\r\n            setIsActiveEmail(true);\r\n        } else {\r\n            setIsActiveEmail(false);\r\n        }\r\n    }\r\n\r\n    const changeGender = () => {\r\n        if (gender === 1) {\r\n            setgender(0);\r\n            console.log(gender);\r\n        }\r\n        else {\r\n            setgender(1);\r\n            console.log(gender);\r\n        }\r\n    }\r\n    const submitMember = async (event) => {\r\n        let d = new Date();\r\n        const d_s=d.getFullYear()+\" \"+d.getHours()+\":\"+d.getMinutes()+\":\"+d.getSeconds();\r\n        event.preventDefault();\r\n        console.log(`${gender} ${value} ${valueEmail} ${valuePass}`);\r\n        const info = { \"gender\": gender, \"username\": value, \"email\": valueEmail, \"password\": valuePass,\"lastloginat\":d_s }\r\n        try {\r\n            console.log(\"hiii\");\r\n            let data = await axios({\r\n                method: 'post',\r\n                url: 'http://127.0.0.1:8000/teacherStore/',\r\n                headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                data: info,\r\n                responseType: 'json'\r\n            });\r\n            console.log(data);\r\n            const fun = () => H.push(`/mainblog/${value}`);\r\n            fun();\r\n        }\r\n        catch {\r\n            setvis(\"visible\")\r\n            console.log(\"error\");\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"alert alert-danger alert-dismissible fade show m-0 px-2\" style={{ \"visibility\": vis }} role=\"alert\">\r\n                rollnumber or email already exists\r\n            </div>\r\n            <div className=\"signUpPage wholeteachersignup\">\r\n                <img className=\"wave\" src={wave} alt=\"wallpaper\"></img>\r\n                <div className=\"container\">\r\n                    <img src={signUp} alt=\"sigup\" className=\"img\"></img>\r\n                    <div className=\"login-content\">\r\n                        <form className=\"form\">\r\n                            <h2 className=\"title\">SignUP</h2>\r\n                            <img src={teacher} alt=\"Teacher profile pic\"></img>\r\n                            <div class=\"input-div one mt-3\">\r\n                                <div class=\"i\">\r\n                                    <i class=\"fas fa-user\"></i>\r\n                                </div>\r\n                                <div class=\"div\">\r\n                                    <h5 className={isActive ? \"Active\" : \"\"}>ID-Number</h5>\r\n                                    <input type=\"text\" class=\"input\" value={value}\r\n                                        onChange={(e) => handleTextChange(e.target.value)} required></input>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"input-div one\">\r\n                                <div class=\"i\">\r\n                                    <i class=\"fas fa-user\"></i>\r\n                                </div>\r\n                                <div class=\"div\">\r\n                                    <h5 className={isActiveEmail ? \"Active\" : \"\"}>Email</h5>\r\n                                    <input type=\"email\" class=\"input\" value={valueEmail}\r\n                                        onChange={(e) => handleTextChangeEmail(e.target.value)} required></input>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"input-div pass\">\r\n                                <div class=\"i\">\r\n                                    <i class=\"fas fa-lock\"></i>\r\n                                </div>\r\n                                <div class=\"div\">\r\n                                    <h5 className={isActivePass ? \"Active\" : \"\"}>Password</h5>\r\n                                    <input type=\"password\" class=\"input\" value={valuePass}\r\n                                        onChange={(e) => handleTextChangePass(e.target.value)} required></input>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"btn-group\">\r\n                                <button type=\"button\" className=\"btn btn-success dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    {gender === 1 ? \"Male\" : \"Female\"}\r\n                                </button>\r\n                                <ul className=\"dropdown-menu\">\r\n                                    <li><a className=\"dropdown-item\" onClick={changeGender}>Male</a></li>\r\n                                    <li><a className=\"dropdown-item\" onClick={changeGender}>Female</a></li>\r\n                                </ul>\r\n                            </div>\r\n                            <br />\r\n                            <a href=\"/TeacherSignIn\" className=\"have\" m-auto>Already a Member?</a>\r\n                            <input type=\"submit\" onClick={submitMember} class=\"btn\" value=\"SignUp\"></input>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TeacherSignUp;","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\SignIn\\SignIn.jsx",["116","117"],"import React, { useState } from 'react';\r\nimport \"./SignIn.scss\";\r\nimport signInpic1 from \"../assets/signInpic1.svg\";\r\nimport Avatar from \"./Avatar/Avatar\";\r\nimport wave from \"../assets/wave.png\";\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {BaseUrl} from '../App.jsx';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nconst SignIn = () => {\r\n    let state = useSelector(state=>state.signin);\r\n    let dispatch = useDispatch();\r\n    const H = useHistory();\r\n    const [gender, setgender] = useState(1);\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [value, setValue] = useState('');\r\n    const [isActivePass, setIsActivePass] = useState(false);\r\n    const [valuePass, setValuePass] = useState('');\r\n    const [vis,setvis] = useState(\"hidden\");\r\n    const handleTextChange = (text) => {\r\n        setValue(text);\r\n        if (text !== '') {\r\n            setIsActive(true);\r\n        } else {\r\n            setIsActive(false);\r\n        }\r\n    }\r\n\r\n    const handleTextChangePass = (text) => {\r\n        setValuePass(text);\r\n\r\n        if (text !== '') {\r\n            setIsActivePass(true);\r\n        } else {\r\n            setIsActivePass(false);\r\n        }\r\n    }\r\n\r\n    const changeGender = () => {\r\n        if (gender === 1) {\r\n            setgender(0);\r\n            console.log(gender);\r\n        }\r\n        else {\r\n            setgender(1);\r\n            console.log(gender);\r\n        }\r\n    }\r\n    const onsubmitlogin = async (e) => {\r\n        let d = new Date();\r\n        const d_s=d.getFullYear()+\"-\"+(d.getMonth()+1)+\"-\"+d.getDate()+\" \"+d.getHours()+\":\"+d.getMinutes()+\":\"+d.getSeconds();\r\n        e.preventDefault();\r\n        let info = { \"gender\": gender, \"rollno\": value, \"password\": valuePass,'date':d_s }\r\n        dispatch({type:'request_signin'});\r\n        try {\r\n            const data = await axios({\r\n                method: \"post\",\r\n                url: BaseUrl+\"studentexists/\",\r\n                headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                data: info,\r\n                responseType: 'json'\r\n            })\r\n            dispatch({type:\"success_signin\",payload:data.data})\r\n            console.log(\"hii\");\r\n            console.log(data.data);\r\n            H.push(`/mainblog/${value}`);\r\n        }\r\n        catch {\r\n            dispatch({type:\"error_signin\",payload:\"error\"})\r\n            setvis(\"visible\")\r\n            console.log(\"error\");\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"alert text-center alert-danger alert-dismissible fade show m-0 px-2\" style={{ \"visibility\": vis }} role=\"alert\">\r\n                invalid details provided\r\n            </div>\r\n            <div className=\"loader-spinner\" style={{visibility:(state.loading )? \"visible\" : \"hidden\"}}>\r\n                <div className=\"spinner-grow text-success mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-danger mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-warning mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"signUpPage whole\" style={{visibility:(state.loading )? \"hidden\" : \"visible\"}}>\r\n                <img className=\"wave\" src={wave} alt=\"wallpaper\"></img>\r\n                <div className=\"container\">\r\n                    <img src={signInpic1} alt=\"sigup\" className=\"img\" mb-5 style={{ top: \"4rem\" }}></img>\r\n                    <div className=\"login-content\">\r\n                        <form className=\"form\">\r\n                            <h2 className=\"title\">SignIn</h2>\r\n                            <Avatar gender={gender} ></Avatar>\r\n                            <div class=\"input-div one mt-5\">\r\n                                <div class=\"i\">\r\n                                    <i class=\"fas fa-user\"></i>\r\n                                </div>\r\n                                <div class=\"div\">\r\n                                    <h5 className={isActive ? \"Active\" : \"\"}>RollNumber/Email</h5>\r\n                                    <input type=\"text\" class=\"input\" value={value}\r\n                                        onChange={(e) => handleTextChange(e.target.value)} required></input>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"input-div pass\">\r\n                                <div class=\"i\">\r\n                                    <i class=\"fas fa-lock\"></i>\r\n                                </div>\r\n                                <div class=\"div\">\r\n                                    <h5 className={isActivePass ? \"Active\" : \"\"}>Password</h5>\r\n                                    <input type=\"password\" class=\"input\" value={valuePass}\r\n                                        onChange={(e) => handleTextChangePass(e.target.value)} required></input>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"btn-group\">\r\n                                <button type=\"button\" className=\"btn btn-success dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    {gender === 1 ? \"Male\" : \"Female\"}\r\n                                </button>\r\n                                <ul className=\"dropdown-menu\">\r\n                                    <li><a className=\"dropdown-item\" onClick={changeGender}>Male</a></li>\r\n                                    <li><a className=\"dropdown-item\" onClick={changeGender}>Female</a></li>\r\n                                </ul>\r\n                            </div>\r\n                            <br />\r\n                            <a href=\"/SignUp\" className=\"have mr-3\">New to Visual Meet?</a>\r\n                            <a href=\"/forgotpass\">Forgot Password?</a>\r\n                            <input type=\"submit\" className=\"btn\" onClick={onsubmitlogin} value=\"Login\"></input>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SignIn;","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\TeacherSignIn\\TeacherSignIn.jsx",["118","119"],"import React, { useState } from 'react';\r\nimport \"./TeacherSignIn.scss\";\r\n// import '../SignIn/SignIn'\r\nimport signInpic1 from \"../assets/signInpic1.svg\";\r\nimport wave from \"../assets/wave.png\";\r\nimport teacher from \"../assets/teacher.png\";\r\nimport axios from 'axios';\r\nimport {BaseUrl} from '../App.jsx';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nconst TeacherSignIn = () => {\r\n    let state = useSelector(state=>state.teachersignin);\r\n    let dispatch = useDispatch();\r\n    const H = useHistory();\r\n    const [gender, setgender] = useState(1);\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [value, setValue] = useState('');\r\n    const [isActivePass, setIsActivePass] = useState(false);\r\n    const [valuePass, setValuePass] = useState('');\r\n    const [vis, setvis] = useState(\"hidden\");\r\n\r\n    const handleTextChange = (text) => {\r\n        setValue(text);\r\n\r\n        if (text !== '') {\r\n            setIsActive(true);\r\n        } else {\r\n            setIsActive(false);\r\n        }\r\n    }\r\n\r\n    const handleTextChangePass = (text) => {\r\n        setValuePass(text);\r\n\r\n        if (text !== '') {\r\n            setIsActivePass(true);\r\n        } else {\r\n            setIsActivePass(false);\r\n        }\r\n    }\r\n\r\n    const changeGender = () => {\r\n        if (gender === 1) {\r\n            setgender(0);\r\n            console.log(gender);\r\n        }\r\n        else {\r\n            setgender(1);\r\n            console.log(gender);\r\n        }\r\n    }\r\n    const onsubmitlogin = async (e) => {\r\n        let d = new Date();\r\n        const d_s=d.getFullYear()+\"-\"+(d.getMonth()+1)+\"-\"+d.getDate()+\" \"+d.getHours()+\":\"+d.getMinutes()+\":\"+d.getSeconds();\r\n        e.preventDefault();\r\n        console.log(d_s)\r\n        let info = { \"gender\": gender, \"rollno\": value, \"password\": valuePass,\"date\":d_s }\r\n        dispatch({type:\"request_teachersignin\"});\r\n        try {\r\n            const data = await axios({\r\n                method: \"post\",\r\n                url: BaseUrl+\"teacherexists/\",\r\n                headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                data: info,\r\n                responseType: 'json'\r\n            })\r\n            dispatch({type:\"success_teachersignin\",payload:data.data});\r\n            console.log(\"hii\");\r\n            console.log(data.data);\r\n            H.push(`/teacherblog`);\r\n        }\r\n        catch {\r\n            dispatch({type:\"error_teachersignin\",payload:\"error\"});\r\n            setvis(\"visible\");\r\n            console.log(\"error\");\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"alert alert-danger alert-dismissible fade show m-0 px-2\" style={{ \"visibility\": vis }} role=\"alert\">\r\n                invalid details provided\r\n            </div>\r\n            <div className=\"loader-spinner\" style={{visibility:(state.loading )? \"visible\" : \"hidden\"}}>\r\n                <div className=\"spinner-grow text-success mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-danger mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-warning mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"signUpPage wholeteachersignin\" style={{visibility:(state.loading )? \"hidden\" : \"visible\"}}>\r\n                <img className=\"wave\" src={wave} alt=\"wallpaper\"></img>\r\n                <div className=\"container\">\r\n                    <img src={signInpic1} alt=\"sigup\" className=\"img\" mb-5 style={{ top: \"4rem\" }}></img>\r\n                    <div className=\"login-content\">\r\n                        <form className=\"form\">\r\n                            <h2 className=\"title\">SignIn</h2>\r\n                            <img src={teacher} alt=\"Teacher profile pic\"></img>\r\n                            <div class=\"input-div one mt-4\">\r\n                                <div class=\"i\">\r\n                                    <i class=\"fas fa-user\"></i>\r\n                                </div>\r\n                                <div class=\"div\">\r\n                                    <h5 className={isActive ? \"Active\" : \"\"}>Id-Number/Email</h5>\r\n                                    <input type=\"text\" class=\"input\" value={value}\r\n                                        onChange={(e) => handleTextChange(e.target.value)} required></input>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"input-div pass\">\r\n                                <div class=\"i\">\r\n                                    <i class=\"fas fa-lock\"></i>\r\n                                </div>\r\n                                <div class=\"div\">\r\n                                    <h5 className={isActivePass ? \"Active\" : \"\"}>Password</h5>\r\n                                    <input type=\"password\" class=\"input\" value={valuePass}\r\n                                        onChange={(e) => handleTextChangePass(e.target.value)} required></input>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"btn-group\">\r\n                                <button type=\"button\" className=\"btn btn-success dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    {gender === 1 ? \"Male\" : \"Female\"}\r\n                                </button>\r\n                                <ul className=\"dropdown-menu\">\r\n                                    <li><a className=\"dropdown-item\" onClick={changeGender}>Male</a></li>\r\n                                    <li><a className=\"dropdown-item\" onClick={changeGender}>Female</a></li>\r\n                                </ul>\r\n                            </div>\r\n                            <br />\r\n                            <a href=\"/TeacherSignUp\" className=\"have\">New to Visual Meet?</a>\r\n                            <a href=\"/forgotpassteacher\">Forgot Password?</a>\r\n                            <input type=\"submit\" onClick={onsubmitlogin} className=\"btn\" value=\"Login\"></input>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TeacherSignIn;","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Mainblog\\Mainblog.jsx",["120"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport icon from '../assets/icon.png';\r\nimport MainCard from './MainCard';\r\nimport attendance from '../assets/attendance.jpg'\r\nimport classlinks from '../assets/classlinks.png'\r\nimport queries from '../assets/query-board.png'\r\nimport event from '../assets/calendar.png'\r\nimport './Mainblog.scss';\r\nimport {useParams} from 'react-router';\r\nimport {useHistory} from 'react-router-dom';\r\nconst Mainblog = () => {\r\n    const H = useHistory();\r\n    let {user} = useParams();\r\n    let props = [{ \"image\": attendance, \"title\": \"\", \"info\": \"ATTENDANCE\",\"link\":\"/attendance\" }, { \"image\": classlinks, \"title\": \"\", \"info\": \"CLASSLINKS\" }, { \"image\": queries, \"title\": \"\", \"info\": \"QUERYBLOG\" },\r\n    { \"image\": event, \"title\": \"\", \"info\": \"EVENTS\" }]\r\n    return (\r\n        <div>\r\n            <div className=\"container-fluid\" style={{ \"background\": \"#d7dff7\" }}>\r\n                <div className=\"row fixed-top\">\r\n                    <div className=\"col-12 navbar navbar-light bg-dark\">\r\n                        <div className=\"\">\r\n                            <Link className=\"navbar-brand\" >\r\n                                <img src={icon} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"\" />\r\n                                <label className=\"ml-2 text-white\">hii {user}</label>\r\n                            </Link>\r\n                        </div>\r\n                        <label className=\"ml-auto text-white mt-1 text-center\">\r\n                            VISUAL MEET\r\n                                </label>\r\n                        <div className=\"ml-auto\">\r\n                            <button className=\"btn btn-outline-danger mr-2\" onClick={()=>H.push(\"/\")}>logout</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container mt-5\" >\r\n                    <div className=\"row ml-sm-5\" style={{ \"marginTop\": \"8rem\" }}>\r\n                        {/* {data.map((v)=><MainCard image={v.image} title={v.info} info={v.title}/>)} */}\r\n                        <div className=\"card MainCard h-100 my-5 mx-auto px-0 rounded-lg shadow\" style={{ \"width\": \"15rem\", \"height\": \"12rem\" }}>\r\n                            <img src={attendance} className=\"card-img-top img-responsive\" alt=\"...\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">{props[0].title}</h5>\r\n                                <p className=\"card-text\">{props[0].info}</p>\r\n                                <Link to={props[0].link} className=\"btn btn-primary\">click to view...</Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card MainCard h-100  my-5 mx-auto px-0 rounded-lg shadow\" style={{ \"width\": \"15rem\", \"height\": \"12rem\" }}>\r\n<img src={classlinks} className=\"card-img-top img-responsive\" alt=\"...\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">{props[1].title}</h5>\r\n                                <p className=\"card-text\">{props[1].info}</p>\r\n                                                            <Link to={props[1].link} className=\"btn btn-primary\">click to view...</Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card MainCard h-100  my-5  mx-auto  rounded-lg shadow\" style={{ \"width\": \"15rem\", \"height\": \"12rem\" }}>\r\n                            <img src={queries} className=\"card-img-top img-responsive\" alt=\"...\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">{props[2].title}</h5>\r\n                                <p className=\"card-text\">{props[2].info}</p>\r\n                                <Link to={props[2].link} className=\"btn btn-primary\">click to view...</Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card MainCard h-100  my-5  mx-auto rounded-lg shadow\" style={{ \"width\": \"15rem\", \"height\": \"12rem\" }}>\r\n                            <img src={event} className=\"card-img-top img-responsive\" alt=\"...\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">{props[3].title}</h5>\r\n                                <p className=\"card-text\">{props[3].info}</p>\r\n                                <Link to={props[3].link} className=\"btn btn-primary\">click to view...</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Mainblog\r\n","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\SignUp\\SignUp.jsx",["121","122"],"import React, { useState } from 'react';\r\nimport \"./SignUp.scss\";\r\nimport signUp from \"../assets/signUp.svg\";\r\nimport Avatar from \"./Avatar/Avatar\";\r\nimport wave from \"../assets/wave.png\";\r\nimport axios from 'axios';\r\nimport {BaseUrl} from '../App.jsx';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nconst SignUp = () => {\r\n    let state=useSelector(state=>state.signup);\r\n    let dispatch = useDispatch();\r\n    const [gender, setgender] = useState(1);\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [isActiveSection, setIsActiveSection] = useState(false);\r\n    const [value, setValue] = useState('');\r\n    const [isActivePass, setIsActivePass] = useState(false);\r\n    const [valuePass, setValuePass] = useState('');\r\n    const [isActiveEmail, setIsActiveEmail] = useState(false);\r\n    const [valueEmail, setValueEmail] = useState('');\r\n    const [section,setSection] = useState('');\r\n    const H = useHistory();\r\n    const [vis, setvis] = useState(\"hidden\");\r\n    const handleTextChange = (text) => {\r\n        setValue(text);\r\n        if (text !== '') {\r\n            setIsActive(true);\r\n        } else {\r\n            setIsActive(false);\r\n        }\r\n    }\r\n    const handleTextChangePass = (text) => {\r\n        setValuePass(text);\r\n\r\n        if (text !== '') {\r\n            setIsActivePass(true);\r\n        } else {\r\n            setIsActivePass(false);\r\n        }\r\n    }\r\n    const handleTextChangeEmail = (text) => {\r\n        setValueEmail(text);\r\n\r\n        if (text !== '') {\r\n            setIsActiveEmail(true);\r\n        } else {\r\n            setIsActiveEmail(false);\r\n        }\r\n    }\r\n    const handleTextChangeSection = (text) => {\r\n        setSection(text);\r\n        if (text !== '') {\r\n            setIsActiveSection(true);\r\n        } else {\r\n            setIsActiveSection(false);\r\n        }\r\n    }\r\n    const changeGender = () => {\r\n        if (gender === 1) {\r\n            setgender(0);\r\n            console.log(gender);\r\n        }\r\n        else {\r\n            setgender(1);\r\n            console.log(gender);\r\n        }\r\n    }\r\n    const submitMember = async (event) => {\r\n        event.preventDefault();\r\n        let d = new Date();\r\n        const d_s=d.getFullYear()+\"-\"+(d.getMonth()+1)+\"-\"+d.getDate()+\" \"+d.getHours()+\":\"+d.getMinutes()+\":\"+d.getSeconds();\r\n        console.log(d_s);\r\n        console.log(`${gender} ${value} ${valueEmail} ${valuePass}`);\r\n        const info = { \"gender\": gender,\"section\":section, \"username\": value, \"rollno\": value, \"email\": valueEmail, \"password\": valuePass,\"lastloginat\":d_s }\r\n        dispatch({type:\"request_signup\"});\r\n        try {\r\n            console.log(\"hiii\");\r\n            let data = await axios({\r\n                method: 'post',\r\n                url: BaseUrl+'studentStore/',\r\n                headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                data: info,\r\n                responseType: 'json'\r\n            });\r\n            dispatch({type:\"success_signup\",payload:data.data});\r\n            console.log(data);\r\n            const fun = () => H.push(`/mainblog/${value}`);\r\n            fun();\r\n        }\r\n        catch {\r\n            dispatch({type:\"error_signup\",payload:'error'});\r\n            setvis(\"visible\")\r\n            console.log(\"error\");\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"alert text-center alert-danger alert-dismissible fade show m-0 px-2\" style={{ \"visibility\": vis }} role=\"alert\">\r\n                rollnumber or email already exists\r\n        </div>\r\n        <div className=\"loader-spinner\" style={{visibility:(state.loading )? \"visible\" : \"hidden\"}}>\r\n            <div className=\"spinner-grow text-success mr-1\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-danger mr-1\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-warning mr-1\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n        <div className=\"signUpPage wholesignup\" style={{visibility:(state.loading )? \"hidden\" : \"visible\"}}>\r\n            <img className=\"wave\" src={wave} alt=\"wallpaper\"></img>\r\n            <div className=\"container\"  >\r\n                <img src={signUp} alt=\"sigup\" className=\"img\"></img>\r\n                <div className=\"login-content\">\r\n                    <form className=\"form\">\r\n                        <h2 className=\"title\">SignUP</h2>\r\n                        <Avatar gender={gender}></Avatar>\r\n                        <div className=\"input-div one mt-3\">\r\n                            <div className=\"i\">\r\n                                <i className=\"fas fa-user\"></i>\r\n                            </div>\r\n                            <div className=\"div\">\r\n                                <h5 className={isActive ? \"Active\" : \"\"}>RollNumber</h5>\r\n                                <input type=\"text\" className=\"input\" value={value}\r\n                                    onChange={(e) => handleTextChange(e.target.value)} required></input>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"input-div one\">\r\n                            <div className=\"i\">\r\n                                <i className=\"fas fa-user\"></i>\r\n                            </div>\r\n                            <div className=\"div\">\r\n                                <h5 className={isActiveEmail ? \"Active\" : \"\"}>Email</h5>\r\n                                <input type=\"email\" class=\"input\" value={valueEmail}\r\n                                    onChange={(e) => handleTextChangeEmail(e.target.value)} required></input>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"input-div pass\">\r\n                            <div className=\"i\">\r\n                                <i className=\"fas fa-lock\"></i>\r\n                            </div>\r\n                            <div className=\"div\">\r\n                                <h5 className={isActivePass ? \"Active\" : \"\"}>Password</h5>\r\n                                <input type=\"password\" class=\"input\" value={valuePass}\r\n                                    onChange={(e) => handleTextChangePass(e.target.value)} required></input>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"input-div pass\">\r\n                            <div className=\"i\">\r\n                                <i className=\"fas fa-lock\"></i>\r\n                            </div>\r\n                            <div className=\"div\">\r\n                                <h5 className={isActiveSection ? \"Active\":\"\"}>section</h5>\r\n                                <input type=\"text\" class=\"input\" value={section}\r\n                                    onChange={(e) => handleTextChangeSection(e.target.value)} required></input>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"btn-group\">\r\n                            <button type=\"button\" className=\"btn btn-success dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                {gender === 1 ? \"Male\" : \"Female\"}\r\n                            </button>\r\n                            <ul className=\"dropdown-menu\">\r\n                                <li><a className=\"dropdown-item\" onClick={changeGender}>Male</a></li>\r\n                                <li><a className=\"dropdown-item\" onClick={changeGender}>Female</a></li>\r\n                            </ul>\r\n                        </div>\r\n                        <br />\r\n                        <a href=\"/SignIn\" className=\"have\" m-auto>Already a Member?</a>\r\n                        <input type=\"submit\" className=\"btn\" onClick={submitMember} value=\"SignUp\"></input>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SignUp;","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Header\\Header.jsx",["123","124"],"import React from 'react';\r\nimport './Header.scss';\r\nimport { Link } from 'react-scroll';\r\nimport icon from \"../assets/icon.png\";\r\nimport './Header.scss';\r\nimport '../scrollLogin/scrollLogin.scss';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <>\r\n            <nav className=\"navbar fixed-top navbar-expand-lg navbar-dark bg-dark\">\r\n                <div class=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"#\">\r\n                        <img src={icon} width=\"40\" height=\"40\" alt=\"\" style={{ borderRadius: '10px' }}></img>\r\n                    </a>\r\n                    <a className=\"navbar-brand\" href=\"#\">VISUAL MEET</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav ml-auto mr-3\">\r\n                            <li class=\"nav-item\">\r\n                                <Link className=\"ml-auto mr-3\" to=\"login-center\" smooth={true} style={{ color: \"#fff\" }}><button className=\"signin\">LOGIN</button></Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"ml-auto mr-3\" href=\"/SignUp\" style={{ color: \"#fff\" }}>\r\n                                    <button type=\"button\" className=\"btn btn-outline-warning ml-2\"><span>SIGNUP</span></button>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    {/* <a className=\"navbar-brand\" href=\"#\">\r\n                        <img src={icon} width=\"40\" height=\"40\" alt=\"\" style={{ borderRadius: '10px' }}></img>\r\n                    </a>\r\n                    <a className=\"navbar-brand\" href=\"/mainblog\">Virtual Meet</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n                        <Link className=\" signin ml-auto mr-3 text-white\" to=\"login-center\" smooth={true}>Sign in</Link>\r\n                        <button type=\"button\" className=\"btn btn-outline-warning ml-2\">Register</button>\r\n                    </div> */}\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n\r\n","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\scrollLogin\\scrollLogin.jsx",["125","126"],"import React from 'react';\r\nimport \"../scrollLogin/scrollLogin.scss\";\r\nimport LoginCard from \"../LoginCard/LoginCard\";\r\nimport teacher from \"../assets/teacher.png\";\r\nimport student from \"../assets/students.png\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { flexbox } from '@material-ui/system';\r\nimport useWindowPosition from '../hook/useWindowPosition';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst ScrollLogin = () =>{\r\n    const checked = useWindowPosition(\"welcome\");\r\n    return(\r\n        <>\r\n        <div className=\"pageTwo\"  id=\"login-center\">\r\n            <Link className=\"link1\" to=\"/TeacherSignIn\">\r\n                <LoginCard image={teacher} role=\"Teacher\" desc=\"Please Click on this card to SignIn as a Teacher\" checked={checked}></LoginCard>\r\n            </Link>\r\n            <Link to =\"/SignIn\" className=\"link1\">\r\n                <LoginCard image={student} role=\"Student\" desc=\"Please Click on this card to SignIn as a Student\" checked={checked}></LoginCard>\r\n            </Link>\r\n        </div>\r\n        \r\n        </>\r\n    );\r\n}\r\n\r\nexport default ScrollLogin;","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\TeacherSignUp\\Avatar\\Avatar.jsx",[],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\SignIn\\Avatar\\Avatar.jsx",[],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Mainblog\\MainCard.jsx",["127"],"import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n// import './Mainblog.scss'\r\nimport attendance from '../assets/attendance.jpg'\r\nconst MainCard = (props) => {\r\n    console.log(props);\r\n    return (\r\n        <>\r\n            <div className=\"card MainCard h-100 mt-5 ml-auto rounded-lg shadow\" style={{\"width\": \"12rem\"}}>\r\n                <img src=\"\" className=\"card-img-top img-responsive\" alt=\"...\" />\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{props.title}</h5>\r\n                    <p clasName=\"card-text\">{props.info}</p>\r\n                    <Link to={props.link} className=\"btn btn-primary\">click to view...</Link>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainCard\r\n","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\SignUp\\Avatar\\Avatar.jsx",[],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\hook\\useWindowPosition.js",[],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\LoginCard\\LoginCard.jsx",["128","129","130","131","132"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport \"./LoginCard.scss\"\r\nimport { Collapse } from '@material-ui/core';\r\n\r\nexport default function MediaCard(props) {\r\n  return (\r\n    <Collapse in={props.checked} {...(props.checked ? { timeout: 1000 } : {})}>\r\n      <div className=\"card logincard text-white bg-secondary shadow\" style={{width: \"18rem\"}}>\r\n        <div className=\"mag_img\">\r\n          <img className=\"card-img-top\" src={props.image} alt=\"Card image cap\"></img>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <h1 role>{props.role}</h1>\r\n          <p className=\"card-text desc\">{props.desc}</p>\r\n        </div>\r\n      </div>\r\n    </Collapse>\r\n  );\r\n} ","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\App.jsx",[],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\forgotpass\\forgotpass.jsx",["133","134"],"import React, { useState } from 'react';\r\nimport Avatar from \"./Avatar/Avatar\";\r\nimport wave from \"../assets/wave.png\";\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport signInpic1 from \"../assets/signInpic1.svg\";\r\nimport { BaseUrl } from '../App.jsx';\r\nimport './forgotpass.scss';\r\nconst ForgotPassword = (props) => {\r\n    const state = useSelector(state => state.forgetpass);\r\n    // console.log(state);\r\n    const dispatch = useDispatch();\r\n    const H = useHistory();\r\n    const [value, setValue] = useState('');\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [vis, setvis] = useState({ \"visibility\": \"hidden\", \"background\": \"#5ae663\", \"msg\": \"\" });\r\n    const handleTextChange = (text) => {\r\n        setValue(text);\r\n        if (text !== '') {\r\n            setIsActive(true);\r\n        } else {\r\n            setIsActive(false);\r\n        }\r\n    }\r\n    const onsubmitlogin = async (e) => {\r\n        e.preventDefault();\r\n        dispatch({ 'type': \"request_forgetpass\" })\r\n        console.log(state);\r\n        const info = { \"type\": props.type, \"email\": value }\r\n        try {\r\n            const data = await axios({\r\n                method: \"post\",\r\n                url: BaseUrl + \"forgetpassword/\",\r\n                headers: { \"Authorization\": \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                responseType: \"json\",\r\n                data: info\r\n            })\r\n            dispatch({type:\"success_forgetpass\",payload:data.data})\r\n            if (props.type === \"student\") {\r\n                H.push('/SignIn');\r\n            }\r\n            else {\r\n                H.push('/TeacherSignIn');\r\n            }\r\n            // setvis(()=>({\"background\":\"#5ae663\",\"visibility\":\"visible\",\"msg\":\"password as been sent to your mail\"}));\r\n        }\r\n        catch {\r\n            setvis(() => ({ \"background\": \"#e05871\", \"visibility\": \"visible\", \"msg\": \"invalid email\" }));\r\n            dispatch({ 'type': \"error_forgetpass\",'payload':\"error\"})\r\n            console.log(\"error\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"alert text-center alert-dismissible fade show m-0 px-2\" style={{ \"visibility\": vis.visibility, \"background\": vis.background }} role=\"alert\">\r\n                {vis.msg}\r\n            </div>\r\n            <div className=\"loader-spinner\" style={{visibility:(state.loading )? \"visible\" : \"hidden\"}}>\r\n                <div className=\"spinner-grow text-success mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-danger mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-warning mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"signUpPage whole\" style={{visibility:(state.loading )? \"hidden\" : \"visible\"}}>\r\n                <img className=\"wave\" src={wave} alt=\"wallpaper\"></img>\r\n                <h3 className=\"title text-center\">Password will be send to your mail</h3>\r\n                <div className=\"container\">\r\n                    <img src={signInpic1} alt=\"sigup\" className=\"img\" mb-5 style={{ top: \"4rem\" }}></img>\r\n                    <div className=\"login-content\">\r\n                        <form className=\"form\">\r\n                            <div class=\"input-div one\">\r\n                                <div class=\"i\">\r\n                                    <i class=\"fas fa-user\"></i>\r\n                                </div>\r\n                                <div class=\"div\">\r\n                                    <h5 className={isActive ? \"Active\" : \"\"}>Email</h5>\r\n                                    <input type=\"text\" class=\"input\" value={value}\r\n                                        onChange={(e) => handleTextChange(e.target.value)} required></input>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <Link to={(props.type == \"student\") ? '/resetpass' : '/resetpassteacher'}>anymore ways?</Link>\r\n                            </div>\r\n                            {/*\r\n                                <div class=\"input-div pass\">\r\n                                    <div class=\"i\">\r\n                                        <i class=\"fas fa-lock\"></i>\r\n                                    </div>\r\n                                </div> */}\r\n                            <br />\r\n                            <input type=\"submit\" className=\"btn\" onClick={onsubmitlogin} value=\"Submit\"></input>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword;","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\forgotpass\\Avatar\\Avatar.jsx",[],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\attendance\\attendance.jsx",[],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\teacherblog\\teacherblog.jsx",["135","136"],"import React,{useEffect,useState} from 'react'\r\n\r\nconst Teacherblog = () => {\r\n    return (\r\n        <>\r\n          <h1>in teacherblog</h1>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Teacherblog;\r\n","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\resetpass\\Resetpass.jsx",["137"],"import React, { useState } from 'react';\r\nimport './Resetpass.scss';\r\nimport wave from \"../assets/wave.png\";\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport signInpic1 from \"../assets/signInpic1.svg\";\r\nimport {BaseUrl} from '../App.jsx';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nconst Resetpass = (props) => {\r\n    let state=useSelector(state=>state.resetpass);\r\n    let dispatch = useDispatch();\r\n    const H = useHistory();\r\n    const [value, setValue] = useState('');\r\n    const [isActivePass, setIsActivePass] = useState(false);\r\n    const [valuePass, setValuePass] = useState('');\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [vis, setvis] = useState({ \"visibility\": \"hidden\", \"background\": \"#5ae663\", \"msg\": \"\" });\r\n    const handleTextChange = (text) => {\r\n        setValue(text);\r\n\r\n        if (text !== '') {\r\n            setIsActive(true);\r\n        } else {\r\n            setIsActive(false);\r\n        }\r\n    }\r\n    const handleTextChangePass = (text) => {\r\n        setValuePass(text);\r\n\r\n        if (text !== '') {\r\n            setIsActivePass(true);\r\n        } else {\r\n            setIsActivePass(false);\r\n        }\r\n    }\r\n    const onsubmitlogin = async (e) => {\r\n        e.preventDefault();\r\n        const info = { \"password\": valuePass }\r\n        console.log(info);\r\n        console.log(value);\r\n        console.log(props.type);\r\n        dispatch({type:\"request_resetpass\"});\r\n        try {\r\n            const data = await axios({\r\n                method: \"patch\",\r\n                url: BaseUrl+props.type+\"Store/\"+value+\"/\",\r\n                headers: { \"Authorization\": \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                responseType: \"json\",\r\n                data: info\r\n            })\r\n            dispatch({type:\"success_resetpass\",payload:data.data})\r\n            if (props.type === \"student\") {\r\n                H.push('/SignIn');\r\n            }\r\n            else {\r\n                H.push('/TeacherSignIn');\r\n            }\r\n            // setvis(()=>({\"background\":\"#5ae663\",\"visibility\":\"visible\",\"msg\":\"password as been sent to your mail\"}));\r\n        }\r\n        catch {\r\n            setvis(() => ({ \"background\": \"#e05871\", \"visibility\": \"visible\", \"msg\": \"invalid email\" }));\r\n            console.log(\"error\")\r\n            dispatch({type:\"error_resetpass\",payload:\"error\"});\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"alert text-center alert-dismissible fade show m-0 px-2\" style={{ \"visibility\": vis.visibility, \"background\": vis.background }} role=\"alert\">\r\n                {vis.msg}\r\n            </div>\r\n            <div className=\"loader-spinner\" style={{visibility:(state.loading )? \"visible\" : \"hidden\"}}>\r\n                <div className=\"spinner-grow text-success mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-danger mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-warning mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"signUpPage whole\" style={{visibility:(state.loading )? \"hidden\" : \"visible\"}}>\r\n                <img className=\"wave\" src={wave} alt=\"wallpaper\"></img>\r\n                <h3 className=\"title text-center\">Reset your password</h3>\r\n                <div className=\"container\">\r\n                    <img src={signInpic1} alt=\"sigup\" className=\"img\" mb-5 style={{ top: \"4rem\" }}></img>\r\n                    <div className=\"login-content\">\r\n                        <form className=\"form\">\r\n                            <div class=\"input-div one\">\r\n                                <div class=\"i\">\r\n                                    <i class=\"fas fa-user\"></i>\r\n                                </div>\r\n                                <div class=\"div\">\r\n                                    <h5 className={isActive ? \"Active\" : \"\"}>Username</h5>\r\n                                    <input type=\"text\" class=\"input\" value={value}\r\n                                        onChange={(e) => handleTextChange(e.target.value)} required></input>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"input-div pass\">\r\n                                <div class=\"i\">\r\n                                    <i class=\"fas fa-lock\"></i>\r\n                                </div>\r\n                                <div class=\"div\">\r\n                                    <h5 className={isActivePass ? \"Active\" : \"\"}>New Password</h5>\r\n                                    <input type=\"password\" class=\"input\" value={valuePass}\r\n                                        onChange={(e) => handleTextChangePass(e.target.value)} required></input>\r\n                                </div>\r\n                            </div>\r\n                            <br />\r\n                            <input type=\"submit\" className=\"btn\" onClick={onsubmitlogin} value=\"Submit\"></input>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Resetpass;","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\redux\\store.jsx",[],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\redux\\reducers.jsx",[],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\takeattendance\\takeattendance.jsx",["138","139","140","141","142","143"],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":14},{"ruleId":"152","severity":1,"message":"153","line":129,"column":41,"nodeType":"154","endLine":129,"endColumn":93},{"ruleId":"152","severity":1,"message":"153","line":130,"column":41,"nodeType":"154","endLine":130,"endColumn":93},{"ruleId":"152","severity":1,"message":"153","line":124,"column":41,"nodeType":"154","endLine":124,"endColumn":93},{"ruleId":"152","severity":1,"message":"153","line":125,"column":41,"nodeType":"154","endLine":125,"endColumn":93},{"ruleId":"152","severity":1,"message":"153","line":128,"column":41,"nodeType":"154","endLine":128,"endColumn":93},{"ruleId":"152","severity":1,"message":"153","line":129,"column":41,"nodeType":"154","endLine":129,"endColumn":93},{"ruleId":"148","severity":1,"message":"155","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":16},{"ruleId":"152","severity":1,"message":"153","line":165,"column":37,"nodeType":"154","endLine":165,"endColumn":89},{"ruleId":"152","severity":1,"message":"153","line":166,"column":37,"nodeType":"154","endLine":166,"endColumn":89},{"ruleId":"152","severity":1,"message":"156","line":13,"column":21,"nodeType":"154","endLine":13,"endColumn":58},{"ruleId":"152","severity":1,"message":"156","line":16,"column":21,"nodeType":"154","endLine":16,"endColumn":58},{"ruleId":"148","severity":1,"message":"157","line":6,"column":10,"nodeType":"150","messageId":"151","endLine":6,"endColumn":20},{"ruleId":"148","severity":1,"message":"158","line":7,"column":10,"nodeType":"150","messageId":"151","endLine":7,"endColumn":17},{"ruleId":"148","severity":1,"message":"159","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":18},{"ruleId":"148","severity":1,"message":"160","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":19},{"ruleId":"148","severity":1,"message":"161","line":2,"column":21,"nodeType":"150","messageId":"151","endLine":2,"endColumn":29},{"ruleId":"148","severity":1,"message":"157","line":3,"column":10,"nodeType":"150","messageId":"151","endLine":3,"endColumn":20},{"ruleId":"162","severity":1,"message":"163","line":12,"column":11,"nodeType":"154","endLine":12,"endColumn":80},{"ruleId":"164","severity":1,"message":"165","line":15,"column":15,"nodeType":"166","endLine":15,"endColumn":19},{"ruleId":"148","severity":1,"message":"149","line":2,"column":8,"nodeType":"150","messageId":"151","endLine":2,"endColumn":14},{"ruleId":"167","severity":1,"message":"168","line":90,"column":55,"nodeType":"169","messageId":"170","endLine":90,"endColumn":57},{"ruleId":"148","severity":1,"message":"160","line":1,"column":15,"nodeType":"150","messageId":"151","endLine":1,"endColumn":24},{"ruleId":"148","severity":1,"message":"161","line":1,"column":25,"nodeType":"150","messageId":"151","endLine":1,"endColumn":33},{"ruleId":"148","severity":1,"message":"171","line":4,"column":10,"nodeType":"150","messageId":"151","endLine":4,"endColumn":14},{"ruleId":"148","severity":1,"message":"172","line":7,"column":8,"nodeType":"150","messageId":"151","endLine":7,"endColumn":17},{"ruleId":"148","severity":1,"message":"173","line":16,"column":8,"nodeType":"150","messageId":"151","endLine":16,"endColumn":18},{"ruleId":"174","severity":1,"message":"175","line":43,"column":32,"nodeType":"176","messageId":"177","endLine":43,"endColumn":34},{"ruleId":"174","severity":1,"message":"175","line":46,"column":21,"nodeType":"176","messageId":"177","endLine":46,"endColumn":23},{"ruleId":"178","severity":1,"message":"179","line":102,"column":15,"nodeType":"176","endLine":122,"endColumn":6},{"ruleId":"178","severity":1,"message":"180","line":122,"column":8,"nodeType":"181","endLine":122,"endColumn":10,"suggestions":"182"},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"no-unused-vars","'Avatar' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'MainCard' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'makeStyles' is defined but never used.","'flexbox' is defined but never used.","'attendance' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","jsx-a11y/aria-role","Elements with ARIA roles must use a valid, non-abstract ARIA role.","JSXAttribute","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","'InputBase' is defined but never used.","'SearchIcon' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has missing dependencies: 'dispatch', 'section', and 'subject'. Either include them or remove the dependency array.","ArrayExpression",["185"],"no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},"Update the dependencies array to be: [dispatch, section, subject]",{"range":"188","text":"189"},[4810,4812],"[dispatch, section, subject]"]