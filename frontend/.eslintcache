[{"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\index.js":"1","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Welcome\\Welcome.js":"2","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\TeacherSignUp\\TeacherSignUp.jsx":"3","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\SignIn\\SignIn.jsx":"4","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\TeacherSignIn\\TeacherSignIn.jsx":"5","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Mainblog\\Mainblog.jsx":"6","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\SignUp\\SignUp.jsx":"7","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Header\\Header.jsx":"8","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\scrollLogin\\scrollLogin.jsx":"9","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\TeacherSignUp\\Avatar\\Avatar.jsx":"10","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\SignIn\\Avatar\\Avatar.jsx":"11","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Mainblog\\MainCard.jsx":"12","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\SignUp\\Avatar\\Avatar.jsx":"13","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\hook\\useWindowPosition.js":"14","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\LoginCard\\LoginCard.jsx":"15","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\App.jsx":"16","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\forgotpass\\forgotpass.jsx":"17","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\forgotpass\\Avatar\\Avatar.jsx":"18","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\teacherblog\\teacherblog.jsx":"19","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\resetpass\\Resetpass.jsx":"20","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\redux\\store.jsx":"21","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\redux\\reducers.jsx":"22","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\takeattendance\\takeattendance.jsx":"23","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\ClassLinks\\ClassLinks.jsx":"24","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\ClassLinks\\ClassLinksHeader.jsx":"25","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\ClassLinks\\PostedLinks\\PostedLinks.jsx":"26","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\ClassLinks\\NewLink\\NewLink.jsx":"27","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\ClassBlog\\ClassBlog.jsx":"28","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\ClassBlog\\Notes.jsx":"29","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\StudentClassBlog\\StudentClassBlog.jsx":"30","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\QueryBlog\\QueryBlog.jsx":"31","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Dashboard\\DashboardEvent\\DashboardEvent.jsx":"32","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Dashboard\\DashboardEvent\\DastboardAddEventArea\\DastboardAddEventArea.jsx":"33","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\QueryBlog\\BlogCards.jsx":"34","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\NotificationBlog\\NotificationBlog.jsx":"35","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\QueryBlogChat\\QueryBlogChat.jsx":"36","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Dashboard\\Dashboard.jsx":"37","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Dashboard\\DashboardContent\\DashboardContent.jsx":"38","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Dashboard\\DashboardProfile\\DashboardProfile.jsx":"39","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Dashboard\\DashboardHeader.jsx":"40","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Dashboard\\DashboardMenu\\DashboardMenu.jsx":"41","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Dashboard\\DashboardAttendence\\DashboardAttendence.jsx":"42"},{"size":265,"mtime":1610526945339,"results":"43","hashOfConfig":"44"},{"size":1209,"mtime":1610789239422,"results":"45","hashOfConfig":"44"},{"size":6364,"mtime":1610721721039,"results":"46","hashOfConfig":"44"},{"size":6396,"mtime":1611971562410,"results":"47","hashOfConfig":"44"},{"size":6537,"mtime":1611971562419,"results":"48","hashOfConfig":"44"},{"size":8716,"mtime":1611885873727,"results":"49","hashOfConfig":"44"},{"size":8203,"mtime":1611908344927,"results":"50","hashOfConfig":"44"},{"size":2986,"mtime":1611909626366,"results":"51","hashOfConfig":"44"},{"size":1099,"mtime":1610789305352,"results":"52","hashOfConfig":"44"},{"size":419,"mtime":1610426897691,"results":"53","hashOfConfig":"44"},{"size":419,"mtime":1611967245488,"results":"54","hashOfConfig":"44"},{"size":782,"mtime":1610284952701,"results":"55","hashOfConfig":"44"},{"size":419,"mtime":1610426897544,"results":"56","hashOfConfig":"44"},{"size":685,"mtime":1610260051695,"results":"57","hashOfConfig":"44"},{"size":765,"mtime":1610287100771,"results":"58","hashOfConfig":"44"},{"size":4944,"mtime":1611935572353,"results":"59","hashOfConfig":"44"},{"size":4994,"mtime":1611062787513,"results":"60","hashOfConfig":"44"},{"size":419,"mtime":1610518631294,"results":"61","hashOfConfig":"44"},{"size":7996,"mtime":1611885914181,"results":"62","hashOfConfig":"44"},{"size":5410,"mtime":1611062860453,"results":"63","hashOfConfig":"44"},{"size":1390,"mtime":1611921732240,"results":"64","hashOfConfig":"44"},{"size":674,"mtime":1611039806674,"results":"65","hashOfConfig":"44"},{"size":18002,"mtime":1611970472015,"results":"66","hashOfConfig":"44"},{"size":3473,"mtime":1611309234533,"results":"67","hashOfConfig":"44"},{"size":1838,"mtime":1611148539396,"results":"68","hashOfConfig":"44"},{"size":3355,"mtime":1611310699252,"results":"69","hashOfConfig":"44"},{"size":7234,"mtime":1611310699234,"results":"70","hashOfConfig":"44"},{"size":10905,"mtime":1611968965294,"results":"71","hashOfConfig":"44"},{"size":3761,"mtime":1611969979154,"results":"72","hashOfConfig":"44"},{"size":11944,"mtime":1611656385657,"results":"73","hashOfConfig":"44"},{"size":23571,"mtime":1611861452793,"results":"74","hashOfConfig":"44"},{"size":14165,"mtime":1611905741916,"results":"75","hashOfConfig":"44"},{"size":2309,"mtime":1611727877438,"results":"76","hashOfConfig":"44"},{"size":2168,"mtime":1611884194295,"results":"77","hashOfConfig":"44"},{"size":5425,"mtime":1611900642548,"results":"78","hashOfConfig":"44"},{"size":14190,"mtime":1611893245125,"results":"79","hashOfConfig":"44"},{"size":3446,"mtime":1611919548379,"results":"80","hashOfConfig":"44"},{"size":279,"mtime":1611911710356,"results":"81","hashOfConfig":"44"},{"size":2660,"mtime":1611919865082,"results":"82","hashOfConfig":"44"},{"size":3562,"mtime":1611914402703,"results":"83","hashOfConfig":"44"},{"size":6301,"mtime":1611948181418,"results":"84","hashOfConfig":"44"},{"size":10712,"mtime":1611966260777,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"2xcyq1",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"88"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"88"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"88"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"88"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"88"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"88"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"88"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"88"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"88"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"88"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\index.js",[],["196","197"],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Welcome\\Welcome.js",[],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\TeacherSignUp\\TeacherSignUp.jsx",["198","199","200"],"import React, { useState } from 'react';\r\nimport \"./TeacherSignUp.scss\";\r\nimport signUp from \"../assets/signUp.svg\";\r\nimport Avatar from \"./Avatar/Avatar\";\r\nimport wave from \"../assets/wave.png\";\r\nimport teacher from \"../assets/teacherPic.png\"\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nconst TeacherSignUp = () => {\r\n    const H = useHistory();\r\n    const [gender, setgender] = useState(1);\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [value, setValue] = useState('');\r\n    const [isActivePass, setIsActivePass] = useState(false);\r\n    const [valuePass, setValuePass] = useState('');\r\n    const [isActiveEmail, setIsActiveEmail] = useState(false);\r\n    const [valueEmail, setValueEmail] = useState('');\r\n    const [vis, setvis] = useState(\"hidden\");\r\n    const handleTextChange = (text) => {\r\n        setValue(text);\r\n\r\n        if (text !== '') {\r\n            setIsActive(true);\r\n        } else {\r\n            setIsActive(false);\r\n        }\r\n    }\r\n    const handleTextChangePass = (text) => {\r\n        setValuePass(text);\r\n\r\n        if (text !== '') {\r\n            setIsActivePass(true);\r\n        } else {\r\n            setIsActivePass(false);\r\n        }\r\n    }\r\n    const handleTextChangeEmail = (text) => {\r\n        setValueEmail(text);\r\n\r\n        if (text !== '') {\r\n            setIsActiveEmail(true);\r\n        } else {\r\n            setIsActiveEmail(false);\r\n        }\r\n    }\r\n\r\n    const changeGender = () => {\r\n        if (gender === 1) {\r\n            setgender(0);\r\n            console.log(gender);\r\n        }\r\n        else {\r\n            setgender(1);\r\n            console.log(gender);\r\n        }\r\n    }\r\n    const submitMember = async (event) => {\r\n        let d = new Date();\r\n        const d_s=d.getFullYear()+\" \"+d.getHours()+\":\"+d.getMinutes()+\":\"+d.getSeconds();\r\n        event.preventDefault();\r\n        console.log(`${gender} ${value} ${valueEmail} ${valuePass}`);\r\n        const info = { \"gender\": gender, \"username\": value, \"email\": valueEmail, \"password\": valuePass,\"lastloginat\":d_s }\r\n        try {\r\n            console.log(\"hiii\");\r\n            let data = await axios({\r\n                method: 'post',\r\n                url: 'http://127.0.0.1:8000/teacherStore/',\r\n                headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                data: info,\r\n                responseType: 'json'\r\n            });\r\n            console.log(data);\r\n            const fun = () => H.push(`/mainblog/${value}`);\r\n            fun();\r\n        }\r\n        catch {\r\n            setvis(\"visible\")\r\n            console.log(\"error\");\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"alert alert-danger alert-dismissible fade show m-0 px-2\" style={{ \"visibility\": vis }} role=\"alert\">\r\n                rollnumber or email already exists\r\n            </div>\r\n            <div className=\"signUpPage wholeteachersignup\">\r\n                <img className=\"wave\" src={wave} alt=\"wallpaper\"></img>\r\n                <div className=\"container\">\r\n                    <img src={signUp} alt=\"sigup\" className=\"img\"></img>\r\n                    <div className=\"login-content\">\r\n                        <form className=\"form\">\r\n                            <h2 className=\"title\">SignUP</h2>\r\n                            <img src={teacher} alt=\"Teacher profile pic\"></img>\r\n                            <div class=\"input-div one mt-3\">\r\n                                <div class=\"i\">\r\n                                    <i class=\"fas fa-user\"></i>\r\n                                </div>\r\n                                <div class=\"div\">\r\n                                    <h5 className={isActive ? \"Active\" : \"\"}>ID-Number</h5>\r\n                                    <input type=\"text\" class=\"input\" value={value}\r\n                                        onChange={(e) => handleTextChange(e.target.value)} required></input>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"input-div one\">\r\n                                <div class=\"i\">\r\n                                    <i class=\"fas fa-user\"></i>\r\n                                </div>\r\n                                <div class=\"div\">\r\n                                    <h5 className={isActiveEmail ? \"Active\" : \"\"}>Email</h5>\r\n                                    <input type=\"email\" class=\"input\" value={valueEmail}\r\n                                        onChange={(e) => handleTextChangeEmail(e.target.value)} required></input>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"input-div pass\">\r\n                                <div class=\"i\">\r\n                                    <i class=\"fas fa-lock\"></i>\r\n                                </div>\r\n                                <div class=\"div\">\r\n                                    <h5 className={isActivePass ? \"Active\" : \"\"}>Password</h5>\r\n                                    <input type=\"password\" class=\"input\" value={valuePass}\r\n                                        onChange={(e) => handleTextChangePass(e.target.value)} required></input>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"btn-group\">\r\n                                <button type=\"button\" className=\"btn btn-success dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    {gender === 1 ? \"Male\" : \"Female\"}\r\n                                </button>\r\n                                <ul className=\"dropdown-menu\">\r\n                                    <li><a className=\"dropdown-item\" onClick={changeGender}>Male</a></li>\r\n                                    <li><a className=\"dropdown-item\" onClick={changeGender}>Female</a></li>\r\n                                </ul>\r\n                            </div>\r\n                            <br />\r\n                            <a href=\"/TeacherSignIn\" className=\"have\" m-auto>Already a Member?</a>\r\n                            <input type=\"submit\" onClick={submitMember} class=\"btn\" value=\"SignUp\"></input>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TeacherSignUp;","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\SignIn\\SignIn.jsx",["201","202"],"import React, { useState } from 'react';\r\nimport \"./SignIn.scss\";\r\nimport signInpic1 from \"../assets/signInpic1.svg\";\r\nimport Avatar from \"./Avatar/Avatar\";\r\nimport wave from \"../assets/wave.png\";\r\nimport axios from 'axios';\r\nimport {BaseUrl} from '../App.jsx';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nconst SignIn = () => {\r\n    let state = useSelector(state=>state.signin);\r\n    let dispatch = useDispatch();\r\n    const H = useHistory();\r\n    const [gender, setgender] = useState(1);\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [value, setValue] = useState('');\r\n    const [isActivePass, setIsActivePass] = useState(false);\r\n    const [valuePass, setValuePass] = useState('');\r\n    const [vis,setvis] = useState(\"hidden\");\r\n    const handleTextChange = (text) => {\r\n        setValue(text);\r\n        if (text !== '') {\r\n            setIsActive(true);\r\n        } else {\r\n            setIsActive(false);\r\n        }\r\n    }\r\n\r\n    const handleTextChangePass = (text) => {\r\n        setValuePass(text);\r\n\r\n        if (text !== '') {\r\n            setIsActivePass(true);\r\n        } else {\r\n            setIsActivePass(false);\r\n        }\r\n    }\r\n\r\n    const changeGender = () => {\r\n        if (gender === 1) {\r\n            setgender(0);\r\n            console.log(gender);\r\n        }\r\n        else {\r\n            setgender(1);\r\n            console.log(gender);\r\n        }\r\n    }\r\n    const onsubmitlogin = async (e) => {\r\n        let d = new Date();\r\n        const d_s=d.getFullYear()+\"-\"+(d.getMonth()+1)+\"-\"+d.getDate()+\" \"+d.getHours()+\":\"+d.getMinutes()+\":\"+d.getSeconds();\r\n        e.preventDefault();\r\n        let info = { \"gender\": gender, \"rollno\": value, \"password\": valuePass,'date':d_s }\r\n        dispatch({type:'request_signin'});\r\n        try {\r\n            const data = await axios({\r\n                method: \"post\",\r\n                url: BaseUrl+\"studentexists/\",\r\n                headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                data: info,\r\n                responseType: 'json'\r\n            })\r\n            dispatch({type:\"success_signin\",payload:data.data});\r\n            localStorage.setItem('value',JSON.stringify({'rollno':value,'password':valuePass,'gender':gender}));\r\n            H.push(`/Dashboard`);\r\n        }\r\n        catch {\r\n            dispatch({type:\"error_signin\",payload:\"error\"})\r\n            setvis(\"visible\")\r\n            console.log(\"error\");\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"alert text-center alert-danger alert-dismissible fade show m-0 px-2\" style={{ \"visibility\": vis }} role=\"alert\">\r\n                invalid details provided\r\n            </div>\r\n            <div className=\"loader-spinner\" style={{visibility:(state.loading )? \"visible\" : \"hidden\"}}>\r\n                <div className=\"spinner-grow text-success mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-danger mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-warning mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"signUpPage whole\" style={{visibility:(state.loading )? \"hidden\" : \"visible\"}}>\r\n                <img className=\"wave\" src={wave} alt=\"wallpaper\"></img>\r\n                <div className=\"container\">\r\n                    <img src={signInpic1} alt=\"sigup\" className=\"img\" mb-5 style={{ top: \"4rem\" }}></img>\r\n                    <div className=\"login-content\">\r\n                        <form className=\"form\">\r\n                            <h2 className=\"title\">SignIn</h2>\r\n                            <Avatar gender={gender} ></Avatar>\r\n                            <div class=\"input-div one mt-5\">\r\n                                <div class=\"i\">\r\n                                    <i class=\"fas fa-user\"></i>\r\n                                </div>\r\n                                <div class=\"div\">\r\n                                    <h5 className={isActive ? \"Active\" : \"\"}>RollNumber/Email</h5>\r\n                                    <input type=\"text\" class=\"input\" value={value}\r\n                                        onChange={(e) => handleTextChange(e.target.value)} required></input>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"input-div pass\">\r\n                                <div class=\"i\">\r\n                                    <i class=\"fas fa-lock\"></i>\r\n                                </div>\r\n                                <div class=\"div\">\r\n                                    <h5 className={isActivePass ? \"Active\" : \"\"}>Password</h5>\r\n                                    <input type=\"password\" class=\"input\" value={valuePass}\r\n                                        onChange={(e) => handleTextChangePass(e.target.value)} required></input>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"btn-group\">\r\n                                <button type=\"button\" className=\"btn btn-success dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    {gender === 1 ? \"Male\" : \"Female\"}\r\n                                </button>\r\n                                <ul className=\"dropdown-menu\">\r\n                                    <li><a className=\"dropdown-item\" onClick={changeGender}>Male</a></li>\r\n                                    <li><a className=\"dropdown-item\" onClick={changeGender}>Female</a></li>\r\n                                </ul>\r\n                            </div>\r\n                            <br />\r\n                            <a href=\"/SignUp\" className=\"have mr-3\">New to Visual Meet?</a>\r\n                            <a href=\"/forgotpass\">Forgot Password?</a>\r\n                            <input type=\"submit\" className=\"btn\" onClick={onsubmitlogin} value=\"Login\"></input>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SignIn;","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\TeacherSignIn\\TeacherSignIn.jsx",["203","204","205"],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Mainblog\\Mainblog.jsx",["206","207","208","209","210","211","212"],"import React, { useEffect,useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport icon from '../assets/icon.png';\r\nimport MainCard from './MainCard';\r\nimport attendance from '../assets/attendance.jpg'\r\nimport classlinks from '../assets/classlinks.png'\r\nimport queries from '../assets/query-board.png'\r\nimport event from '../assets/calendar.png'\r\nimport './Mainblog.scss';\r\nimport { BaseUrl } from '../App.jsx';\r\nimport { useParams } from 'react-router';\r\nimport { useHistory } from 'react-router-dom';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport useInterval from 'react-useinterval';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nconst Mainblog = () => {\r\n    const [noBadges,setNoBadges] = useState(0);\r\n    const state1 = useSelector(state => state.getNotifications);\r\n    let state = useSelector(state => state.signin);\r\n    const [delay,setDelay] = useState(1000);\r\n    let dispatch = useDispatch();\r\n    const H = useHistory();\r\n    useEffect(async () => {\r\n        let d = new Date();\r\n        const d_s = d.getFullYear() + \"-\" + (d.getMonth() + 1) + \"-\" + d.getDate() + \" \" + d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds();\r\n        // e.preventDefault();\r\n        const value = JSON.parse(localStorage.getItem('value'));\r\n        let info = { ...value, 'date': d_s };\r\n        // dispatch({ type: 'request_signin' });\r\n        try {\r\n            const data = await axios({\r\n                method: \"post\",\r\n                url: BaseUrl + \"studentexists/\",\r\n                headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                data: info,\r\n                responseType: 'json'\r\n            })\r\n            dispatch({ type: \"success_signin\", payload: data.data });\r\n            // H.push(`/mainblog`);\r\n        }\r\n        catch {\r\n            dispatch({ type: \"error_signin\", payload: \"error\" })\r\n            H.push('/error');\r\n        }\r\n    }, []);\r\n    const [updateNotifications,setUpdateNotifications] = useState(true);\r\n    useEffect(async () => {\r\n        setDelay(null);\r\n        // dispatch({\"type\":\"request_getNotifications\"})\r\n        try{\r\n            const data = await axios({\r\n                method : 'post',\r\n                url:BaseUrl+`getNotifications/`,\r\n                headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                data:{\"username\":JSON.parse(localStorage.getItem('value')).rollno,seen:0},\r\n                responseType : 'json'\r\n            });\r\n            // dispatch({\"type\":\"success_getNotifications\",payload:data.data});\r\n            setNoBadges((data.data).length);\r\n            // console.log((data.data).length);\r\n            setDelay(1000);\r\n        }\r\n        catch{\r\n            // dispatch({\"type\":\"error_getNotifications\",payload:\"\"});\r\n            setDelay(null);\r\n        }\r\n    },[updateNotifications])\r\n    const getNotifications = async () => {\r\n        setDelay(null);\r\n        setUpdateNotifications((pre)=>!pre);\r\n    }\r\n    useInterval(getNotifications,delay);\r\n    let props = [{ \"image\": attendance, \"title\": \"\", \"info\": \"ATTENDANCE\", \"link\": \"/attendance\" }, { \"image\": classlinks, \"title\": \"\", \"link\": \"/StudentClassBlog\", \"info\": \"CLASSLINKS\" }, { \"image\": queries, \"title\": \"\", \"info\": \"QUERYBLOG\", \"link\": \"/QueryBlog\" },\r\n    { \"image\": event, \"title\": \"\", \"info\": \"EVENTS\", \"link\": \"/DashboardEvent\" }]\r\n    return (\r\n        <div>\r\n            <div className=\"loader-spinner\" style={{ visibility: (state.loading ) ? \"visible\" : \"hidden\" }}>\r\n                <div className=\"spinner-grow text-success mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-danger mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-warning mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"container-fluid\" style={{ visibility: (state.loading ) ? \"hidden\" : \"visible\" }}>\r\n                <div className=\"row fixed-top\">\r\n                    <div className=\"col-12 navbar navbar-light bg-dark\">\r\n                        <div className=\"\">\r\n                            <Link className=\"navbar-brand\" >\r\n                                <img src={icon} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"\" />\r\n                                <label className=\"ml-2 text-white\">hii {JSON.parse(localStorage.getItem('value')).rollno}</label>\r\n                            </Link>\r\n                        </div>\r\n                        <label className=\"ml-auto text-white mt-1 text-center\">\r\n                            VISUAL MEET\r\n                                </label>\r\n                        <div className=\"ml-auto text-white\">\r\n                            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n                                <Badge badgeContent={noBadges} color=\"secondary\" onClick={()=>H.push('/NotificationBlog')}>\r\n                                    <NotificationsIcon />\r\n                                </Badge>\r\n                            </IconButton>\r\n                            <button className=\"btn btn-outline-danger ml-3 mr-2\" onClick={() => { localStorage.removeItem('value'); H.push(\"/\"); }}>logout</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container mt-5\" >\r\n                    <div className=\"row ml-sm-5\" style={{ \"marginTop\": \"8rem\" }}>\r\n                        {/* {data.map((v)=><MainCard image={v.image} title={v.info} info={v.title}/>)} */}\r\n                        <div className=\"card MainCard h-100 my-5 mx-auto px-0 rounded-lg shadow\" style={{ \"width\": \"15rem\", \"height\": \"12rem\" }}>\r\n                            <img src={attendance} className=\"card-img-top img-responsive\" alt=\"...\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">{props[0].title}</h5>\r\n                                <p className=\"card-text\">{props[0].info}</p>\r\n                                <Link to={props[0].link} className=\"btn btn-primary\">click to view...</Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card MainCard h-100  my-5  mx-auto  rounded-lg shadow\" style={{ \"width\": \"15rem\", \"height\": \"12rem\" }}>\r\n                            <img src={queries} className=\"card-img-top img-responsive\" alt=\"...\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">{props[2].title}</h5>\r\n                                <p className=\"card-text\">{props[2].info}</p>\r\n                                <Link to={props[2].link} className=\"btn btn-primary\">click to view...</Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card MainCard h-100  my-5  mx-auto rounded-lg shadow\" style={{ \"width\": \"15rem\", \"height\": \"12rem\" }}>\r\n                            <img src={event} className=\"card-img-top img-responsive\" alt=\"...\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">{props[3].title}</h5>\r\n                                <p className=\"card-text\">{props[3].info}</p>\r\n                                <Link to={props[3].link} className=\"btn btn-primary\">click to view...</Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card MainCard h-100  my-5 mx-auto px-0 rounded-lg shadow\" style={{ \"width\": \"15rem\", \"height\": \"12rem\" }}>\r\n                            <img src={classlinks} className=\"card-img-top img-responsive\" alt=\"...\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">{props[1].title}</h5>\r\n                                <p className=\"card-text\">{props[1].info}</p>\r\n                                <Link to={props[1].link} className=\"btn btn-primary\">click to view...</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Mainblog\r\n","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\SignUp\\SignUp.jsx",["213","214"],"import React, { useState } from 'react';\r\nimport \"./SignUp.scss\";\r\nimport signUp from \"../assets/signUp.svg\";\r\nimport Avatar from \"./Avatar/Avatar\";\r\nimport wave from \"../assets/wave.png\";\r\nimport axios from 'axios';\r\nimport {BaseUrl} from '../App.jsx';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nconst SignUp = () => {\r\n    let state=useSelector(state=>state.signup);\r\n    let dispatch = useDispatch();\r\n    const [gender, setgender] = useState(1);\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [isActiveSection, setIsActiveSection] = useState(false);\r\n    const [value, setValue] = useState('');\r\n    const [isActivePass, setIsActivePass] = useState(false);\r\n    const [valuePass, setValuePass] = useState('');\r\n    const [isActiveEmail, setIsActiveEmail] = useState(false);\r\n    const [valueEmail, setValueEmail] = useState('');\r\n    const [section,setSection] = useState('');\r\n    const H = useHistory();\r\n    const [vis, setvis] = useState(\"hidden\");\r\n    const handleTextChange = (text) => {\r\n        setValue(text);\r\n        if (text !== '') {\r\n            setIsActive(true);\r\n        } else {\r\n            setIsActive(false);\r\n        }\r\n    }\r\n    const handleTextChangePass = (text) => {\r\n        setValuePass(text);\r\n\r\n        if (text !== '') {\r\n            setIsActivePass(true);\r\n        } else {\r\n            setIsActivePass(false);\r\n        }\r\n    }\r\n    const handleTextChangeEmail = (text) => {\r\n        setValueEmail(text);\r\n\r\n        if (text !== '') {\r\n            setIsActiveEmail(true);\r\n        } else {\r\n            setIsActiveEmail(false);\r\n        }\r\n    }\r\n    const handleTextChangeSection = (text) => {\r\n        setSection(text);\r\n        if (text !== '') {\r\n            setIsActiveSection(true);\r\n        } else {\r\n            setIsActiveSection(false);\r\n        }\r\n    }\r\n    const changeGender = () => {\r\n        if (gender === 1) {\r\n            setgender(0);\r\n            console.log(gender);\r\n        }\r\n        else {\r\n            setgender(1);\r\n            console.log(gender);\r\n        }\r\n    }\r\n    const submitMember = async (event) => {\r\n        event.preventDefault();\r\n        let d = new Date();\r\n        const d_s=d.getFullYear()+\"-\"+(d.getMonth()+1)+\"-\"+d.getDate()+\" \"+d.getHours()+\":\"+d.getMinutes()+\":\"+d.getSeconds();\r\n        console.log(d_s);\r\n        console.log(`${gender} ${value} ${valueEmail} ${valuePass}`);\r\n        const info = { \"gender\": gender,\"section\":section, \"username\": value, \"rollno\": value, \"email\": valueEmail, \"password\": valuePass,\"lastloginat\":d_s }\r\n        dispatch({type:\"request_signup\"});\r\n        try {\r\n            console.log(\"hiii\");\r\n            let data = await axios({\r\n                method: 'post',\r\n                url: BaseUrl+'studentStore/',\r\n                headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                data: info,\r\n                responseType: 'json'\r\n            });\r\n            dispatch({type:\"success_signup\",payload:data.data});\r\n            console.log(value);\r\n            localStorage.setItem('value',JSON.stringify({'rollno':value,'password':valuePass,'gender':gender}))\r\n            H.push(`/Dashboard`);\r\n        }\r\n        catch {\r\n            dispatch({type:\"error_signup\",payload:'error'});\r\n            setvis(\"visible\")\r\n            console.log(\"error\");\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"alert text-center alert-danger alert-dismissible fade show m-0 px-2\" style={{ \"visibility\": vis }} role=\"alert\">\r\n                rollnumber or email already exists\r\n        </div>\r\n        <div className=\"loader-spinner\" style={{visibility:(state.loading )? \"visible\" : \"hidden\"}}>\r\n            <div className=\"spinner-grow text-success mr-1\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-danger mr-1\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-warning mr-1\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n        <div className=\"signUpPage wholesignup\" style={{visibility:(state.loading )? \"hidden\" : \"visible\"}}>\r\n            <img className=\"wave\" src={wave} alt=\"wallpaper\"></img>\r\n            <div className=\"container\"  >\r\n                <img src={signUp} alt=\"sigup\" className=\"img\"></img>\r\n                <div className=\"login-content\">\r\n                    <form className=\"form\">\r\n                        <h2 className=\"title\">SignUP</h2>\r\n                        <Avatar gender={gender}></Avatar>\r\n                        <div className=\"input-div one mt-3\">\r\n                            <div className=\"i\">\r\n                                <i className=\"fas fa-user\"></i>\r\n                            </div>\r\n                            <div className=\"div\">\r\n                                <h5 className={isActive ? \"Active\" : \"\"}>RollNumber</h5>\r\n                                <input type=\"text\" className=\"input\" value={value}\r\n                                    onChange={(e) => handleTextChange(e.target.value)} required></input>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"input-div one\">\r\n                            <div className=\"i\">\r\n                                <i className=\"fas fa-user\"></i>\r\n                            </div>\r\n                            <div className=\"div\">\r\n                                <h5 className={isActiveEmail ? \"Active\" : \"\"}>Email</h5>\r\n                                <input type=\"email\" class=\"input\" value={valueEmail}\r\n                                    onChange={(e) => handleTextChangeEmail(e.target.value)} required></input>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"input-div pass\">\r\n                            <div className=\"i\">\r\n                                <i className=\"fas fa-lock\"></i>\r\n                            </div>\r\n                            <div className=\"div\">\r\n                                <h5 className={isActivePass ? \"Active\" : \"\"}>Password</h5>\r\n                                <input type=\"password\" class=\"input\" value={valuePass}\r\n                                    onChange={(e) => handleTextChangePass(e.target.value)} required></input>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"input-div pass\">\r\n                            <div className=\"i\">\r\n                                <i className=\"fas fa-lock\"></i>\r\n                            </div>\r\n                            <div className=\"div\">\r\n                                <h5 className={isActiveSection ? \"Active\":\"\"}>section</h5>\r\n                                <input type=\"text\" class=\"input\" value={section}\r\n                                    onChange={(e) => handleTextChangeSection(e.target.value)} required></input>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"btn-group\">\r\n                            <button type=\"button\" className=\"btn btn-success dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                {gender === 1 ? \"Male\" : \"Female\"}\r\n                            </button>\r\n                            <ul className=\"dropdown-menu\">\r\n                                <li><a className=\"dropdown-item\" onClick={changeGender}>Male</a></li>\r\n                                <li><a className=\"dropdown-item\" onClick={changeGender}>Female</a></li>\r\n                            </ul>\r\n                        </div>\r\n                        <br />\r\n                        <a href=\"/SignIn\" className=\"have\" m-auto>Already a Member?</a>\r\n                        <input type=\"submit\" className=\"btn\" onClick={submitMember} value=\"SignUp\"></input>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SignUp;","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Header\\Header.jsx",["215","216","217"],"import React from 'react';\r\nimport './Header.scss';\r\nimport { Link } from 'react-scroll';\r\nimport icon from \"../assets/icon.png\";\r\nimport './Header.scss';\r\nimport '../scrollLogin/scrollLogin.scss';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst Header = (e) => {\r\n    // e.preventdefault();\r\n    const H = useHistory();\r\n    return (\r\n        <>\r\n            <nav className=\"navbar fixed-top navbar-expand-lg navbar-dark bg-dark\">\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"#\">\r\n                        <img src={icon} width=\"40\" height=\"40\" alt=\"\" style={{ borderRadius: '10px' }}></img>\r\n                    </a>\r\n                    <a className=\"navbar-brand\" href=\"#\">VISUAL MEET</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav ml-auto mr-3\">\r\n                            <li class=\"nav-item\">\r\n                                <Link className=\"ml-auto mr-3\" to=\"login-center\" smooth={true} style={{ color: \"#fff\" }}><button className=\"signin\">LOGIN</button></Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"ml-auto mr-3\" onClick={()=>H.push('/SignUp')}  style={{ color: \"#fff\" }}>\r\n                                    <button type=\"button\" className=\"btn btn-outline-warning ml-2\"><span>SIGNUP</span></button>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    {/* <a className=\"navbar-brand\" href=\"#\">\r\n                        <img src={icon} width=\"40\" height=\"40\" alt=\"\" style={{ borderRadius: '10px' }}></img>\r\n                    </a>\r\n                    <a className=\"navbar-brand\" href=\"/mainblog\">Virtual Meet</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n                        <Link className=\" signin ml-auto mr-3 text-white\" to=\"login-center\" smooth={true}>Sign in</Link>\r\n                        <button type=\"button\" className=\"btn btn-outline-warning ml-2\">Register</button>\r\n                    </div> */}\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n\r\n","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\scrollLogin\\scrollLogin.jsx",["218","219"],"import React from 'react';\r\nimport \"../scrollLogin/scrollLogin.scss\";\r\nimport LoginCard from \"../LoginCard/LoginCard\";\r\nimport teacher from \"../assets/teacher.png\";\r\nimport student from \"../assets/students.png\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { flexbox } from '@material-ui/system';\r\nimport useWindowPosition from '../hook/useWindowPosition';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst ScrollLogin = () =>{\r\n    const checked = useWindowPosition(\"welcome\");\r\n    return(\r\n        <>\r\n        <div className=\"pageTwo\"  id=\"login-center\">\r\n            <Link className=\"link1\" to=\"/TeacherSignIn\">\r\n                <LoginCard image={teacher} role=\"Teacher\" desc=\"Please Click on this card to SignIn as a Teacher\" checked={checked}></LoginCard>\r\n            </Link>\r\n            <Link to =\"/SignIn\" className=\"link1\">\r\n                <LoginCard image={student} role=\"Student\" desc=\"Please Click on this card to SignIn as a Student\" checked={checked}></LoginCard>\r\n            </Link>\r\n        </div>\r\n        \r\n        </>\r\n    );\r\n}\r\n\r\nexport default ScrollLogin;","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\TeacherSignUp\\Avatar\\Avatar.jsx",[],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\SignIn\\Avatar\\Avatar.jsx",[],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Mainblog\\MainCard.jsx",["220"],"import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n// import './Mainblog.scss'\r\nimport attendance from '../assets/attendance.jpg'\r\nconst MainCard = (props) => {\r\n    console.log(props);\r\n    return (\r\n        <>\r\n            <div className=\"card MainCard h-100 mt-5 ml-auto rounded-lg shadow\" style={{\"width\": \"12rem\"}}>\r\n                <img src=\"\" className=\"card-img-top img-responsive\" alt=\"...\" />\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{props.title}</h5>\r\n                    <p clasName=\"card-text\">{props.info}</p>\r\n                    <Link to={props.link} className=\"btn btn-primary\">click to view...</Link>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainCard\r\n","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\SignUp\\Avatar\\Avatar.jsx",[],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\hook\\useWindowPosition.js",[],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\LoginCard\\LoginCard.jsx",["221","222","223","224","225"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport \"./LoginCard.scss\"\r\nimport { Collapse } from '@material-ui/core';\r\n\r\nexport default function MediaCard(props) {\r\n  return (\r\n    <Collapse in={props.checked} {...(props.checked ? { timeout: 1000 } : {})}>\r\n      <div className=\"card logincard text-white bg-secondary shadow\" style={{width: \"18rem\"}}>\r\n        <div className=\"mag_img\">\r\n          <img className=\"card-img-top\" src={props.image} alt=\"Card image cap\"></img>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <h1 role>{props.role}</h1>\r\n          <p className=\"card-text desc\">{props.desc}</p>\r\n        </div>\r\n      </div>\r\n    </Collapse>\r\n  );\r\n} ","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\App.jsx",["226"],"import React from 'react';\r\nimport {Switch,Route} from 'react-router-dom';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport SignUp from './SignUp/SignUp.jsx';\r\nimport SignIn from './SignIn/SignIn.jsx';\r\nimport Welcome from './Welcome/Welcome';\r\nimport TeacherSignIn from './TeacherSignIn/TeacherSignIn.jsx';\r\nimport TeacherSignUp from './TeacherSignUp/TeacherSignUp.jsx';\r\nimport Mainblog from './Mainblog/Mainblog.jsx';\r\nimport ForgotPassword from './forgotpass/forgotpass.jsx';\r\nimport DashboardAttendence from './Dashboard/DashboardAttendence/DashboardAttendence.jsx';\r\nimport Teacherblog from './teacherblog/teacherblog.jsx';\r\nimport {Provider} from 'react-redux';\r\nimport Store from './redux/store.jsx';\r\nimport Resetpass from './resetpass/Resetpass.jsx';\r\nimport Takeattendance from './takeattendance/takeattendance.jsx';\r\nimport ClassLinks from './ClassLinks/ClassLinks.jsx';\r\nimport ClassBlog from './ClassBlog/ClassBlog.jsx';\r\nimport StudentClassBlog from './StudentClassBlog/StudentClassBlog.jsx';\r\nimport QueryBlog from './QueryBlog/QueryBlog.jsx';\r\nimport NotificationBlog from './NotificationBlog/NotificationBlog.jsx';\r\nimport DashboardEvent from './Dashboard/DashboardEvent/DashboardEvent.jsx';\r\nimport QueryBlogChat from './QueryBlogChat/QueryBlogChat.jsx';\r\nimport Dashboard from './Dashboard/Dashboard.jsx';\r\n\r\nexport const BaseUrl=\"http://127.0.0.1:8000/\";\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={()=><Welcome/>}></Route>\r\n        <Route exact path=\"/forgotpass\" component={()=><Provider store={Store}><ForgotPassword type=\"student\"/></Provider>}></Route>\r\n        <Route exact path=\"/forgotpassteacher\" component={()=><Provider store={Store}><ForgotPassword type=\"teacher\"/></Provider>}></Route>\r\n        <Route exact path=\"/resetpass\" component={()=><Provider store={Store}><Resetpass type=\"student\"/></Provider>}></Route>\r\n        <Route exact path=\"/resetpassteacher\" component={()=><Provider store={Store}><Resetpass type=\"teacher\"/></Provider>}></Route>\r\n        <Route exact path='/SignIn' component={()=><Provider store={Store}><SignIn/></Provider>}></Route>\r\n        <Route exact path='/SignUp' component={()=><Provider store={Store}><SignUp/></Provider>}></Route>\r\n        <Route exact path='/TeacherSignIn' component={()=><Provider store={Store}><TeacherSignIn/></Provider>}></Route>\r\n        <Route exact path='/TeacherSignUp' component={()=><Provider store={Store}><TeacherSignUp/></Provider>}></Route>\r\n        <Route exact path='/mainblog' component={()=><Provider store={Store}><Mainblog/></Provider>}></Route>\r\n        <Route exact path='/Dashboard' component={()=><Provider store={Store}><Dashboard type=\"student\"/></Provider>}></Route>\r\n        <Route exact path='/teacherDashboard' component={()=><Provider store={Store}><Dashboard type=\"teacher\"/></Provider>}></Route>\r\n        <Route exact path='/DashboardAttendence' component={()=><Provider store={Store}><DashboardAttendence/></Provider>}></Route>\r\n        <Route exact path='/teacherblog' component={()=><Provider store={Store}><Dashboard type=\"teacher\"/></Provider>}></Route>\r\n        <Route exact path='/ClassLinks' component={()=><Provider store={Store}><ClassLinks/></Provider>}></Route>\r\n        <Route exact path='/ClassBlog' component={()=><Provider store={Store}><ClassBlog/></Provider>}></Route>\r\n        <Route exact path=\"/StudentClassBlog\" component={()=><Provider store={Store}><StudentClassBlog/></Provider>}></Route>\r\n        <Route exact path='/takeattendance/:subject/:section/:time' component={()=><Provider store={Store}><Takeattendance/></Provider>}></Route>\r\n        <Route exact path=\"/DashboardEvent\" component={()=><Provider store={Store}><DashboardEvent type=\"student\" /></Provider>}></Route>\r\n        <Route exact path=\"/DashboardEventTeacher\" component={()=><Provider store={Store}><DashboardEvent type=\"teacher\"/></Provider>}></Route>\r\n        <Route exact path=\"/teacherQueryBlog\" component={()=><Provider store={Store}><QueryBlog type=\"teacher\"/></Provider>}></Route>\r\n        <Route exact path=\"/QueryBlog\" component={()=><Provider store={Store}><QueryBlog type=\"student\"/></Provider>}></Route>\r\n        <Route exact path='/NotificationBlog' component={()=><Provider store={Store}><NotificationBlog type=\"student\"></NotificationBlog></Provider>}></Route>\r\n        <Route exact path='/teacherNotificationBlog' component={()=><Provider store={Store}><NotificationBlog type=\"teacher\"></NotificationBlog></Provider>}></Route>\r\n        <Route exact path=\"/QueryAnswerBlog/:title/:type\" component={()=><Provider store={Store}><QueryBlogChat /></Provider>}></Route>\r\n        {/* <Route exact path=\"/teacherQueryAnswerBlog/:title/:type\" component={()=><Provider store={Store}><QueryBlogChat /></Provider>}></Route> */}\r\n        <Route exact path='/error' component={()=><h1>Error</h1>}/>\r\n      </Switch>\r\n    </>\r\n  )\r\n}\r\nexport default App;\r\n","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\forgotpass\\forgotpass.jsx",["227","228"],"import React, { useState } from 'react';\r\nimport Avatar from \"./Avatar/Avatar\";\r\nimport wave from \"../assets/wave.png\";\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport signInpic1 from \"../assets/signInpic1.svg\";\r\nimport { BaseUrl } from '../App.jsx';\r\nimport './forgotpass.scss';\r\nconst ForgotPassword = (props) => {\r\n    const state = useSelector(state => state.forgetpass);\r\n    // console.log(state);\r\n    const dispatch = useDispatch();\r\n    const H = useHistory();\r\n    const [value, setValue] = useState('');\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [vis, setvis] = useState({ \"visibility\": \"hidden\", \"background\": \"#5ae663\", \"msg\": \"\" });\r\n    const handleTextChange = (text) => {\r\n        setValue(text);\r\n        if (text !== '') {\r\n            setIsActive(true);\r\n        } else {\r\n            setIsActive(false);\r\n        }\r\n    }\r\n    const onsubmitlogin = async (e) => {\r\n        e.preventDefault();\r\n        dispatch({ 'type': \"request_forgetpass\" })\r\n        console.log(state);\r\n        const info = { \"type\": props.type, \"email\": value }\r\n        try {\r\n            const data = await axios({\r\n                method: \"post\",\r\n                url: BaseUrl + \"forgetpassword/\",\r\n                headers: { \"Authorization\": \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                responseType: \"json\",\r\n                data: info\r\n            })\r\n            dispatch({type:\"success_forgetpass\",payload:data.data})\r\n            if (props.type === \"student\") {\r\n                H.push('/SignIn');\r\n            }\r\n            else {\r\n                H.push('/TeacherSignIn');\r\n            }\r\n            // setvis(()=>({\"background\":\"#5ae663\",\"visibility\":\"visible\",\"msg\":\"password as been sent to your mail\"}));\r\n        }\r\n        catch {\r\n            setvis(() => ({ \"background\": \"#e05871\", \"visibility\": \"visible\", \"msg\": \"invalid email\" }));\r\n            dispatch({ 'type': \"error_forgetpass\",'payload':\"error\"})\r\n            console.log(\"error\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"alert text-center alert-dismissible fade show m-0 px-2\" style={{ \"visibility\": vis.visibility, \"background\": vis.background }} role=\"alert\">\r\n                {vis.msg}\r\n            </div>\r\n            <div className=\"loader-spinner\" style={{visibility:(state.loading )? \"visible\" : \"hidden\"}}>\r\n                <div className=\"spinner-grow text-success mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-danger mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-warning mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"signUpPage whole\" style={{visibility:(state.loading )? \"hidden\" : \"visible\"}}>\r\n                <img className=\"wave\" src={wave} alt=\"wallpaper\"></img>\r\n                <h3 className=\"title text-center\">Password will be send to your mail</h3>\r\n                <div className=\"container\">\r\n                    <img src={signInpic1} alt=\"sigup\" className=\"img\" mb-5 style={{ top: \"4rem\" }}></img>\r\n                    <div className=\"login-content\">\r\n                        <form className=\"form\">\r\n                            <div class=\"input-div one\">\r\n                                <div class=\"i\">\r\n                                    <i class=\"fas fa-user\"></i>\r\n                                </div>\r\n                                <div class=\"div\">\r\n                                    <h5 className={isActive ? \"Active\" : \"\"}>Email</h5>\r\n                                    <input type=\"text\" class=\"input\" value={value}\r\n                                        onChange={(e) => handleTextChange(e.target.value)} required></input>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <Link to={(props.type == \"student\") ? '/resetpass' : '/resetpassteacher'}>anymore ways?</Link>\r\n                            </div>\r\n                            {/*\r\n                                <div class=\"input-div pass\">\r\n                                    <div class=\"i\">\r\n                                        <i class=\"fas fa-lock\"></i>\r\n                                    </div>\r\n                                </div> */}\r\n                            <br />\r\n                            <input type=\"submit\" className=\"btn\" onClick={onsubmitlogin} value=\"Submit\"></input>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword;","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\forgotpass\\Avatar\\Avatar.jsx",[],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\teacherblog\\teacherblog.jsx",["229","230","231","232","233","234"],"import React, { useEffect,useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport icon from '../assets/icon.png';\r\nimport attendance from '../assets/attendance.jpg'\r\nimport classlinks from '../assets/classlinks.png'\r\nimport queries from '../assets/query-board.png'\r\nimport event from '../assets/calendar.png'\r\nimport './teacherblog.scss';\r\nimport { BaseUrl } from '../App.jsx';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport useInterval from 'react-useinterval';\r\nconst Teacherblog = () => {\r\n    const [noBadges, setNoBadges] = useState(0);\r\n    const state1 = useSelector(state => state.getNotifications);\r\n    const [delay, setDelay] = useState(1000);\r\n    console.log(localStorage.getItem('value'))\r\n    const H = useHistory();\r\n    let state = useSelector(state => state.teachersignin);\r\n    let dispatch = useDispatch();\r\n    useEffect(async () => {\r\n        let d = new Date();\r\n        const d_s = d.getFullYear() + \"-\" + (d.getMonth() + 1) + \"-\" + d.getDate() + \" \" + d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds();\r\n        // e.preventDefault();\r\n        const value = JSON.parse(localStorage.getItem('value'));\r\n        let info = { ...value, 'date': d_s };\r\n        dispatch({ type: 'request_teachersignin' });\r\n        try {\r\n            const data = await axios({\r\n                method: \"post\",\r\n                url: BaseUrl + \"teacherexists/\",\r\n                headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                data: info,\r\n                responseType: 'json'\r\n            })\r\n            dispatch({ type: \"success_teachersignin\", payload: data.data });\r\n            // H.push(`/mainblog`);\r\n        }\r\n        catch {\r\n            dispatch({ type: \"error_teachersignin\", payload: \"error\" })\r\n            H.push('/error');\r\n        }\r\n    }, []);\r\n    const [updateNotifications,setUpdateNotifications] = useState(true);\r\n    useEffect(async ()=>{\r\n        setDelay(null);\r\n        // dispatch({\"type\":\"request_getNotifications\"})\r\n        try {\r\n            const data = await axios({\r\n                method: 'post',\r\n                url: BaseUrl + `getNotifications/`,\r\n                headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                data: { \"username\": JSON.parse(localStorage.getItem('value')).rollno, seen: 0 },\r\n                responseType: 'json'\r\n            });\r\n            // dispatch({\"type\":\"success_getNotifications\",payload:data.data});\r\n            setNoBadges((data.data).length);\r\n            // console.log((data.data).length);\r\n            setDelay(10000);\r\n        }\r\n        catch {\r\n            // dispatch({\"type\":\"error_getNotifications\",payload:\"\"});\r\n            setDelay(null);\r\n        }\r\n    },[updateNotifications]);\r\n    const getNotifications = async () => {\r\n        setUpdateNotifications((pre) => !pre);\r\n    }\r\n    useInterval(getNotifications, delay)\r\n    let props = [{ \"image\": classlinks, \"title\": \"\", \"link\": \"/ClassBlog\", \"info\": \"ADDCLASS\" }, { \"image\": queries, \"title\": \"\", \"info\": \"QUERYBLOG\", \"link\": \"/teacherQueryBlog\" },\r\n    { \"image\": event, \"title\": \"\", \"info\": \"EVENTS\", \"link\": \"/DashboardEventTeacher\" }]\r\n    return (\r\n        <div>\r\n            <div className=\"loader-spinner\" style={{ visibility: (state.loading) ? \"visible\" : \"hidden\" }}>\r\n                <div className=\"spinner-grow text-success mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-danger mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-warning mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"container-fluid h-100\" style={{ visibility: (state.loading) ? \"hidden\" : \"visible\" }}>\r\n                <div className=\"row fixed-top\">\r\n                    <div className=\"col-12 navbar navbar-light bg-dark\">\r\n                        <div className=\"\">\r\n                            <Link className=\"navbar-brand\" >\r\n                                <img src={icon} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"\" />\r\n                                <label className=\"ml-2 text-white\">hii {JSON.parse(localStorage.getItem('value')).rollno}</label>\r\n                            </Link>\r\n                        </div>\r\n                        <label className=\"ml-auto text-white mt-1 text-center\">\r\n                            VISUAL MEET\r\n                                </label>\r\n                        <div className=\"ml-auto text-white\">\r\n                            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n                                <Badge badgeContent={noBadges} color=\"secondary\" onClick={() => H.push('/teacherNotificationBlog')}>\r\n                                    <NotificationsIcon />\r\n                                </Badge>\r\n                            </IconButton>\r\n                            <button className=\"btn btn-outline-danger ml-3 mr-2\" onClick={() => { localStorage.removeItem('value'); H.push(\"/\"); }}>logout</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container pt-5\" >\r\n                    <div className=\"row ml-sm-5\" style={{ \"marginTop\": \"8rem\" }}>\r\n                        {/* {data.map((v)=><MainCard image={v.image} title={v.info} info={v.title}/>)} */}\r\n                        <div className=\"card MainCard h-100  my-5 mx-auto px-0 rounded-lg shadow\" style={{ \"width\": \"15rem\", \"height\": \"12rem\" }}>\r\n                            <img src={classlinks} className=\"card-img-top img-responsive\" alt=\"...\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">{props[0].title}</h5>\r\n                                <p className=\"card-text\">{props[0].info}</p>\r\n                                <Link to={props[0].link} className=\"btn btn-primary\">click to view...</Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card MainCard h-100  my-5  mx-auto  rounded-lg shadow\" style={{ \"width\": \"15rem\", \"height\": \"12rem\" }}>\r\n                            <img src={queries} className=\"card-img-top img-responsive\" alt=\"...\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">{props[1].title}</h5>\r\n                                <p className=\"card-text\">{props[1].info}</p>\r\n                                <Link to={props[1].link} className=\"btn btn-primary\">click to view...</Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card MainCard h-100  my-5  mx-auto rounded-lg shadow\" style={{ \"width\": \"15rem\", \"height\": \"12rem\" }}>\r\n                            <img src={event} className=\"card-img-top img-responsive\" alt=\"...\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">{props[2].title}</h5>\r\n                                <p className=\"card-text\">{props[2].info}</p>\r\n                                <Link to={props[2].link} className=\"btn btn-primary\">click to view...</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Teacherblog;\r\n","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\resetpass\\Resetpass.jsx",["235"],"import React, { useState } from 'react';\r\nimport './Resetpass.scss';\r\nimport wave from \"../assets/wave.png\";\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport signInpic1 from \"../assets/signInpic1.svg\";\r\nimport {BaseUrl} from '../App.jsx';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nconst Resetpass = (props) => {\r\n    let state=useSelector(state=>state.resetpass);\r\n    let dispatch = useDispatch();\r\n    const H = useHistory();\r\n    const [value, setValue] = useState('');\r\n    const [isActivePass, setIsActivePass] = useState(false);\r\n    const [valuePass, setValuePass] = useState('');\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [vis, setvis] = useState({ \"visibility\": \"hidden\", \"background\": \"#5ae663\", \"msg\": \"\" });\r\n    const handleTextChange = (text) => {\r\n        setValue(text);\r\n\r\n        if (text !== '') {\r\n            setIsActive(true);\r\n        } else {\r\n            setIsActive(false);\r\n        }\r\n    }\r\n    const handleTextChangePass = (text) => {\r\n        setValuePass(text);\r\n\r\n        if (text !== '') {\r\n            setIsActivePass(true);\r\n        } else {\r\n            setIsActivePass(false);\r\n        }\r\n    }\r\n    const onsubmitlogin = async (e) => {\r\n        e.preventDefault();\r\n        const info = { \"password\": valuePass }\r\n        console.log(info);\r\n        console.log(value);\r\n        console.log(props.type);\r\n        dispatch({type:\"request_resetpass\"});\r\n        try {\r\n            const data = await axios({\r\n                method: \"patch\",\r\n                url: BaseUrl+props.type+\"Store/\"+value+\"/\",\r\n                headers: { \"Authorization\": \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                responseType: \"json\",\r\n                data: info\r\n            })\r\n            dispatch({type:\"success_resetpass\",payload:data.data})\r\n            if (props.type === \"student\") {\r\n                H.push('/SignIn');\r\n            }\r\n            else {\r\n                H.push('/TeacherSignIn');\r\n            }\r\n            // setvis(()=>({\"background\":\"#5ae663\",\"visibility\":\"visible\",\"msg\":\"password as been sent to your mail\"}));\r\n        }\r\n        catch {\r\n            setvis(() => ({ \"background\": \"#e05871\", \"visibility\": \"visible\", \"msg\": \"invalid email\" }));\r\n            console.log(\"error\")\r\n            dispatch({type:\"error_resetpass\",payload:\"error\"});\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"alert text-center alert-dismissible fade show m-0 px-2\" style={{ \"visibility\": vis.visibility, \"background\": vis.background }} role=\"alert\">\r\n                {vis.msg}\r\n            </div>\r\n            <div className=\"loader-spinner\" style={{visibility:(state.loading )? \"visible\" : \"hidden\"}}>\r\n                <div className=\"spinner-grow text-success mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-danger mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-warning mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"signUpPage whole\" style={{visibility:(state.loading )? \"hidden\" : \"visible\"}}>\r\n                <img className=\"wave\" src={wave} alt=\"wallpaper\"></img>\r\n                <h3 className=\"title text-center\">Reset your password</h3>\r\n                <div className=\"container\">\r\n                    <img src={signInpic1} alt=\"sigup\" className=\"img\" mb-5 style={{ top: \"4rem\" }}></img>\r\n                    <div className=\"login-content\">\r\n                        <form className=\"form\">\r\n                            <div class=\"input-div one\">\r\n                                <div class=\"i\">\r\n                                    <i class=\"fas fa-user\"></i>\r\n                                </div>\r\n                                <div class=\"div\">\r\n                                    <h5 className={isActive ? \"Active\" : \"\"}>Username</h5>\r\n                                    <input type=\"text\" class=\"input\" value={value}\r\n                                        onChange={(e) => handleTextChange(e.target.value)} required></input>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"input-div pass\">\r\n                                <div class=\"i\">\r\n                                    <i class=\"fas fa-lock\"></i>\r\n                                </div>\r\n                                <div class=\"div\">\r\n                                    <h5 className={isActivePass ? \"Active\" : \"\"}>New Password</h5>\r\n                                    <input type=\"password\" class=\"input\" value={valuePass}\r\n                                        onChange={(e) => handleTextChangePass(e.target.value)} required></input>\r\n                                </div>\r\n                            </div>\r\n                            <br />\r\n                            <input type=\"submit\" className=\"btn\" onClick={onsubmitlogin} value=\"Submit\"></input>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Resetpass;","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\redux\\store.jsx",["236","237","238","239"],"import {createStore,applyMiddleware,combineReducers} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport Reducer from './reducers.jsx';\r\nimport logger from 'redux-logger'\r\nimport thunk from 'redux-thunk'\r\nlet red=combineReducers({\r\n    forgetpass:Reducer('forgetpass'),\r\n    resetpass:Reducer('resetpass'),\r\n    signin:Reducer('signin'),\r\n    signup:Reducer('signup'),\r\n    // studentsignin:Reducer('signin'),\r\n    teachersignin:Reducer('teachersignin'),\r\n    takeattendance:Reducer('takeattendance'),\r\n    uploadattendance:Reducer('uploadattendance'),\r\n    classblog:Reducer('classblog'),\r\n    getclassblog:Reducer('getclassblog'),\r\n    deletenotes:Reducer('deletenotes'),\r\n    StudentClassBlog:Reducer('StudentClassBlog'),\r\n    onSearchLinks:Reducer('onSearchLinks'),\r\n    QueryBlog:Reducer('QueryBlog'),\r\n    DashboardEvent:Reducer('DashboardEvent'),\r\n    titleExists:Reducer('titleExists'),\r\n    addQuestion:Reducer('addQuestion'),\r\n    getNotifications:Reducer('getNotifications'),\r\n    showNotifications:Reducer('showNotifications'),\r\n    showQueryBlogMessages:Reducer('showQueryBlogMessages'),\r\n    sendQueryBlogMessages:Reducer('sendQueryBlogMessages'),\r\n    sendAttendanceNotification:Reducer('sendAttendanceNotification'),\r\n    getAttendanceNotification:Reducer('getAttendanceNotification'),\r\n})\r\nlet Store=createStore(red) \r\nexport default Store;","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\redux\\reducers.jsx",[],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\takeattendance\\takeattendance.jsx",["240","241","242","243","244","245","246","247","248","249","250","251","252","253","254"],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\ClassLinks\\ClassLinks.jsx",["255","256","257","258","259","260","261","262"],"import React, {useState} from 'react';\r\nimport \"./ClassLinks.scss\";\r\nimport { Link } from 'react-router-dom';\r\nimport icon from '../assets/icon.png';\r\nimport {useParams} from 'react-router';\r\nimport {useHistory} from 'react-router-dom';\r\nimport NewLink from './NewLink/NewLink';\r\nimport PostedLinks from './PostedLinks/PostedLinks';\r\nimport ClassLinksHeader from './ClassLinksHeader';\r\nimport { Button, makeStyles } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Modal from 'react-modal';\r\n\r\nconst useStyles = makeStyles({\r\n    addLink: {\r\n        borderRadius: \"50%\",\r\n        width: \"3rem\",\r\n        height: \"4rem\",\r\n        color: \"#cad315\",\r\n        backgroundColor: \"#f2f4c0\",\r\n        position: \"absolute\",\r\n        bottom: \"2rem\",\r\n        right: \"2rem\" \r\n    },\r\n    addIconLink: {\r\n        fontSize: \"3rem\"\r\n    }\r\n});\r\n\r\nfunction ClassLinks(props) {\r\n    const classes = useStyles(props);\r\n    const [modelOpen, setmodelOpen] = useState(false);\r\n    const [link, setlink] = useState();\r\n    const [classLink, setclassLink] = useState([]);\r\n\r\n    const closeModel = () => setmodelOpen(false);\r\n\r\n    const openModel = () => setmodelOpen(true);\r\n\r\n    const addClassLink = (newLink) => {\r\n        const tempLink = {\r\n            title: \"<h1>ahsdjsadhk</h1>\",\r\n            content: \"<p>Heloasdasd</p>\",\r\n            section:\"<p>Heloasdasd</p>\",\r\n            date:\"<p>Heloasdasd</p>\"\r\n        }\r\n        console.log(newLink);\r\n        console.log(classLink);\r\n        \r\n        setclassLink((prevData)=>{\r\n            return [...prevData, newLink]\r\n        })\r\n        console.log(classLink);\r\n    }\r\n\r\n    const onDelete = (id) => {\r\n        console.log(id);\r\n        setclassLink((prevData) => \r\n            prevData.filter((curData, idx) => {\r\n                if(idx===id[\"id\"]){\r\n                    console.log(\"yo!\")\r\n                }\r\n                return idx!==id[\"id\"];\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"linkBackground d-block\" style={{position:\"relative\", alignItems:\"center\"}}>\r\n            <ClassLinksHeader open={openModel}></ClassLinksHeader>\r\n            <h1 style={{textAlign: \"center\"}} className=\"linkHeading\">Class Links:</h1>\r\n            <div className=\"linksArea\">\r\n                {classLink.map((val, idx) => {\r\n                    return (\r\n                        <PostedLinks\r\n                            key={idx}\r\n                            id={idx}\r\n                            title={val.title}\r\n                            content={val.content}\r\n                            section={val.section}\r\n                            date={val.date}\r\n                            deleteItem = {onDelete}\r\n                        ></PostedLinks>\r\n                    )\r\n                })}\r\n            </div>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <Button className={classes.addLink} style={{border:\"none\", outline:\"none\"}}\r\n                onClick={openModel}>\r\n                <AddIcon className={classes.addIconLink}></AddIcon>\r\n            </Button>\r\n            {modelOpen? <div style={{width: \"100vw\", height: \"100vh\", position: \"fixed\", top: \"0px\", backgroundColor: \"rgba(0,0,0,0.5)\"}} onClick={closeModel}></div>:null}\r\n            <NewLink show={modelOpen} close={closeModel} addLink = {addClassLink}></NewLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClassLinks;\r\n","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\ClassLinks\\ClassLinksHeader.jsx",["263","264"],"import React from 'react';\r\nimport icon from '../assets/icon.png';\r\n\r\nfunction ClassLinksHeader(props) {\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar fixed-top navbar-expand-lg navbar-dark bg-dark\">\r\n                <div class=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"#\">\r\n                        <img src={icon} width=\"40\" height=\"40\" alt=\"\" style={{ borderRadius: '10px' }}></img>\r\n                    </a>\r\n                    <a className=\"navbar-brand\" href=\"#\">VISUAL MEET</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav ml-auto mr-3\">\r\n                            <li class=\"nav-item\">\r\n                                 <button style={{ color: \"#fff\", fontSize: \"1.3rem\", background: \"transparent\", outline:\"none\", border: \"none\"}} className=\"mr-3\" onClick={props.open}>NewLink</button>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"ml-auto mr-3\" href=\"/SignUp\" style={{ color: \"#fff\" }}>\r\n                                    <button type=\"button\" className=\"btn btn-outline-danger ml-2\"><span>LOGOUT</span></button>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClassLinksHeader;\r\n","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\ClassLinks\\PostedLinks\\PostedLinks.jsx",[],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\ClassLinks\\NewLink\\NewLink.jsx",["265","266","267","268","269","270"],"import React, { Component } from 'react';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Add from '@material-ui/icons/Add';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { EditorState, convertToRaw } from 'draft-js';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport \"./NewLink.scss\";\r\nimport { Button } from '@material-ui/core';\r\nimport transitions from '@material-ui/core/styles/transitions';\r\n\r\nclass NewLink extends Component {\r\n  state = {\r\n    count: 1,\r\n    titleState: EditorState.createEmpty(),\r\n    descState: EditorState.createEmpty(),\r\n    title: true,\r\n    desc: true\r\n  }\r\n\r\n  onTitleStateChange: Function = (titleState) => {\r\n    this.setState({\r\n      titleState,\r\n    });\r\n  };\r\n  onDescStateChange: Function = (descState) => {\r\n    this.setState({\r\n      descState,\r\n    });\r\n  };\r\n  onsectionStateChange: Function = (sectionState) => {\r\n    this.setState({\r\n      sectionState,\r\n    });\r\n  }\r\n  oneditorStateChange: Function =(editorState) => {\r\n    this.setState({\r\n      editorState,\r\n    });\r\n  }\r\n  addClassLink: Function = () => {\r\n    const newLink = {\r\n      title: draftToHtml(convertToRaw(this.state.titleState.getCurrentContent())),\r\n      content: draftToHtml(convertToRaw(this.state.descState.getCurrentContent())),\r\n      section: draftToHtml(convertToRaw(this.state.sectionState.getCurrentContent())),\r\n      date: draftToHtml(convertToRaw(this.state.editorState.getCurrentContent())),\r\n    }\r\n    console.log(newLink);\r\n    this.props.addLink(newLink)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"newLink ml-auto\" style={{\r\n        display: this.props.show ? \"inline-block\": \"none\",\r\n      }}>\r\n          <div className=\"newLinkCard\" style={{\r\n            transform: this.props.show ? \"translateY(0vh)\":\"translateY(100vh)\",\r\n            border: \"2px black solid\",\r\n            marginTop: \"0px !important\"\r\n          }}>\r\n          <Editor\r\n            style={{border: \"2px red solid\",\r\n            transform: this.props.show ? \"translateY(0vh)\":\"translateY(100vh)\"}}\r\n            editorState={this.state.titleState}\r\n            wrapperClassName=\"newWrapper\"\r\n            toolbarClassName=\"newToolBar\"\r\n            editorClassName=\"newEditor1\"\r\n            onEditorStateChange={this.onTitleStateChange}\r\n            toolbar={\r\n              {\r\n                fontSize: {\r\n                  options: [16, 18, 24, 30],\r\n                  defaultSize:14\r\n                }\r\n              }\r\n            }\r\n            /*toolbarHidden={this.state.title}\r\n            onFocus = {() => {\r\n              if(this.state.count===1){\r\n                this.setState(prevState => {\r\n                  return {count: prevState.count + 1}\r\n                });\r\n                this.setState({\r\n                  title: !this.state.title,\r\n                  desc: this.state.desc,\r\n                });\r\n              }\r\n              else{\r\n                this.setState({\r\n                  title: !this.state.title,\r\n                  desc: !this.state.desc,\r\n                });\r\n              }\r\n            }} */\r\n            placeholder=\"Title\"\r\n            />\r\n          <Editor\r\n            style={{border: \"2px red solid\",\r\n            transform: this.props.show ? \"translateY(10%)\":\"none\", transition: \"all 1.3s ease\"}}\r\n            editorState={this.state.descState}\r\n            wrapperClassName=\"newWrapper\"\r\n            editorClassName=\"newEditor2\"\r\n            toolbarClassName=\"newToolBar\"\r\n            onEditorStateChange={this.onDescStateChange}\r\n            /* toolbarHidden={this.state.desc}\r\n            onFocus = {() => {\r\n              if(this.state.count===1){\r\n                this.setState(prevState => {\r\n                  return {count: prevState.count + 1}\r\n                });\r\n                this.setState({\r\n                  title: this.state.title,\r\n                  desc: !this.state.desc,\r\n                });\r\n              }\r\n              else{\r\n                this.setState({\r\n                  title: !this.state.title,\r\n                  desc: !this.state.desc,\r\n                });\r\n              }\r\n            }} */\r\n            toolbar={\r\n              {\r\n                fontSize: {\r\n                  options: [8, 9, 10, 11, 12, 14, 16, 18],\r\n                  defaultSize: 14,\r\n                }\r\n              }\r\n            }\r\n            placeholder=\"Description\"\r\n            required\r\n          />\r\n          <Editor\r\n            style={{border: \"2px red solid\",\r\n            transform: this.props.show ? \"translateY(10%)\":\"none\", transition: \"all 1.3s ease\"}}\r\n            editorState={this.state.sectionState}\r\n            wrapperClassName=\"newWrapper\"\r\n            editorClassName=\"newEditor2\"\r\n            toolbarClassName=\"newToolBar\"\r\n            onEditorStateChange={this.onsectionStateChange}\r\n            toolbar={\r\n              {\r\n                fontSize: {\r\n                  options: [8, 9, 10, 11, 12, 14, 16, 18],\r\n                  defaultSize: 14,\r\n                }\r\n              }\r\n            }\r\n            placeholder=\"section\"\r\n            required\r\n          />\r\n          <Editor\r\n            style={{border: \"2px red solid\",\r\n            transform: this.props.show ? \"translateY(10%)\":\"none\", transition: \"all 1.3s ease\"}}\r\n            editorState={this.state.editorState}\r\n            wrapperClassName=\"newWrapper\"\r\n            editorClassName=\"newEditor2\"\r\n            toolbarClassName=\"newToolBar\"\r\n            onEditorStateChange={this.oneditorStateChange}\r\n            toolbar={\r\n              {\r\n                fontSize: {\r\n                  options: [8, 9, 10, 11, 12, 14, 16, 18],\r\n                  defaultSize: 14,\r\n                }\r\n              }\r\n            }\r\n            placeholder=\"date(YYYY:MM:DD HH-MM-SS in this format)\"\r\n            required\r\n          />\r\n          <div style={{backgroundColor: \"#00af91\",\r\n        transform: this.props.show ? \"translateY(0vh)\":\"translateY(100vh)\", trasition: \"all 1.3s ease\"}} className=\"newLinkAddButton\">\r\n\r\n            <Button variant=\"contained\" style={{border: \"none\",\r\n            outline:\"none\", margin:\"1rem\"}} className=\"mt-3 ml-auto newLinkAddButtons\" type=\"submit\" \r\n            onClick={\r\n              ()=>{\r\n                /* this.props.addLink(draftToHtml(convertToRaw(this.state.titleState.getCurrentContent())));\r\n                this.props.addLink(draftToHtml(convertToRaw(this.state.descState.getCurrentContent())));\r\n                */\r\n                this.addClassLink();\r\n                this.props.close();\r\n                this.onTitleStateChange(EditorState.createEmpty());\r\n                this.props.close();\r\n                this.onDescStateChange(EditorState.createEmpty());\r\n              }\r\n            }>\r\n            Add\r\n            </Button>\r\n\r\n            <Button variant=\"contained\" style={{border: \"none\",\r\n                    outline:\"none\", margin:\"1rem\", margin:\"auto\"}} className=\"newLinkAddButtons\" onClick={this.props.close}>Close</Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewLink;","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\ClassBlog\\ClassBlog.jsx",["271","272","273","274","275","276","277"],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\ClassBlog\\Notes.jsx",["278","279","280"],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\StudentClassBlog\\StudentClassBlog.jsx",["281","282","283","284","285","286"],"import React, { useEffect, useState } from 'react'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { DataGrid, getColDef } from '@material-ui/data-grid';\r\nimport { BaseUrl } from '../App.jsx';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\nconst StudentClassBlog = () => {\r\n    const H = useHistory();\r\n    let [onsearch, settable] = useState(false);\r\n    let [searchval, onsearchval] = useState(\"\");\r\n    const state1 = useSelector(state => state.StudentClassBlog);\r\n    const state2 = useSelector(state => state.onSearchLinks);\r\n    let state = useSelector(state => state.signin);\r\n    const dispatch = useDispatch();\r\n    useEffect(async () => {\r\n        let d = new Date();\r\n        const d_s = d.getFullYear() + \"-\" + (d.getMonth() + 1) + \"-\" + d.getDate() + \" \" + d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds();\r\n        const value = JSON.parse(localStorage.getItem('value'));\r\n        let info = { ...value, 'date': d_s };\r\n        dispatch({ type: 'request_signin' });\r\n        try {\r\n            const data = await axios({\r\n                method: \"post\",\r\n                url: BaseUrl + \"studentexists/\",\r\n                headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                data: info,\r\n                responseType: 'json'\r\n            })\r\n            dispatch({ type: \"success_signin\", payload: data.data });\r\n            // H.push(`/mainblog`);\r\n        }\r\n        catch {\r\n            dispatch({ type: \"error_signin\", payload: \"error\" })\r\n            H.push('/error');\r\n        }\r\n    }, [])\r\n    const [rows, setrows] = useState([]);\r\n    useEffect(async () => {\r\n        dispatch({ 'type': \"request_StudentClassBlog\" });\r\n        const info = { \"username\": JSON.parse(localStorage.getItem(\"value\")).rollno }\r\n        console.log(info);\r\n        try {\r\n            const data = await axios({\r\n                method: \"post\",\r\n                url: BaseUrl + \"getAttendanceStatus/\",\r\n                headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                responseType: \"json\",\r\n                data: info\r\n            })\r\n            dispatch({ 'type': \"success_StudentClassBlog\", \"payload\": data.data });\r\n            setrows(data.data);\r\n        }\r\n        catch {\r\n            dispatch({ 'type': \"error_StudentClassBlog\", \"payload\": \"error\" });\r\n            H.push('/error');\r\n        }\r\n    }, [onsearch])\r\n    const onSearch = async (e) => {\r\n        onsearchval(e.target.value);\r\n        dispatch({ 'type': 'request_onSearchLinks' })\r\n        try {\r\n            const info = { \"username\": JSON.parse(localStorage.getItem('value')).rollno, \"subject\": e.target.value }\r\n            console.log(info);\r\n            const data = await axios({\r\n                method: \"post\",\r\n                url: BaseUrl + \"onSearchLinkBlog/\",\r\n                headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                responseType: \"json\",\r\n                data: info\r\n            })\r\n            dispatch({ 'type': \"success_onSearchLinks\", \"payload\": data.data });\r\n            setrows(data.data);\r\n        }\r\n        catch {\r\n            dispatch({ 'type': \"error_onSearchLinks\", \"payload\": \"error\" });\r\n        }\r\n    }\r\n    const columns = [\r\n        {\r\n            field: 'posted_by',\r\n            headerName: 'TEACHER',\r\n            width: 130,\r\n            description: 'link was posted by',\r\n        },\r\n        { field: 'subject', headerName: 'SUBJECT', width: 130 },\r\n        {\r\n            field: 'class_day',\r\n            headerName: 'CLASS DAY',\r\n            width: 130,\r\n            description: 'The day when class as been taken',\r\n        },\r\n        {\r\n            field: 'class_time',\r\n            headerName: 'CLASS TIME',\r\n            description: 'The time when class starts',\r\n            width: 160,\r\n        },\r\n        {\r\n            field: 'get_status',\r\n            headerName: 'ATTENDANCE STATUS',\r\n            description: 'Attandence status of this class',\r\n            width: 220,\r\n        },\r\n        {\r\n            field: 'link',\r\n            headerName: 'LINK',\r\n            renderCell: (params) => {\r\n                // console.log(params);\r\n                return (<Link to={params.value} target=\"_blank\">\r\n                    {params.value}\r\n                </Link>\r\n            )\r\n        },\r\n            width: 200,\r\n            description: 'link was posted by',\r\n        },\r\n    ];\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n            flexGrow: 1,\r\n            display: 'none',\r\n            [theme.breakpoints.up('sm')]: {\r\n                display: 'block',\r\n            },\r\n        },\r\n        search: {\r\n            position: 'relative',\r\n            borderRadius: theme.shape.borderRadius,\r\n            backgroundColor: fade(theme.palette.common.white, 0.15),\r\n            '&:hover': {\r\n                backgroundColor: fade(theme.palette.common.white, 0.25),\r\n            },\r\n            marginLeft: 0,\r\n            width: '100%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                marginLeft: theme.spacing(1),\r\n                width: 'auto',\r\n            },\r\n        },\r\n        searchIcon: {\r\n            padding: theme.spacing(0, 2),\r\n            height: '100%',\r\n            position: 'absolute',\r\n            pointerEvents: 'none',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n        inputRoot: {\r\n            color: 'inherit',\r\n        },\r\n        inputInput: {\r\n            padding: theme.spacing(1, 1, 1, 0),\r\n            // vertical padding + font size from searchIcon\r\n            paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n            transition: theme.transitions.create('width'),\r\n            width: '100%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: '12ch',\r\n                '&:focus': {\r\n                    width: '20ch',\r\n                },\r\n            },\r\n        },\r\n    }));\r\n    const useStyles1 = makeStyles((theme) => ({\r\n        root: {\r\n            width: '100%',\r\n        },\r\n        heading: {\r\n            fontSize: theme.typography.pxToRem(15),\r\n            fontWeight: theme.typography.fontWeightRegular,\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n    const classes1 = useStyles1();\r\n    return (\r\n        <>\r\n            <div className=\"loader-spinner\" style={{ visibility: (state.loading) ? \"visible\" : \"hidden\" }}>\r\n                <div className=\"spinner-grow text-success mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-danger mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-warning mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n            <div style={{ visibility: (state.loading) ? \"hidden\" : \"visible\" }}>\r\n                <div className={classes.root}>\r\n                    <AppBar position=\"static\" style={{ background: \"#3f50b5\" }}>\r\n                        <Toolbar>\r\n                            <IconButton\r\n                                edge=\"start\"\r\n                                className={classes.menuButton}\r\n                                color=\"inherit\"\r\n                                aria-label=\"open drawer\">\r\n                                <RefreshIcon onClick={() => { settable((pre) => !pre); onsearchval(\"\") }} />\r\n                            </IconButton>\r\n                            <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                                LINKSBLOG\r\n                        </Typography>\r\n                            <div className={classes.search}>\r\n                                <div className={classes.searchIcon}>\r\n                                    <SearchIcon />\r\n                                </div>\r\n                                <InputBase\r\n                                    value={searchval}\r\n                                    onChange={onSearch}\r\n                                    placeholder=\"Search…\"\r\n                                    classes={{\r\n                                        root: classes.inputRoot,\r\n                                        input: classes.inputInput,\r\n                                    }}\r\n                                    inputProps={{ 'aria-label': 'search' }}\r\n                                />\r\n                            </div>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <div className={classes1.root}>\r\n                        <Accordion>\r\n                            <AccordionSummary style={{ background: \"#d7dff7\", border: \"none !important\" }}\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls=\"panel1a-content\"\r\n                                id=\"panel1a-header\">\r\n                                <Typography className={classes.heading} color=\"primary\" style={{ fontWeight: \"600\" }}>Note <DoubleArrowIcon color=\"primary\" style={{ fontSize: \"1rem\" }} /></Typography>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails style={{ background: \"#d7dff7\", border: \"none !important\" }}>\r\n                                <Typography>\r\n                                    please refresh the page for new updates and\r\n                                    search the attendance with subject name\r\n                                </Typography>\r\n                            </AccordionDetails>\r\n                        </Accordion>\r\n                    </div>\r\n                    <div className=\"loader-spinner\" style={{ visibility: (state1.loading || state2.loading) ? \"visible\" : \"hidden\" }}>\r\n                        <div className=\"spinner-grow text-success mr-1\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                        <div className=\"spinner-grow text-danger mr-1\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                        <div className=\"spinner-grow text-warning mr-1\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ height: 400, width: '100%',visibility: (state1.loading || state2.loading) ? \"hidden\" : \"visible\" }}>\r\n                        <DataGrid rows={rows} columns={columns} pageSize={5} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StudentClassBlog;\r\n","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\QueryBlog\\QueryBlog.jsx",["287","288","289","290","291","292","293","294","295","296","297","298"],"import React, { useEffect, useState } from 'react'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { DataGrid, getColDef } from '@material-ui/data-grid';\r\nimport { BaseUrl } from '../App.jsx';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport BlogCards from './BlogCards';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport './QueryBlog.scss'\r\nimport './BlogCards.css';\r\n\r\nconst QueryBlog = (props) => {\r\n    let state = useSelector(state => {\r\n        if (props.type === \"student\") {\r\n            return state.signin;\r\n        }\r\n        if (props.type === \"teacher\") {\r\n            return state.teachersignin;\r\n        }\r\n    });\r\n    console.log(props);\r\n    console.log(\"hiii\")\r\n    let state1 = useSelector(state => state.QueryBlog);\r\n    let state2 = useSelector(state => state.titleExists);\r\n    let state3 = useSelector(state => state.addQuestion);\r\n    let [currentPage, setCurrentPage] = useState(1);\r\n    let [pageCount, setPageCount] = useState(1);\r\n    let [currentPageData, setCurrentPageData] = useState([]);\r\n    let [records, setRecords] = useState(4);\r\n    let [postvis, setpostvis] = useState(true);\r\n    let [details, setDetails] = useState({ \"title\": \"\", \"description\": \"\" });\r\n    let [titleDisplay, setTitleDisplay] = useState(\"hidden\");\r\n    let [addDisplay, setAddDisplay] = useState(\"hidden\");\r\n    let [onAdd, setOnAdd] = useState(false);\r\n    let [onRefresh, setOnRefresh] = useState(false);\r\n    const [SearchDisplay,setSearchDisplay]  =useState(\"hidden\");\r\n    const [userFilter, setUserFilter] = useState();\r\n    const [searchVal,setSearchVal] = useState();\r\n    const [onDel,setOnDel] = useState(false);\r\n    const options = [1, 3, 5, 10, 15, 20, 25, 30];\r\n    const ITEM_HEIGHT = 48;\r\n    console.log(currentPageData);\r\n    let dispatch = useDispatch();\r\n    const H = useHistory();\r\n    useEffect(async () => {\r\n        let d = new Date();\r\n        const d_s = d.getFullYear() + \"-\" + (d.getMonth() + 1) + \"-\" + d.getDate() + \" \" + d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds();\r\n        const value = JSON.parse(localStorage.getItem('value'));\r\n        let info = { ...value, 'date': d_s };\r\n        console.log(info)\r\n        if(props.type===\"student\"){\r\n            dispatch({ type: 'request_signin' });\r\n        }\r\n        else if(props.type===\"teacher\"){\r\n            dispatch({ type: 'request_teachersignin' });\r\n        }\r\n        try {\r\n            const data = await axios({\r\n                method: \"post\",\r\n                url: BaseUrl + props.type+\"exists/\",\r\n                headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                data: info,\r\n                responseType: 'json'\r\n            })\r\n            if(props.type===\"student\"){\r\n                dispatch({ type: \"success_signin\", payload: data.data });\r\n            }\r\n            else if(props.type===\"teacher\"){\r\n                dispatch({ type: \"success_teachersignin\", payload: data.data });\r\n            }\r\n            // H.push(`/mainblog`);\r\n            setUserFilter(\"all\");\r\n        }\r\n        catch {\r\n            if(props.type===\"student\"){\r\n                dispatch({ type: \"error_signin\", payload: \"\" });\r\n            }\r\n            else if(props.type===\"teacher\"){\r\n                dispatch({ type: \"error_teachersignin\", payload: \"\" });\r\n            }\r\n            H.push('/error');\r\n        }\r\n    }, []);\r\n    useEffect(async () => {\r\n        console.log(userFilter, records, currentPage);\r\n        if (userFilter === \"all\") {\r\n            setSearchDisplay(\"hidden\");\r\n            dispatch({ 'type': \"request_QueryBlog\" })\r\n            try {\r\n                const data = await axios({\r\n                    method: \"get\",\r\n                    url: BaseUrl + `PostQueryQ/?page=${currentPage}&pagerecords=${records}`,\r\n                    headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                    responseType: 'json'\r\n                })\r\n                dispatch({ 'type': 'success_QueryBlog', payload: data.data });\r\n                setPageCount(data.data.count);\r\n                setCurrentPageData(data.data.results);\r\n            }\r\n            catch {\r\n                dispatch({ 'type': 'error_QueryBlog', payload: \"\" });\r\n                // H.push('\\error');\r\n                setCurrentPage(1);\r\n            }\r\n        }\r\n        else if (userFilter === \"myposts\") {\r\n            setSearchDisplay(\"hidden\");\r\n            dispatch({ 'type': \"request_QueryBlog\" })\r\n            // setCurrentPage(1);\r\n            // console.log(BaseUrl + `GetQueryQ/${JSON.parse(localStorage.getItem('value')).rollno}/?page=${currentPage}&pagerecords=${records}/`);\r\n            try {\r\n                const data = await axios({\r\n                    method: \"get\",\r\n                    url: BaseUrl + `GetQueryQ/${JSON.parse(localStorage.getItem('value')).rollno}/?page=${currentPage}&pagerecords=${records}`,\r\n                    headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                    responseType: 'json'\r\n                })\r\n                dispatch({ 'type': 'success_QueryBlog', payload: data.data });\r\n                setPageCount(data.data.count);\r\n                setCurrentPageData(data.data.results);\r\n            }\r\n            catch {\r\n                dispatch({ 'type': 'error_QueryBlog', payload: \"\" });\r\n                // H.push('\\error');\r\n                setCurrentPage(1);\r\n            }\r\n        }\r\n        else if(userFilter===\"onsearch\"){\r\n            dispatch({'type':\"request_QueryBlog\"});\r\n            try {\r\n                const data = await axios({\r\n                    method: \"get\",\r\n                    url: BaseUrl + `PostQueryQ/?search=${searchVal}&page=${currentPage}&pagerecords=${records}`,\r\n                    headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                    responseType: 'json'\r\n                })\r\n                dispatch({ 'type': 'success_QueryBlog', payload: data.data });\r\n                setPageCount(data.data.count);\r\n                setCurrentPageData(data.data.results);\r\n                setSearchDisplay(\"visible\");\r\n            }\r\n            catch {\r\n                dispatch({ 'type': 'error_QueryBlog', payload: \"\" });\r\n                // H.push('\\error');\r\n                setCurrentPage(1);\r\n            }\r\n        }\r\n    }, [currentPage, onAdd, onRefresh, records, userFilter,searchVal,onDel]);\r\n    const onPageChange = (event, page) => {\r\n        setCurrentPage(page);\r\n    }\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n            flexGrow: 1,\r\n            display: 'none',\r\n            [theme.breakpoints.up('sm')]: {\r\n                display: 'block',\r\n            },\r\n        },\r\n        search: {\r\n            position: 'relative',\r\n            borderRadius: theme.shape.borderRadius,\r\n            backgroundColor: fade(theme.palette.common.white, 0.15),\r\n            '&:hover': {\r\n                backgroundColor: fade(theme.palette.common.white, 0.25),\r\n            },\r\n            marginLeft: 0,\r\n            width: '100%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                marginLeft: theme.spacing(1),\r\n                width: 'auto',\r\n            },\r\n        },\r\n        searchIcon: {\r\n            padding: theme.spacing(0, 2),\r\n            height: '100%',\r\n            position: 'absolute',\r\n            pointerEvents: 'none',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n        inputRoot: {\r\n            color: 'inherit',\r\n        },\r\n        inputInput: {\r\n            padding: theme.spacing(1, 1, 1, 0),\r\n            // vertical padding + font size from searchIcon\r\n            paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n            transition: theme.transitions.create('width'),\r\n            width: '100%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: '12ch',\r\n                '&:focus': {\r\n                    width: '20ch',\r\n                },\r\n            },\r\n        },\r\n    }));\r\n    // useEffect(async ()=>{\r\n    //     if(userFilter===\"myposts\"){\r\n    //         dispatch({ 'type': \"request_QueryBlog\" })\r\n    //         setCurrentPage(1);\r\n    //         try {\r\n    //             const data = await axios({\r\n    //                 method: \"get\",\r\n    //                 url: BaseUrl + `GetQueryQ/${JSON.parse(localStorage.getItem('value')).rollno}/?page=${currentPage}&pagerecords=${records}/`,\r\n    //                 headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n    //                 responseType: 'json'\r\n    //             })\r\n    //             dispatch({ 'type': 'success_QueryBlog', payload: data.data });\r\n    //             setPageCount(data.data.count);\r\n    //             setCurrentPageData(data.data.results);\r\n    //         }\r\n    //         catch {\r\n    //             dispatch({ 'type': 'error_QueryBlog', payload: \"\" });\r\n    //             // H.push('\\error');\r\n    //         }\r\n    //     }\r\n    // },[currentPage, onAdd, onRefresh,records ,userFilter]);\r\n    const userPostedQuestions = () => {\r\n        setUserFilter(\"myposts\");\r\n    }\r\n    const addoption = () => {\r\n        setpostvis(false);\r\n    }\r\n    const AddQuestion = async () => {\r\n        console.log(\"hii\");\r\n        const info = { \"type\": props.type, \"posted_by\": JSON.parse(localStorage.getItem('value')).rollno, ...details };\r\n        console.log(info);\r\n        dispatch({ \"type\": \"request_addQuestion\" });\r\n        try {\r\n            const data = await axios({\r\n                method: \"post\",\r\n                url: BaseUrl + \"PostQueryQ/\",\r\n                headers: { \"Authorization\": \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                responseType: \"json\",\r\n                data: info\r\n            });\r\n            dispatch({ \"type\": \"success_addQuestion\", payload: data.data });\r\n            setAddDisplay(\"hidden\");\r\n            setOnAdd((pre) => !pre);\r\n            setpostvis(true);\r\n        }\r\n        catch {\r\n            setAddDisplay(\"visible\");\r\n        }\r\n        console.log(\"clicked\")\r\n    }\r\n    const TitleExists = async (e) => {\r\n        console.log(e.target.value);\r\n        setDetails((pre) => ({ ...pre, \"title\": e.target.value }));\r\n        console.log(BaseUrl + `PostQueryQ/${e.target.value}/`);\r\n        dispatch({ 'type': \"request_titleExists\" });\r\n        try {\r\n            const data = await axios({\r\n                method: \"get\",\r\n                url: BaseUrl + `PostQueryQ/${e.target.value}/`,\r\n                headers: { \"Authorization\": \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                responseType: \"json\"\r\n            })\r\n            console.log(data);\r\n            dispatch({ 'type': \"success_titleExists\", payload: data.data });\r\n            setTitleDisplay(\"visible\");\r\n        }\r\n        catch {\r\n            dispatch({ 'type': \"error_titleExists\", payload: \"\" });\r\n            setTitleDisplay(\"hidden\");\r\n        }\r\n    }\r\n    const onSearch = (val) => {\r\n        setSearchVal(val);\r\n        setUserFilter(\"onsearch\");\r\n    }\r\n    const onDeletePost = async (val) => {\r\n        dispatch({ 'type':\"request_QueryBlog\"});\r\n        try{\r\n            const data = await axios({\r\n                method:\"delete\",\r\n                url:BaseUrl+`PostQueryQ/${val}/`,\r\n                headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                responseType:\"json\",\r\n            });\r\n            dispatch({ 'type':\"success_QueryBlog\",payload: data.data });\r\n            setOnDel((pre)=>!pre);\r\n        }\r\n        catch{\r\n            dispatch({ 'type':\"error_QueryBlog\",payload: \"\" });\r\n            H.push('/error');\r\n        }\r\n    }\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = (records) => {\r\n        setRecords(records);\r\n        setAnchorEl(null);\r\n    };\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            {/* <div className=\"row PostingBlog fixed-top vh-100\" onClick={()=>setpostvis(false)} style={{visibility:(postvis)?\"visible\":\"hidden\"}}> */}\r\n\r\n            <Alert className=\"fixed-top\"\r\n                style={{ visibility: titleDisplay }}\r\n                severity=\"error\">Cannot be added some error as been occured</Alert>\r\n            <Alert className=\"fixed-top\"\r\n                style={{ visibility: titleDisplay }}\r\n                severity=\"error\">Title already exists</Alert>\r\n            <div\r\n                className=\"mx-auto boxx QueryPostEditor  px-5 pt-5 shadow fixed-bottom\"\r\n                style={{ background: \"#d3e0f5\", borderRadius: \"2rem\", bottom: \"50%\", visibility: (postvis) ? \"hidden\" : \"visible\" }}>\r\n                <TextField id=\"standard-basic\"\r\n                    onChange={TitleExists}\r\n                    label=\"TITLE\" /><br />\r\n                <br />\r\n                <TextField\r\n                    // value={values.link}\r\n                    onChange={(e) => setDetails((pre) => ({ ...pre, description: e.target.value }))}\r\n                    id=\"standard-multiline-static\"\r\n                    label=\"LINK\"\r\n                    multiline\r\n                    rows={3}\r\n                // defaultValue=\"\"\r\n                />  <br /> <br />\r\n                <Button id=\"circleicon\"\r\n\r\n                    onClick={AddQuestion}\r\n                ><AddIcon id=\"addcircle\" /></Button>\r\n            </div>\r\n            {/* </div> */}\r\n            <div className=\"loader-spinner\" style={{ visibility: (state.loading || state2.loading) ? \"visible\" : \"hidden\" }}>\r\n                <div className=\"spinner-grow text-success mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-danger mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-warning mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"container-fluid p-0\" style={{ visibility: (state.loading || state3.loading) ? \"hidden\" : \"visible\" }}>\r\n                <div className={classes.root}>\r\n                    <AppBar position=\"static\" style={{ background: \"#3f50b5\" }}>\r\n                        <Toolbar>\r\n                            <IconButton\r\n                                edge=\"start\"\r\n                                className={classes.menuButton}\r\n                                color=\"inherit\"\r\n                                aria-label=\"open drawer\">\r\n                                <RefreshIcon onClick={() => { setUserFilter(\"all\"); }} />\r\n                            </IconButton>\r\n                            <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                                QUERYBLOG\r\n                            </Typography>\r\n                            <div className={classes.search}>\r\n                                <div className={classes.searchIcon}>\r\n                                    <SearchIcon />\r\n                                </div>\r\n                                <InputBase\r\n                                    onChange={(e)=>onSearch(e.target.value)}\r\n                                    placeholder=\"Search…\"\r\n                                    classes={{\r\n                                        root: classes.inputRoot,\r\n                                        input: classes.inputInput,\r\n                                    }}\r\n                                    inputProps={{ 'aria-label': 'search' }}\r\n                                />\r\n                            </div>\r\n                            {/* <div className=\"flex flex-wrap justify-align-content-between ml-5\"> */}\r\n                            {/* <IconButton\r\n                                style={{ marginLeft: \"0.5rem\" }}\r\n                                edge=\"start\"\r\n                                className={classes.menuButton}\r\n                                color=\"inherit\"\r\n                                aria-label=\"open drawer\">\r\n                                <FilterListIcon />\r\n                            </IconButton> */}\r\n                            <IconButton\r\n                                style={{ marginLeft: \"0.5rem\" }}\r\n                                edge=\"start\"\r\n                                className={classes.menuButton}\r\n                                color=\"inherit\"\r\n                                onClick={userPostedQuestions}\r\n                                aria-label=\"open drawer\">\r\n                                <AccountCircleIcon />\r\n                            </IconButton>\r\n                            {/* <div className=\"mr-4\"> */}\r\n\r\n                            <IconButton\r\n                                edge=\"start\"\r\n                                className={classes.menuButton}\r\n                                color=\"inherit\"\r\n                                // style={{ marginLeft: \"0.5rem\" }}\r\n                                aria-label=\"more\"\r\n                                aria-controls=\"long-menu\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleClick}\r\n                            >\r\n                                <MoreVertIcon className=\"text-white\" />\r\n                            </IconButton>\r\n                            <Menu\r\n                                id=\"long-menu\"\r\n                                anchorEl={anchorEl}\r\n                                keepMounted\r\n                                open={open}\r\n                                onClose={handleClose}\r\n                                PaperProps={{\r\n                                    style: {\r\n                                        maxHeight: ITEM_HEIGHT * 4.5,\r\n                                        width: 'max-content',\r\n                                    },\r\n                                }}\r\n                            >\r\n                                {options.map((option) => (\r\n                                    <MenuItem key={option} selected={option === 'Pyxis'} onClick={() => handleClose(option)}>\r\n                                        {option}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Menu>\r\n                            {/* </div> */}\r\n                            <IconButton\r\n                                onClick={addoption}\r\n                                edge=\"start\"\r\n                                className={classes.menuButton}\r\n                                color=\"inherit\"\r\n                                aria-label=\"open drawer\">\r\n                                <AddCircleOutlineIcon />\r\n                            </IconButton>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                </div>\r\n                {/* <h1>in QueryBlog</h1> */}\r\n                <div >\r\n                    <Accordion style={{background:\"#3f50b5\",borderRadius:\"none\"}}>\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1a-content\"\r\n                            id=\"panel1a-header\"\r\n                        >\r\n                            <Typography className=\"text-white\">Note ⬇️</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails className=\"m-0 text-white text-justify text-center\">\r\n                            <Typography>\r\n                                click on user icon for your posts and filter the posts with title,\r\n                                type and username who posted it click on the add icon for adding more post.\r\n                                If you switch to your posts to go back please click on refresh icon for all posts\r\n                            </Typography>\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                </div>\r\n                <Alert \r\n                style={{ visibility: SearchDisplay,display:(SearchDisplay===\"hidden\")?\"none\":\"\" }}\r\n                className=\"\"\r\n                severity=\"success\">{pageCount} results founded</Alert>\r\n                <div className=\"loader-spinner\" style={{ visibility: (state1.loading) ? \"visible\" : \"hidden\" }}>\r\n                    <div className=\"spinner-grow text-success mr-1\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                    <div className=\"spinner-grow text-danger mr-1\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                    <div className=\"spinner-grow text-warning mr-1\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"card-columns my-5  mx-5\" onClick={() => setpostvis(true)} style={{ visibility: (state1.loading) ? \"hidden\" : \"visible\" }}>\r\n                    {currentPageData.map((v) => (<BlogCards posted_byy={v.posted_by} onDeletePost={onDeletePost} user_type={props.type} posted_on={v.posted_on} type={v.type} title={v.title} description={v.description} />))}\r\n                </div>\r\n                <div className=\"fixed-bottom BottomPagination\">\r\n                    <Pagination style={{ justifyContent: 'center !important' }} onChange={(event, page) => onPageChange(event, page)} count={Math.ceil(pageCount / records)} variant=\"outlined\" color=\"primary\" />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QueryBlog;\r\n","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Dashboard\\DashboardEvent\\DashboardEvent.jsx",["299","300","301","302","303","304","305","306","307","308"],"import React, { useState, useEffect } from 'react';\r\nimport moment from \"moment\";\r\nimport './DashboardEvent.scss';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport FastForwardIcon from '@material-ui/icons/FastForward';\r\nimport FastRewindIcon from '@material-ui/icons/FastRewind';\r\nimport { Button, makeStyles } from '@material-ui/core';\r\nimport DashboardAddEventArea from './DastboardAddEventArea/DastboardAddEventArea';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport axios from 'axios';\r\nimport { BaseUrl } from '../../App.jsx';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nconst useStyles = makeStyles({\r\n\r\n})\r\n\r\nfunction DashboardEvent(props) {\r\n    const useStyles2 = makeStyles((theme) => ({\r\n        root: {\r\n            width: '100%',\r\n        },\r\n        heading: {\r\n            fontSize: theme.typography.pxToRem(15),\r\n            fontWeight: theme.typography.fontWeightRegular,\r\n        },\r\n    }));\r\n    const classes2 = useStyles2();\r\n    const [visAlert, setVisAlert] = useState(false);\r\n    const H = useHistory();\r\n    const [onCLickDay, setOnClickDay] = useState(\"\");\r\n    const [showAddEvent, setshowAddEvent] = useState(false);\r\n    const [onAddEvent, setOnAddEvent] = useState(false);\r\n    const [calander, setcalander] = useState([]);\r\n    const [value, setValue] = useState(moment());\r\n    const startDay = value.clone().startOf(\"month\").startOf('week');\r\n    const endDay = value.clone().endOf(\"month\").endOf('week');\r\n    let [eventDays, setEventDays] = useState({})\r\n    let [msg, setmsg] = useState({ \"EventName\": \"\", \"EventDescription\": \"\" })\r\n    /* const state = useSelector(state => state.DashboardEvent); */\r\n    const state1 = useSelector(state => {\r\n        if (props.type === \"student\") {\r\n            return state.signin;\r\n        }\r\n        if (props.type === \"teacher\") {\r\n            return state.teachersignin;\r\n        }\r\n    });\r\n    // const state1 = useSelector(state => state.teachersignin);\r\n    const dispatch = useDispatch();\r\n    useEffect(async () => {\r\n        let d = new Date();\r\n        const d_s = d.getFullYear() + \"-\" + (d.getMonth() + 1) + \"-\" + d.getDate() + \" \" + d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds();\r\n        // e.preventDefault();\r\n        const value = JSON.parse(localStorage.getItem('value'));\r\n        let info = { ...value, 'date': d_s };\r\n        dispatch({ type: 'request_signin' });\r\n        try {\r\n            const data = await axios({\r\n                method: \"post\",\r\n                url: BaseUrl + props.type + \"exists/\",\r\n                headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                data: info,\r\n                responseType: 'json'\r\n            })\r\n            dispatch({ type: \"success_signin\", payload: data.data });\r\n            // H.push(`/mainblog`);\r\n        }\r\n        catch {\r\n            dispatch({ type: \"error_signin\", payload: \"error\" })\r\n            // H.push('/error');\r\n        }\r\n    }, []);\r\n    useEffect(async () => {\r\n        dispatch({ 'type': \"request_DashboardEvent\" });\r\n        try {\r\n            const data = await axios({\r\n                method: 'get',\r\n                url: BaseUrl + 'EventsBlog/',\r\n                headers: { \"Authorization\": \"token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                responseType: 'json',\r\n            });\r\n            dispatch({ 'type': \"success_DashboardEvent\", payload: data.data });\r\n            let values = {}\r\n            for (let i of data.data) {\r\n                values[i.Event_on] = { ...i };\r\n            }\r\n            // console.log(values[\"kk\"]);\r\n            console.log(values[\"2021-01-28\"]);\r\n            setEventDays(values);\r\n        }\r\n        catch {\r\n            dispatch({ 'type': \"error_DashboardEvent\", payload: \"\" });\r\n            H.push('/error');\r\n        }\r\n    }, [onAddEvent]);\r\n    useEffect(() => {\r\n        const a = [];\r\n        const day = startDay.clone().subtract(1, \"day\");\r\n        while (day.isBefore(endDay, \"day\")) {\r\n            a.push(\r\n                Array(7).fill(0).map(() =>\r\n                    day.add(1, \"day\").clone()\r\n                )\r\n            )\r\n        }\r\n        setcalander(a);\r\n    }, [value]);\r\n\r\n    const closeAddEvent = () => setshowAddEvent(false);\r\n\r\n    const isToday = (day) => {\r\n        return day.isSame(new Date(), \"day\");\r\n    }\r\n\r\n    const afterDay = (day) => {\r\n        return day.isSameOrAfter(new Date(), \"day\");\r\n    }\r\n\r\n    const beforeToday = (day) => {\r\n        return day.isBefore(new Date(), \"day\");\r\n    }\r\n\r\n    const isSelected = (day) => {\r\n        return value.isSame(day, \"day\");\r\n    }\r\n\r\n    const afterMonth = (day) => {\r\n        return value.isBefore(day, \"month\");\r\n    }\r\n    const beforeMonth = (day) => {\r\n        return value.isAfter(day, \"month\");\r\n    }\r\n\r\n    const dayStyles = (day) => {\r\n        if (isSelected(day)) {\r\n            return \"selected\"\r\n        }\r\n        if (afterMonth(day) || beforeMonth(day)) {\r\n            return \"beforeMonth\"\r\n        }\r\n        if (isToday(day)) {\r\n            return \"today\"\r\n        }\r\n    }\r\n    const useStyles1 = makeStyles((theme) => ({\r\n        root: {\r\n            width: '100%',\r\n            '& > * + *': {\r\n                marginTop: theme.spacing(2),\r\n            },\r\n        },\r\n    }));\r\n    const onAddEventFunc = async (day, title, event) => {\r\n        try {\r\n            const info = { \"Event_on\": day, \"EventName\": title, \"EventDescription\": event };\r\n            const data = await axios({\r\n                method: \"post\",\r\n                url: BaseUrl + \"EventsBlog/\",\r\n                headers: { \"Authorization\": \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                data: info,\r\n                responseType: \"json\"\r\n            });\r\n            console.log(data.data);\r\n            setOnAddEvent((pre) => !pre);\r\n        }\r\n        catch {\r\n            H.push('/error');\r\n        }\r\n        console.log(day);\r\n    }\r\n    const currentMonthName = () => value.format(\"MMMM\");\r\n    const currentYearName = () => value.format(\"YYYY\");\r\n    const prevYear = () => value.clone().subtract(1, \"year\");\r\n    const prevMonth = () => value.clone().subtract(1, \"month\");\r\n    const nextMonth = () => value.clone().add(1, \"month\");\r\n    const nextYear = () => value.clone().add(1, \"year\");\r\n    const headerContent = `${currentMonthName()} ${currentYearName()}`;\r\n\r\n    const isEvent = (day) => {\r\n        let date = String(day._d.getDate());\r\n        let dayy = Number(day._d.getMonth()) + 1;\r\n        if (date.length < 2) {\r\n            date = \"0\" + date;\r\n        }\r\n        if (String(dayy).length < 2) {\r\n            dayy = \"0\" + dayy;\r\n        }\r\n        const str = day._d.getFullYear() + \"-\" + dayy + \"-\" + date;\r\n        return str;\r\n    }\r\n    const classes1 = useStyles1();\r\n    return (\r\n        <React.Fragment style={{ width: \"100%\" }}>\r\n            <div className=\"loader-spinner\" style={{ visibility: (state1.loading) ? \"visible\" : \"hidden\" }}>\r\n                <div className=\"spinner-grow text-success mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-danger mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow text-warning mr-1\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n            <div style={{ visibility: (state1.loading) ? \"hidden\" : \"visible\" }}>\r\n                <div className={classes2.root}>\r\n                    <Accordion>\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel2a-content\"\r\n                            id=\"panel2a-header\"\r\n                        >\r\n                            <Typography  className={classes2.heading}>Note ⬇️</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                            <Typography>\r\n                                please click on the highlighted button for event name \r\n                                if you are a teacher then click on upcoming days button for \r\n                                adding events\r\n                            </Typography>\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                </div>\r\n                <div style={{ position: \"sticky\", top: 0 }}>\r\n                    <Alert severity=\"info\" style={{ visibility: (visAlert) ? \"visible\" : \"hidden\" }}>\r\n                        <AlertTitle style={{ textTransform: \"uppercase\" }}>{msg.EventName}</AlertTitle>\r\n                        {msg.EventDescription} — <strong>check it out!</strong>\r\n                    </Alert>\r\n                </div>\r\n                {showAddEvent ? <div className=\"dashboardEventBackDrop\" onClick={closeAddEvent}></div> : null}\r\n                <h1 className=\"dashboardEventHeading\">Events!</h1>\r\n                <div className=\"dashboardEvent m-auto\">\r\n                    <div className=\"dashboardEventHeader\">\r\n                        <div className=\"mt-auto mb-auto\">\r\n                            <Button onClick={() => { setValue(prevYear()) }}\r\n                            ><FastRewindIcon /></Button>\r\n                        </div>\r\n                        <div className=\"mt-auto mb-auto\">\r\n                            <Button onClick={() => { setValue(prevMonth()) }}\r\n                            ><ArrowBackIosIcon /></Button>\r\n                        </div>\r\n                        <div className=\"ml-auto mt-3 mb-auto p-0\" style={{ display: \"inline-block\", textAlign: \"center\" }}>\r\n                            <p>\r\n                                {headerContent}\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"ml-auto mt-auto mb-auto\">\r\n                            <Button onClick={() => { setValue(nextMonth()) }}\r\n                            ><ArrowForwardIosIcon /></Button>\r\n                        </div>\r\n                        <div className=\"mt-auto mb-auto\">\r\n                            <Button onClick={() => { setValue(nextYear()) }}\r\n                            ><FastForwardIcon /></Button>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"dayNames\">\r\n                            {[\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"].map((dayName) => (\r\n                                <div className=\"eachDayNmae\">{dayName}</div>\r\n                            ))}\r\n                        </div>\r\n                        {\r\n                            calander.map((week) => (\r\n                                <div>\r\n                                    {\r\n                                        week.map((day) => (\r\n                                            <div className=\"day\" style={{ background: (eventDays[isEvent(day)] != undefined) ? \"#00b01d\" : \"#94eb6c\" }}\r\n                                                onClick={() => {\r\n                                                    setmsg({ ...eventDays[isEvent(day)] });\r\n                                                    console.log(day);\r\n                                                    if (eventDays[isEvent(day)] != undefined) {\r\n                                                        setValue(day);\r\n                                                        setVisAlert(true);\r\n                                                    }\r\n                                                    else if (afterDay(day) && props.type === \"teacher\") {\r\n                                                        setVisAlert(false);\r\n                                                        setOnClickDay(isEvent(day));\r\n                                                        // setValue({\"EventName\":\"\",\"EventDescription\":\"\"});\r\n                                                        setshowAddEvent(true);\r\n                                                    }\r\n                                                    else {\r\n                                                        setVisAlert(false);\r\n                                                        // setValue({\"EventName\":\"\",\"EventDescription\":\"\"});   \r\n                                                    }\r\n                                                }}\r\n                                            >\r\n                                                <div className={dayStyles(day)}>\r\n                                                    {\r\n                                                        day.format(\"D\").toString()\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        ))\r\n                                    }\r\n                                </div>)\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <div className=\"dashboardAddEventAreaForm\">\r\n                        <DashboardAddEventArea\r\n                            type={props.type}\r\n                            day={onCLickDay}\r\n                            showAddEvent={showAddEvent}\r\n                            closeAddEvent={closeAddEvent}\r\n                            addEvent={onAddEventFunc} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DashboardEvent;\r\n","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Dashboard\\DashboardEvent\\DastboardAddEventArea\\DastboardAddEventArea.jsx",[],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\QueryBlog\\BlogCards.jsx",["309","310"],"import React from 'react'\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {useHistory} from 'react-router-dom';\r\nconst BlogCards = (props) => {\r\n    // console.log(JSON.parse(localStorage.getItem('value')).rollno);\r\n    // console.log(props);\r\n    const H=useHistory();\r\n    return (\r\n        <div className=\"card shadow QueryQuestionsHover text-white text-center mt-4 p-4\" style={{ background: (props.type==\"teacher\") ? \"#db3d6a\" : \"#3ddbd9\", borderRadius: \"50px\" }}>\r\n            {((props.posted_byy===JSON.parse(localStorage.getItem('value')).rollno) || (props.user_type===\"teacher\"))?\r\n            (<div>\r\n            <IconButton aria-label=\"delete\"\r\n                    typ={props.posted_byy}\r\n                    onClick={()=>props.onDeletePost(props.title)}\r\n                    style={{display:\"relative\",\"marginLeft\":\"85%\",marginTop:\"-1.6rem\"}}\r\n                    >\r\n                    <DeleteIcon fontSize=\"large\" className=\"text-white\" />\r\n                </IconButton></div>):(<div>\r\n                <IconButton aria-label=\"delete\"\r\n                    typ={props.posted_byy}\r\n                    onClick={()=>props.onDeletePost(props.title)}\r\n                    style={{visibility:\"hidden\",\"marginLeft\":\"85%\",marginTop:\"-1.6rem\"}}\r\n                    >\r\n                    <DeleteIcon fontSize=\"large\" className=\"text-white\" />\r\n                </IconButton></div>)\r\n            }\r\n            <blockquote class=\"blockquote mb-0\" onClick={()=>H.push(`/QueryAnswerBlog/${props.title}/${props.user_type}`)} >\r\n                <h3 style={{ textTransform: \"uppercase\" }}>\r\n                {props.title}\r\n                </h3>\r\n                <p>{props.description}</p>\r\n                <footer class=\"blockquote-footer text-white\">\r\n                    <small>\r\n                        posted by {props.posted_byy} <cite title=\"Source Title\">posted on {props.posted_on}</cite>\r\n                    </small>\r\n                </footer>\r\n            </blockquote>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogCards\r\n","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\NotificationBlog\\NotificationBlog.jsx",["311","312","313","314","315","316","317","318"],"import React, { useState, useEffect } from 'react'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { BaseUrl } from '../App.jsx';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport axios from 'axios';\r\n\r\nconst NotificationBlog = (props) => {\r\n    let state = useSelector(state => {\r\n        if (props.type === \"student\") {\r\n            return state.signin;\r\n        }\r\n        else {\r\n            return state.teachersignin;\r\n        }\r\n    });\r\n    let dispatch = useDispatch();\r\n    const [noOfMessages, setNoOfMessages] = useState(0);\r\n    const H = useHistory();\r\n    useEffect(async () => {\r\n        let d = new Date();\r\n        const d_s = d.getFullYear() + \"-\" + (d.getMonth() + 1) + \"-\" + d.getDate() + \" \" + d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds();\r\n        // e.preventDefault();\r\n        const value = JSON.parse(localStorage.getItem('value'));\r\n        let info = { ...value, 'date': d_s };\r\n        if (props.type === \"student\") {\r\n            dispatch({ type: 'request_signin' });\r\n        }\r\n        else {\r\n            dispatch({ type: 'request_teachersignin' });\r\n        }\r\n        try {\r\n            const data = await axios({\r\n                method: \"post\",\r\n                url: BaseUrl + `${props.type}exists/`,\r\n                headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                data: info,\r\n                responseType: 'json'\r\n            });\r\n            if (props.type === \"student\") {\r\n                dispatch({ type: \"success_signin\", payload: data.data });\r\n            }\r\n            else {\r\n                dispatch({ type: \"success_teachersignin\", payload: data.data });\r\n            }\r\n            // H.push(`/mainblog`);\r\n        }\r\n        catch {\r\n            if (props.type === \"student\") {\r\n                dispatch({ type: \"error_signin\", payload: \"\" });\r\n            }\r\n            else {\r\n                dispatch({ type: \"error_teachersignin\", payload: \"\" });\r\n            }\r\n            H.push('/error');\r\n        }\r\n    }, []);\r\n    useEffect(async () => {\r\n        dispatch({ 'type': 'request_showNotifications' });\r\n        console.log(BaseUrl + `NotificationBlogG/?search=${0}`);\r\n        try {\r\n            const data = await axios({\r\n                method: 'post',\r\n                url: BaseUrl + `getNotifications/`,\r\n                headers: { 'Authorization': 'Token de5fca1fb449f586b63136af9a12ab5afc96602e' },\r\n                data: { \"username\": JSON.parse(localStorage.getItem('value')).rollno, \"seen\": 1 },\r\n                responseType: 'json'\r\n            });\r\n            dispatch({ 'type': 'success_showNotifications', payload: data.data });\r\n            setRows(data.data);\r\n            setNoOfMessages(data.data.length);\r\n        }\r\n        catch {\r\n            dispatch({ 'type': 'error_showNotifications', payload: \"\" });\r\n            H.push('/error')\r\n        }\r\n    }, []);\r\n    // useEffect(async () => {\r\n\r\n    // },[]);\r\n\r\n    const columns = [\r\n        { field: 'title', headerName: 'TITLE', width: 160 },\r\n        { field: 'description', headerName: 'DESCRIPTION', width: 250 },\r\n        {\r\n            field: 'visibility_time',\r\n            headerName: 'VISIBILITY_TIME',\r\n            description: 'This link will be disable within this date and time',\r\n            width: 200,\r\n        },\r\n        {\r\n            field: 'posted_on',\r\n            headerName: 'POSTED_ON',\r\n            width: 230\r\n        },\r\n    ];\r\n    const [rows, setRows] = useState([]);\r\n    const addNotification = () => {\r\n        console.log(\"clicked\");\r\n    }\r\n    return (\r\n        <div className=\"container-fluid fixed-top  py-4\" style={{ height:\"100vh\" ,background: \"#c5d2ed\" }}>\r\n            {/* {(props.type===\"teacher\")?(<IconButton onClick={addNotification} className=\"absolute ml-auto primary\" >\r\n                <AddIcon className=\"text-info\" style={{fontSize:\"4rem\"}}/>\r\n            </IconButton>):\"\"} */}\r\n            <div className=\"container mt-3\">\r\n                <Alert severity=\"success\">{(noOfMessages == 0) ? \"You have seen All the messages\" : `unseen messages count ${noOfMessages}`}\r\n                </Alert>\r\n                <div className=\"loader-spinner\" style={{ visibility: (state.loading) ? \"visible\" : \"hidden\" }}>\r\n                    <div className=\"spinner-grow text-success mr-1\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                    <div className=\"spinner-grow text-danger mr-1\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                    <div className=\"spinner-grow text-warning mr-1\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>\r\n                <div style={{ height: '80vh', width: '100%', background: \"#dfe3eb\", visibility: (state.loading) ? \"hidden\" : \"visible\" }}>\r\n                    <DataGrid style={{ border: \"0.1rem solid #00d !important\" }} rows={rows} columns={columns} pageSize={10} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotificationBlog\r\n","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\QueryBlogChat\\QueryBlogChat.jsx",["319","320","321","322","323","324","325","326"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport './QueryBlogChat.scss';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { Button, makeStyles } from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport profile_pic from '../assets/male_avatar.png';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport 'emoji-mart/css/emoji-mart.css';\r\nimport { Picker } from 'emoji-mart';\r\nimport useInterval from 'react-useinterval';\r\nimport { useParams } from 'react-router-dom';\r\nimport { BaseUrl } from '../App.jsx';\r\nimport axios from 'axios';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n    queryBlogChatAddEmoji: {\r\n        zIndex: \"30\",\r\n        borderRadius: \"50%\",\r\n        cursor: \"pointer\",\r\n        '&:hover': {\r\n            color: \"#10cce7\"\r\n        }\r\n    }\r\n});\r\n\r\nfunction QueryBlogChat(props) {\r\n    const { title, type } = useParams();\r\n    let state = useSelector(state => {\r\n        if (type === \"student\") {\r\n            return state.signin;\r\n        }\r\n        if (type === \"teacher\") {\r\n            return state.teachersignin;\r\n        }\r\n    });\r\n    const H = useHistory();\r\n    const [delay, setDelay] = useState(100);\r\n    const classes = useStyles(props);\r\n    const state2 = useSelector(state2 => state2.showQueryBlogMessages);\r\n    const dispatch = useDispatch();\r\n    const [messages, setmessages] = useState([]);\r\n    useEffect(async () => {\r\n        let d = new Date();\r\n        const d_s = d.getFullYear() + \"-\" + (d.getMonth() + 1) + \"-\" + d.getDate() + \" \" + d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds();\r\n        const value = JSON.parse(localStorage.getItem('value'));\r\n        let info = { ...value, 'date': d_s };\r\n        if (type === \"student\") {\r\n            dispatch({ type: 'request_signin' });\r\n        }\r\n        else if (type === \"teacher\") {\r\n            dispatch({ type: 'request_teachersignin' });\r\n        }\r\n        try {\r\n            const data = await axios({\r\n                method: \"post\",\r\n                url: BaseUrl + type + \"exists/\",\r\n                headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                data: info,\r\n                responseType: 'json'\r\n            })\r\n            if (props.type === \"student\") {\r\n                dispatch({ type: \"success_signin\", payload: data.data });\r\n            }\r\n            else if (props.type === \"teacher\") {\r\n                dispatch({ type: \"success_teachersignin\", payload: data.data });\r\n            }\r\n            // H.push(`/mainblog`);\r\n        }\r\n        catch {\r\n            if (props.type === \"student\") {\r\n                dispatch({ type: \"error_signin\", payload: \"\" });\r\n            }\r\n            else if (props.type === \"teacher\") {\r\n                dispatch({ type: \"error_teachersignin\", payload: \"\" });\r\n            }\r\n            H.push('/error');\r\n        }\r\n    }, []);\r\n    const [showEmoji, setshowEmoji] = useState(false);\r\n    const [backDrop, setbackDrop] = useState(false);\r\n    const state1 = useSelector(state => state.sendQueryBlogMessages);\r\n    const [newMessage, setnewMessage] = useState([\r\n        //     {\r\n        //     posted_by: \"me\",\r\n        //     message: \"hello\"\r\n        // }\r\n    ]);\r\n    const [updateMessage, setupdateMessage] = useState(true);\r\n    console.log(messages);\r\n    useEffect(async () => {\r\n        dispatch({ \"type\": \"request_showQueryBlogMessages\" })\r\n        setDelay(null);\r\n        try {\r\n            const data = await axios({\r\n                method: 'get',\r\n                url: BaseUrl + `GetQueryA/${title}/`,\r\n                headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                data: { \"username\": JSON.parse(localStorage.getItem('value')).rollno, seen: 0 },\r\n                responseType: 'json'\r\n            });\r\n            let msg = data.data;\r\n            // console.log(msg);\r\n            msg.reverse();\r\n            dispatch({ \"type\": \"success_showQueryBlogMessages\", payload: msg });\r\n            setmessages(msg);\r\n            // messages\r\n            // console.log((data.data).len);\r\n            setDelay(1000);\r\n        }\r\n        catch {\r\n            dispatch({ \"type\": \"error_showQueryBlogMessages\", payload: \"\" });\r\n            setDelay(null);\r\n        }\r\n    }, [updateMessage]);\r\n    const showQueryBlogMessages = async (e) => {\r\n        setDelay(null);\r\n        setupdateMessage((pre) => !pre);\r\n    }\r\n    useInterval(showQueryBlogMessages,delay);\r\n    const onSubmitMessage = async () => {\r\n        dispatch({ \"type\": \"request_sendQueryBlogMessages\" })\r\n        const info = { \"type\": type, \"title\": title, \"posted_by\": JSON.parse(localStorage.getItem('value')).rollno, \"message\": newMessage.message };\r\n        console.log(info);\r\n        setDelay(null);\r\n        try {\r\n            const data = await axios({\r\n                method: 'post',\r\n                url: BaseUrl + `PostQueryA/`,\r\n                headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                data: info,\r\n                responseType: 'json'\r\n            });\r\n            let msg = [...messages, newMessage.message];\r\n            // console.log(msg);\r\n            msg.reverse();\r\n            setmessages(msg);\r\n            dispatch({ \"type\": \"success_sendQueryBlogMessages\", payload: msg });\r\n            setDelay(1000);\r\n            setnewMessage({\r\n                posted_by: \"\",\r\n                message: \"\"\r\n            });\r\n            // console.log((data.data).len);\r\n        }\r\n        catch {\r\n            dispatch({ \"type\": \"error_sendQueryBlogMessages\", payload: \"\" });\r\n            setDelay(null);\r\n        }\r\n    }\r\n    const handleChange = async (e) => {\r\n        // console.log(newMessage);\r\n        setnewMessage({\r\n            posted_by: \"me\",\r\n            message: e.target.value\r\n        });\r\n        // dispatch({\"type\":\"request_sendQueryBlogMessages\"})\r\n        // const info={\"type\":props.type,\"title\":title,\"posted_by\":JSON.parse(localStorage.getItem('value')).rollno,\"message\":e.target.value};\r\n        // setDelay(null);\r\n        // try{\r\n        //     const data = await axios({\r\n        //         method : 'post',\r\n        //         url:BaseUrl+`PostQueryA/`,\r\n        //         headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n        //         data:info,\r\n        //         responseType : 'json'\r\n        //     });\r\n        //     let msg=[...messages,e.target.value];\r\n        //     // console.log(msg);\r\n        //     msg.reverse();\r\n        //     setmessages(msg);\r\n        //     dispatch({\"type\":\"success_sendQueryBlogMessages\",payload:msg});\r\n        //     setnewMessage({\r\n        //         posted_by: \"me\",\r\n        //         message: e.target.value\r\n        //     });\r\n        //     setDelay(1000);\r\n        //     // console.log((data.data).len);\r\n        // }\r\n        // catch{\r\n        //     dispatch({\"type\":\"error_sendQueryBlogMessages\",payload:\"\"});\r\n        //     setDelay(null);\r\n        // }\r\n    }\r\n    const addEmoji = e => {\r\n        let sym = e.unified.split('-')\r\n        let codesArray = []\r\n        sym.forEach(el => codesArray.push('0x' + el))\r\n        let emoji = String.fromCodePoint(...codesArray)\r\n        setnewMessage({\r\n            posted_by: \"me\",\r\n            message: newMessage.message + emoji,\r\n        });\r\n    }\r\n\r\n    const messagesEndRef = useRef(null);\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    };\r\n    useEffect(scrollToBottom, [messages]);\r\n\r\n    return (\r\n        <div className=\"queryBlogChatScreen p-0\">\r\n            {backDrop ? <div style={{ width: \"100%\", height: \"100%\", position: \"absolute\", zIndex: \"20\", border: \"0\" }} onClick={(e) => {\r\n                setbackDrop(false);\r\n                setshowEmoji(false);\r\n            }}></div> : null}\r\n            <div className=\"queryBlogChatArea container \">\r\n                <div className=\"row align-items-stretch\" style={{ height: \"100%\", borderRadius: \"10px\" }}>\r\n                    <div className=\"col-md-3 p-0 queryBlogChatAreaLeftPane\">\r\n                        <div className=\"loader-spinner\" style={{ visibility: (state1.loading) ? \"visible\" : \"hidden\" }}>\r\n                            <div className=\"spinner-grow text-success mr-1\" role=\"status\">\r\n                                <span className=\"sr-only\">Loading...</span>\r\n                            </div>\r\n                            <div className=\"spinner-grow text-danger mr-1\" role=\"status\">\r\n                                <span className=\"sr-only\">Loading...</span>\r\n                            </div>\r\n                            <div className=\"spinner-grow text-warning mr-1\" role=\"status\">\r\n                                <span className=\"sr-only\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"queryBlogChatBack\" >\r\n                            <Button><ArrowBackIcon></ArrowBackIcon></Button>\r\n                        </div>\r\n                        <div className=\"queryBlogChatTitle\">\r\n                            <img src={profile_pic} style={{ width: \"9rem\", height: \"8rem\" }}></img>\r\n                            <h1>Hello!</h1>\r\n                            <p>{JSON.parse(localStorage.getItem('value')).rollno}</p>\r\n                        </div>\r\n                        <h3 style={{\r\n                            marginLeft: \"20px\"\r\n                        }}>TOPIC:</h3>\r\n                        <h3 style={{\r\n                            border: \"black 0.8px solid\",\r\n                            borderLeft: \"#79d70f 5px solid\",\r\n                            marginTop: \"20px\",\r\n                            padding: \"8px\",\r\n                        }}>{title}</h3>\r\n                        <div style={{\r\n                            position: \"absolute\",\r\n                            bottom: \"0.3rem\",\r\n                            lineHeight: \"0.5px\",\r\n                            textAlign: \"center\",\r\n                            display: \"block\",\r\n                            margin: \"0 2rem\",\r\n                            fontSize: \"0.8rem\"\r\n                        }}>\r\n                            <p>Please Follow the Community GuideLines</p>\r\n                            <p>Visual Meet</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-9 p-0 queryBlogChatAreaRightPane\" style={{ border: \"black 1px solid\" }}>\r\n                        <div className=\"queryBlogChatMessagesArea\">\r\n                            <div className=\"queryBlogChatHeader p-2\">\r\n                                <h1 className=\"queryBlogChatHeaderHeading\">Discussion Forum 🔍</h1>\r\n                            </div>\r\n                            <div className=\"queryBlogChats\">\r\n                                <div ref={messagesEndRef} />\r\n                                {messages.map((value, idx) => (\r\n                                    <div className={((JSON.parse(localStorage.getItem('value')).rollno) === value.posted_by) ? \"me\" : \"student\"}\r\n                                        style={{ background: ((JSON.parse(localStorage.getItem('value')).rollno) === value.posted_by) ? \"80ffdb\" : (value.type === \"student\") ? \"#cffffe\" : \"#fcf876\" }} id={idx}>\r\n                                        <p className=\"queryBlogChatMessageName\">{value.posted_by === (JSON.parse(localStorage.getItem('value')).rollno) ? \"Me\" : value.posted_by}</p>\r\n                                        <p>{value.message}</p>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"queryBlogChatNewMessageArea\">\r\n                            {showEmoji ? (\r\n                                <span style={{\r\n                                    position: \"absolute\",\r\n                                    bottom: \"80px\",\r\n                                    left: \"10px\",\r\n                                    zIndex: \"40\",\r\n                                }}>\r\n                                    <Picker onSelect={(e) => addEmoji(e)} title=\"Visual Meet\" />:\r\n                                </span>\r\n                            ) : null\r\n                            }\r\n                            <InsertEmoticonIcon\r\n                                className={classes.queryBlogChatAddEmoji}\r\n                                style={{\r\n                                    fontSize: \"1.8rem\"\r\n                                }}\r\n                                onClick={() => {\r\n                                    setshowEmoji(!showEmoji);\r\n                                    setbackDrop(!backDrop);\r\n                                }}></InsertEmoticonIcon>\r\n                            <textarea placeholder=\"Enter you Message\" className=\"queryBlogChatNewMessageTeaxtArea mt-2\" value={newMessage.message} onChange={(event) => handleChange(event)} id=\"cin\" style={{ width: \"75%\" }}\r\n                                onKeyPress={\r\n                                    (e) => {\r\n                                        var code = e.keyCode || e.which;\r\n                                        if (code === 13 && !e.shiftKey) {\r\n                                            e.preventDefault();\r\n                                            if (newMessage.message !== \"\") {\r\n                                                onSubmitMessage();\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }></textarea>\r\n                            <Button onClick={() => {\r\n                                onSubmitMessage();\r\n                            }}><SendIcon></SendIcon></Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QueryBlogChat;\r\n","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Dashboard\\Dashboard.jsx",["327","328","329","330","331","332"],"import React,{useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {BaseUrl} from '../App.jsx';\r\nimport DashboardContent from './DashboardContent/DashboardContent';\r\nimport DashboardMenu from './DashboardMenu/DashboardMenu';\r\nimport DashboardHeader from './DashboardHeader';\r\nimport './Dashboard.scss'\r\nimport DashboardProfile from './DashboardProfile/DashboardProfile';\r\nimport DashboardEvent from './DashboardEvent/DashboardEvent';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nfunction Dashboard(props) {\r\n    console.log(props);\r\n    const state = useSelector(state => {\r\n        if (props.type === \"student\") {\r\n            return state.signin;\r\n        }\r\n        if (props.type === \"teacher\") {\r\n            return state.teachersignin;\r\n        }\r\n    });\r\n    const [showSideBar, setshowSideBar] = useState(true);\r\n    const H = useHistory();\r\n    let dispatch = useDispatch();\r\n    const [values,setvalues] = useState({});\r\n    useEffect(async () => {\r\n        let d = new Date();\r\n        const d_s = d.getFullYear() + \"-\" + (d.getMonth() + 1) + \"-\" + d.getDate() + \" \" + d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds();\r\n        const value = JSON.parse(localStorage.getItem('value'));\r\n        let info = { ...value, 'date': d_s };\r\n        // console.log(info)\r\n        setvalues(info);\r\n        if(props.type===\"student\"){\r\n            dispatch({ type: 'request_signin' });\r\n        }\r\n        else if(props.type===\"teacher\"){\r\n            dispatch({ type: 'request_teachersignin' });\r\n        }\r\n        try {\r\n            const data = await axios({\r\n                method: \"post\",\r\n                url: BaseUrl + props.type+\"exists/\",\r\n                headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                data: info,\r\n                responseType: 'json'\r\n            })\r\n            if(props.type===\"student\"){\r\n                dispatch({ type: \"success_signin\", payload: data.data });\r\n            }\r\n            else if(props.type===\"teacher\"){\r\n                dispatch({ type: \"success_teachersignin\", payload: data.data });\r\n            }\r\n            // H.push(`/mainblog`);\r\n        }\r\n        catch {\r\n            if(props.type===\"student\"){\r\n                dispatch({ type: \"error_signin\", payload: \"\" });\r\n            }\r\n            else if(props.type===\"teacher\"){\r\n                dispatch({ type: \"error_teachersignin\", payload: \"\" });\r\n            }\r\n            H.push('/error');\r\n        }\r\n    }, []);\r\n    const diplayDashboardContent = (content) => {\r\n        console.log(content);\r\n        if(true){\r\n            return <DashboardProfile {...values}/>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <DashboardHeader click={()=>setshowSideBar(!showSideBar)}></DashboardHeader>\r\n            <DashboardMenu open={showSideBar} username={JSON.parse(localStorage.getItem('value')).rollno} type={props.type} whatToDisplay={diplayDashboardContent}></DashboardMenu>\r\n            <div className=\"dashboard container\">\r\n                <div className=\"\" style={{\r\n                    width: \"100vw\",\r\n                    zIndex: \"1\"\r\n                    }}>\r\n                    { diplayDashboardContent() }\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Dashboard\\DashboardContent\\DashboardContent.jsx",[],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Dashboard\\DashboardProfile\\DashboardProfile.jsx",[],"C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Dashboard\\DashboardHeader.jsx",["333","334","335","336","337","338"],"import React,{useState,useEffect} from 'react';\r\nimport icon from '../assets/icon.png';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport { Button } from 'react-scroll';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport axios from 'axios';\r\nimport {BaseUrl} from '../App.jsx';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport useInterval from 'react-useinterval';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nfunction ClassLinksHeader(props) {\r\n    const mystyle = {\r\n        fontSize: \"2rem\",\r\n        marginRight: \"2rem\",\r\n        color: \"white\",\r\n        '&:hover': {\r\n            color: \"green\",\r\n        }\r\n    };\r\n    const H = useHistory();\r\n    const [noBadges,setNoBadges] = useState(0);\r\n    const state1 = useSelector(state => state.getNotifications);\r\n    const [delay,setDelay] = useState(1000);\r\n    const [updateNotifications,setUpdateNotifications] = useState(true);\r\n    useEffect(async () => {\r\n        setDelay(null);\r\n        // dispatch({\"type\":\"request_getNotifications\"})\r\n        try{\r\n            const data = await axios({\r\n                method : 'post',\r\n                url:BaseUrl+`getNotifications/`,\r\n                headers: { 'Authorization': \"Token de5fca1fb449f586b63136af9a12ab5afc96602e\" },\r\n                data:{\"username\":JSON.parse(localStorage.getItem('value')).rollno,seen:0},\r\n                responseType : 'json'\r\n            });\r\n            // dispatch({\"type\":\"success_getNotifications\",payload:data.data});\r\n            setNoBadges((data.data).length);\r\n            // console.log((data.data).length);\r\n            setDelay(10000);\r\n        }\r\n        catch{\r\n            // dispatch({\"type\":\"error_getNotifications\",payload:\"\"});\r\n            setDelay(null);\r\n        }\r\n    },[updateNotifications])\r\n    const getNotifications = async () => {\r\n        setDelay(null);\r\n        setUpdateNotifications((pre)=>!pre);\r\n    }\r\n    useInterval(getNotifications,delay);\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar fixed-top navbar-expand-lg navbar-dark bg-dark\">\r\n                <div class=\"container-fluid\">\r\n                    <button onClick={props.click} style={{\r\n                        backgroundColor: \"Transparent\", \r\n                        border: \"none\",\r\n                        cursor:\"pointer\",\r\n                        overflow: \"hidden\",\r\n                        outline: \"none\",\r\n                    }}><FaIcons.FaBars style={\r\n                        mystyle\r\n                    }></FaIcons.FaBars></button>\r\n                    <a className=\"navbar-brand\" href=\"#\">\r\n                        <img src={icon} width=\"40\" height=\"40\" alt=\"\" style={{ borderRadius: '10px' }}></img>\r\n                    </a>\r\n                    <a className=\"navbar-brand  mr-auto\" href=\"#\">VISUAL MEET</a>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav ml-auto mr-3\">\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <IconButton aria-label=\"show 17 new notifications\" className=\"text-white\" >\r\n                    <Badge badgeContent={noBadges} color=\"secondary\"  onClick={()=>H.push('/NotificationBlog')}>\r\n                        <NotificationsIcon />\r\n                    </Badge>\r\n                </IconButton>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClassLinksHeader;\r\n","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Dashboard\\DashboardMenu\\DashboardMenu.jsx",["339","340","341"],"import React, {useState} from 'react';\r\nimport Profile_pic from '../../assets/male_avatar.png';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport ClassLinks from '../../ClassLinks/ClassLinks';\r\nimport './DashboardMenu.scss';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport {CgProfile} from 'react-icons/cg';\r\nimport {BiNotepad,BiLink,BiCalendarEvent} from 'react-icons/bi';\r\nimport {VscCommentDiscussion} from 'react-icons/vsc';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    dashboardMenuButtonGroup:{\r\n        width: \"100%\"\r\n    },\r\n    dashboardMenuButton: {\r\n        height: \"3.2rem\",\r\n        border: \"none\",\r\n        outline: \"none\",\r\n        width: \"inherit\",\r\n        textAlignLast: \"right\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"#7bf159\",\r\n            color: \"white\",\r\n        }\r\n    },\r\n    dashboardMenuButtonSelected: {\r\n        borderLeft: \"5px rgb(26, 238, 26) solid\",\r\n        backgroundColor: \"white\"\r\n    }\r\n});\r\n\r\nfunction DashboardMenu(props) {\r\n    // console.log(props);\r\n    const classes = useStyles(props);\r\n    const [view, setView] = React.useState('list');\r\n    const H = useHistory();\r\n    const handleChange = (event, nextView) => {\r\n        setView(nextView);\r\n    };\r\n\r\n    const [content, setcontent] = useState(\"profile\");\r\n\r\n    const togglingDisplay = () => {\r\n        console.log(content);\r\n        props.whatToDisplay(content);\r\n    }\r\n\r\n    const dashboardMenuStyles = {\r\n        \"dashboardMenu\": true,\r\n        \"dashboardMenuOpen\": props.open===true,\r\n        \"dashboardMenuClose\": props.open===false\r\n    }\r\n\r\n    // const H = useHistory();\r\n    return (\r\n        <div className={`dashboardMenu ${props.open? `dashboardMenuStyles`: ``}`} style={{height:\"100%\", paddingTop: \"4rem\", position: \"\"}}>\r\n            <img src={Profile_pic} alt=\"Profile\" style={{width:\"9rem\", height:\"8rem\"}} className=\"mt-5 mb-3\"></img>\r\n            <p>Hello! {props.username}</p>\r\n            <ToggleButtonGroup orientation=\"vertical\" value={view} exclusive onChange={handleChange} className={classes.dashboardMenuButtonGroup}>\r\n                <ToggleButton value=\"profile\" aria-label=\"profile\" selected ={content===\"profile\"?true:false} onClick={() => {\r\n                    setcontent(\"profile\");\r\n                    togglingDisplay();\r\n                }} className={`${content===\"profile\"?classes.dashboardMenuButtonSelected:\"\"} ${classes.dashboardMenuButton}`}>\r\n                    <h6 className=\"mr-auto my-auto\" style={{color: \"black\"}}> <CgProfile style={{\r\n                        color: \"black\",\r\n                        margin: \"auto 1rem\"\r\n                    }}></CgProfile>  Profile</h6>\r\n                </ToggleButton>\r\n                <ToggleButton style={{\"display\": (props.type===\"student\")?\"visible\":\"none\"}} value=\"attendance\" aria-label=\"attendance\" selected ={content===\"attendance\"?true:false} onClick={() => {\r\n                    setcontent(\"attendance\");\r\n                    H.push('/DashboardAttendence');\r\n                }} className={`${content===\"attendance\"?classes.dashboardMenuButtonSelected:\"\"} ${classes.dashboardMenuButton}`}>\r\n                    <h6 className=\"mr-auto my-auto\" style={{color: \"black\"}}>\r\n                    <BiNotepad style={{\r\n                        color: \"black\",\r\n                        margin: \"auto 1rem\"\r\n                    }}>\r\n                    </BiNotepad>\r\n                    Attendence</h6>\r\n                </ToggleButton>\r\n                <ToggleButton value=\"classLinks\" aria-label=\"classLinks\" selected ={content===\"classLinks\"?true:false} onClick={() => {\r\n                    setcontent(\"classLinks\");\r\n                    togglingDisplay();\r\n                    (props.type===\"student\")?H.push('/StudentClassBlog'):H.push('/ClassBlog');\r\n                }} className={`${content===\"classLinks\"?classes.dashboardMenuButtonSelected:\"\"} ${classes.dashboardMenuButton}`}>\r\n                    <h6 className=\"mr-auto my-auto\" style={{color: \"black\"}}><BiLink style={{\r\n                        color: \"black\",\r\n                        margin: \"auto 1rem\",\r\n                        fontSize: \"1rem\"\r\n                    }}>\r\n                    </BiLink>Class Links</h6>\r\n                </ToggleButton>\r\n                <ToggleButton value=\"queryBlog\" aria-label=\"queryBlog\" selected ={content===\"queryBlog\"?true:false} onClick={() => {\r\n                    setcontent(\"queryBlog\");\r\n                    togglingDisplay();\r\n                    (props.type===\"student\")?H.push('/QueryBlog'):H.push('/teacherQueryBlog');\r\n                }} className={`${content===\"queryBlog\"?classes.dashboardMenuButtonSelected:\"\"} ${classes.dashboardMenuButton}`}>\r\n                    <h6 className=\"mr-auto my-auto\" style={{color: \"black\"}}><VscCommentDiscussion style={{\r\n                        color: \"black\",\r\n                        margin: \"auto 1rem\",\r\n                    }}>\r\n                    </VscCommentDiscussion>Query Blog</h6>\r\n                </ToggleButton>\r\n                <ToggleButton value=\"events\" aria-label=\"events\" selected ={content===\"events\"?true:false} onClick={() => {\r\n                    setcontent(\"events\");\r\n                    togglingDisplay();\r\n                    (props.type===\"student\")?H.push('/DashboardEvent'):H.push('/DashboardEventTeacher');\r\n                }} className={`${content===\"events\"?classes.dashboardMenuButtonSelected:\"\"} ${classes.dashboardMenuButton}`}>\r\n                    <h6 className=\"mr-auto my-auto\" style={{color: \"black\"}}><BiCalendarEvent \r\n                    style={{\r\n                        color: \"black\",\r\n                        margin: \"auto 1rem\",\r\n                    }}>\r\n                    </BiCalendarEvent>Events</h6>\r\n                </ToggleButton>\r\n            </ToggleButtonGroup>\r\n            <a className=\"ml-auto mr-3\" href=\"/\" style={{ color: \"#fff\", position:\"relative\",top: \"5rem\"}}>\r\n                <button type=\"button\" className=\"btn btn-outline-danger ml-2\" onClick={() => { localStorage.removeItem('value'); }}><span>LOGOUT</span></button>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboardMenu;\r\n","C:\\Users\\akshay murari\\clgapp\\pro\\frontend\\src\\Dashboard\\DashboardAttendence\\DashboardAttendence.jsx",["342","343","344","345","346","347","348","349","350"],{"ruleId":"351","replacedBy":"352"},{"ruleId":"353","replacedBy":"354"},{"ruleId":"355","severity":1,"message":"356","line":4,"column":8,"nodeType":"357","messageId":"358","endLine":4,"endColumn":14},{"ruleId":"359","severity":1,"message":"360","line":129,"column":41,"nodeType":"361","endLine":129,"endColumn":93},{"ruleId":"359","severity":1,"message":"360","line":130,"column":41,"nodeType":"361","endLine":130,"endColumn":93},{"ruleId":"359","severity":1,"message":"360","line":123,"column":41,"nodeType":"361","endLine":123,"endColumn":93},{"ruleId":"359","severity":1,"message":"360","line":124,"column":41,"nodeType":"361","endLine":124,"endColumn":93},{"ruleId":"355","severity":1,"message":"362","line":1,"column":26,"nodeType":"357","messageId":"358","endLine":1,"endColumn":35},{"ruleId":"359","severity":1,"message":"360","line":126,"column":41,"nodeType":"361","endLine":126,"endColumn":93},{"ruleId":"359","severity":1,"message":"360","line":127,"column":41,"nodeType":"361","endLine":127,"endColumn":93},{"ruleId":"355","severity":1,"message":"363","line":5,"column":8,"nodeType":"357","messageId":"358","endLine":5,"endColumn":16},{"ruleId":"355","severity":1,"message":"364","line":12,"column":10,"nodeType":"357","messageId":"358","endLine":12,"endColumn":19},{"ruleId":"355","severity":1,"message":"365","line":16,"column":8,"nodeType":"357","messageId":"358","endLine":16,"endColumn":16},{"ruleId":"355","severity":1,"message":"366","line":22,"column":11,"nodeType":"357","messageId":"358","endLine":22,"endColumn":17},{"ruleId":"367","severity":1,"message":"368","line":27,"column":15,"nodeType":"369","endLine":49,"endColumn":6},{"ruleId":"367","severity":1,"message":"370","line":49,"column":8,"nodeType":"371","endLine":49,"endColumn":10,"suggestions":"372"},{"ruleId":"367","severity":1,"message":"368","line":51,"column":15,"nodeType":"369","endLine":71,"endColumn":6},{"ruleId":"359","severity":1,"message":"360","line":165,"column":37,"nodeType":"361","endLine":165,"endColumn":89},{"ruleId":"359","severity":1,"message":"360","line":166,"column":37,"nodeType":"361","endLine":166,"endColumn":89},{"ruleId":"359","severity":1,"message":"373","line":16,"column":21,"nodeType":"361","endLine":16,"endColumn":58},{"ruleId":"359","severity":1,"message":"373","line":19,"column":21,"nodeType":"361","endLine":19,"endColumn":58},{"ruleId":"359","severity":1,"message":"360","line":29,"column":33,"nodeType":"361","endLine":29,"endColumn":120},{"ruleId":"355","severity":1,"message":"374","line":6,"column":10,"nodeType":"357","messageId":"358","endLine":6,"endColumn":20},{"ruleId":"355","severity":1,"message":"375","line":7,"column":10,"nodeType":"357","messageId":"358","endLine":7,"endColumn":17},{"ruleId":"355","severity":1,"message":"376","line":4,"column":8,"nodeType":"357","messageId":"358","endLine":4,"endColumn":18},{"ruleId":"355","severity":1,"message":"362","line":2,"column":10,"nodeType":"357","messageId":"358","endLine":2,"endColumn":19},{"ruleId":"355","severity":1,"message":"377","line":2,"column":21,"nodeType":"357","messageId":"358","endLine":2,"endColumn":29},{"ruleId":"355","severity":1,"message":"374","line":3,"column":10,"nodeType":"357","messageId":"358","endLine":3,"endColumn":20},{"ruleId":"378","severity":1,"message":"379","line":12,"column":11,"nodeType":"361","endLine":12,"endColumn":80},{"ruleId":"380","severity":1,"message":"381","line":15,"column":15,"nodeType":"382","endLine":15,"endColumn":19},{"ruleId":"355","severity":1,"message":"383","line":12,"column":8,"nodeType":"357","messageId":"358","endLine":12,"endColumn":19},{"ruleId":"355","severity":1,"message":"356","line":2,"column":8,"nodeType":"357","messageId":"358","endLine":2,"endColumn":14},{"ruleId":"384","severity":1,"message":"385","line":90,"column":55,"nodeType":"386","messageId":"387","endLine":90,"endColumn":57},{"ruleId":"355","severity":1,"message":"376","line":5,"column":8,"nodeType":"357","messageId":"358","endLine":5,"endColumn":18},{"ruleId":"355","severity":1,"message":"365","line":15,"column":8,"nodeType":"357","messageId":"358","endLine":15,"endColumn":16},{"ruleId":"355","severity":1,"message":"366","line":20,"column":11,"nodeType":"357","messageId":"358","endLine":20,"endColumn":17},{"ruleId":"367","severity":1,"message":"368","line":26,"column":15,"nodeType":"369","endLine":48,"endColumn":6},{"ruleId":"367","severity":1,"message":"370","line":48,"column":8,"nodeType":"371","endLine":48,"endColumn":10,"suggestions":"388"},{"ruleId":"367","severity":1,"message":"368","line":50,"column":15,"nodeType":"369","endLine":70,"endColumn":6},{"ruleId":"355","severity":1,"message":"389","line":4,"column":10,"nodeType":"357","messageId":"358","endLine":4,"endColumn":14},{"ruleId":"355","severity":1,"message":"390","line":1,"column":21,"nodeType":"357","messageId":"358","endLine":1,"endColumn":36},{"ruleId":"355","severity":1,"message":"391","line":2,"column":9,"nodeType":"357","messageId":"358","endLine":2,"endColumn":28},{"ruleId":"355","severity":1,"message":"392","line":4,"column":8,"nodeType":"357","messageId":"358","endLine":4,"endColumn":14},{"ruleId":"355","severity":1,"message":"393","line":5,"column":8,"nodeType":"357","messageId":"358","endLine":5,"endColumn":13},{"ruleId":"355","severity":1,"message":"394","line":5,"column":8,"nodeType":"357","messageId":"358","endLine":5,"endColumn":18},{"ruleId":"355","severity":1,"message":"395","line":7,"column":8,"nodeType":"357","messageId":"358","endLine":7,"endColumn":17},{"ruleId":"355","severity":1,"message":"365","line":9,"column":8,"nodeType":"357","messageId":"358","endLine":9,"endColumn":16},{"ruleId":"355","severity":1,"message":"396","line":16,"column":8,"nodeType":"357","messageId":"358","endLine":16,"endColumn":18},{"ruleId":"355","severity":1,"message":"397","line":28,"column":8,"nodeType":"357","messageId":"358","endLine":28,"endColumn":16},{"ruleId":"355","severity":1,"message":"398","line":29,"column":8,"nodeType":"357","messageId":"358","endLine":29,"endColumn":15},{"ruleId":"367","severity":1,"message":"368","line":31,"column":15,"nodeType":"369","endLine":53,"endColumn":6},{"ruleId":"367","severity":1,"message":"370","line":53,"column":8,"nodeType":"371","endLine":53,"endColumn":10,"suggestions":"399"},{"ruleId":"400","severity":1,"message":"401","line":75,"column":22,"nodeType":"369","messageId":"402","endLine":75,"endColumn":24},{"ruleId":"400","severity":1,"message":"401","line":80,"column":33,"nodeType":"369","messageId":"402","endLine":80,"endColumn":35},{"ruleId":"400","severity":1,"message":"401","line":83,"column":22,"nodeType":"369","messageId":"402","endLine":83,"endColumn":24},{"ruleId":"355","severity":1,"message":"403","line":112,"column":12,"nodeType":"357","messageId":"358","endLine":112,"endColumn":19},{"ruleId":"355","severity":1,"message":"404","line":112,"column":21,"nodeType":"357","messageId":"358","endLine":112,"endColumn":31},{"ruleId":"367","severity":1,"message":"368","line":141,"column":15,"nodeType":"369","endLine":161,"endColumn":6},{"ruleId":"367","severity":1,"message":"405","line":161,"column":8,"nodeType":"371","endLine":161,"endColumn":10,"suggestions":"406"},{"ruleId":"355","severity":1,"message":"389","line":3,"column":10,"nodeType":"357","messageId":"358","endLine":3,"endColumn":14},{"ruleId":"355","severity":1,"message":"407","line":4,"column":8,"nodeType":"357","messageId":"358","endLine":4,"endColumn":12},{"ruleId":"355","severity":1,"message":"364","line":5,"column":9,"nodeType":"357","messageId":"358","endLine":5,"endColumn":18},{"ruleId":"355","severity":1,"message":"408","line":6,"column":9,"nodeType":"357","messageId":"358","endLine":6,"endColumn":19},{"ruleId":"355","severity":1,"message":"409","line":12,"column":8,"nodeType":"357","messageId":"358","endLine":12,"endColumn":13},{"ruleId":"355","severity":1,"message":"410","line":33,"column":12,"nodeType":"357","messageId":"358","endLine":33,"endColumn":16},{"ruleId":"355","severity":1,"message":"411","line":33,"column":18,"nodeType":"357","messageId":"358","endLine":33,"endColumn":25},{"ruleId":"355","severity":1,"message":"412","line":41,"column":15,"nodeType":"357","messageId":"358","endLine":41,"endColumn":23},{"ruleId":"359","severity":1,"message":"373","line":9,"column":21,"nodeType":"361","endLine":9,"endColumn":58},{"ruleId":"359","severity":1,"message":"373","line":12,"column":21,"nodeType":"361","endLine":12,"endColumn":58},{"ruleId":"355","severity":1,"message":"398","line":2,"column":8,"nodeType":"357","messageId":"358","endLine":2,"endColumn":15},{"ruleId":"355","severity":1,"message":"413","line":3,"column":8,"nodeType":"357","messageId":"358","endLine":3,"endColumn":11},{"ruleId":"355","severity":1,"message":"374","line":4,"column":10,"nodeType":"357","messageId":"358","endLine":4,"endColumn":20},{"ruleId":"355","severity":1,"message":"414","line":7,"column":8,"nodeType":"357","messageId":"358","endLine":7,"endColumn":19},{"ruleId":"355","severity":1,"message":"415","line":12,"column":8,"nodeType":"357","messageId":"358","endLine":12,"endColumn":19},{"ruleId":"416","severity":1,"message":"417","line":196,"column":52,"nodeType":"418","messageId":"387","endLine":196,"endColumn":58},{"ruleId":"355","severity":1,"message":"365","line":11,"column":8,"nodeType":"357","messageId":"358","endLine":11,"endColumn":16},{"ruleId":"355","severity":1,"message":"419","line":18,"column":8,"nodeType":"357","messageId":"358","endLine":18,"endColumn":21},{"ruleId":"367","severity":1,"message":"368","line":31,"column":15,"nodeType":"369","endLine":53,"endColumn":6},{"ruleId":"367","severity":1,"message":"370","line":53,"column":8,"nodeType":"371","endLine":53,"endColumn":10,"suggestions":"420"},{"ruleId":"367","severity":1,"message":"368","line":55,"column":15,"nodeType":"369","endLine":73,"endColumn":6},{"ruleId":"367","severity":1,"message":"421","line":73,"column":8,"nodeType":"371","endLine":73,"endColumn":15,"suggestions":"422"},{"ruleId":"355","severity":1,"message":"423","line":128,"column":11,"nodeType":"357","messageId":"358","endLine":128,"endColumn":19},{"ruleId":"355","severity":1,"message":"424","line":13,"column":11,"nodeType":"357","messageId":"358","endLine":13,"endColumn":16},{"ruleId":"384","severity":1,"message":"385","line":17,"column":30,"nodeType":"386","messageId":"387","endLine":17,"endColumn":32},{"ruleId":"425","severity":1,"message":"426","line":95,"column":20,"nodeType":"361","endLine":95,"endColumn":57},{"ruleId":"355","severity":1,"message":"365","line":8,"column":8,"nodeType":"357","messageId":"358","endLine":8,"endColumn":16},{"ruleId":"355","severity":1,"message":"427","line":10,"column":20,"nodeType":"357","messageId":"358","endLine":10,"endColumn":29},{"ruleId":"367","severity":1,"message":"368","line":30,"column":15,"nodeType":"369","endLine":51,"endColumn":6},{"ruleId":"367","severity":1,"message":"370","line":51,"column":8,"nodeType":"371","endLine":51,"endColumn":10,"suggestions":"428"},{"ruleId":"367","severity":1,"message":"368","line":53,"column":15,"nodeType":"369","endLine":72,"endColumn":6},{"ruleId":"367","severity":1,"message":"370","line":72,"column":8,"nodeType":"371","endLine":72,"endColumn":18,"suggestions":"429"},{"ruleId":"355","severity":1,"message":"365","line":8,"column":8,"nodeType":"357","messageId":"358","endLine":8,"endColumn":16},{"ruleId":"355","severity":1,"message":"430","line":10,"column":10,"nodeType":"357","messageId":"358","endLine":10,"endColumn":18},{"ruleId":"355","severity":1,"message":"427","line":10,"column":20,"nodeType":"357","messageId":"358","endLine":10,"endColumn":29},{"ruleId":"355","severity":1,"message":"389","line":13,"column":10,"nodeType":"357","messageId":"358","endLine":13,"endColumn":14},{"ruleId":"355","severity":1,"message":"431","line":19,"column":8,"nodeType":"357","messageId":"358","endLine":19,"endColumn":22},{"ruleId":"355","severity":1,"message":"432","line":33,"column":8,"nodeType":"357","messageId":"358","endLine":33,"endColumn":25},{"ruleId":"355","severity":1,"message":"433","line":58,"column":10,"nodeType":"357","messageId":"358","endLine":58,"endColumn":20},{"ruleId":"355","severity":1,"message":"434","line":60,"column":21,"nodeType":"357","messageId":"358","endLine":60,"endColumn":33},{"ruleId":"367","severity":1,"message":"368","line":70,"column":15,"nodeType":"369","endLine":108,"endColumn":6},{"ruleId":"367","severity":1,"message":"435","line":108,"column":8,"nodeType":"371","endLine":108,"endColumn":10,"suggestions":"436"},{"ruleId":"367","severity":1,"message":"368","line":109,"column":15,"nodeType":"369","endLine":173,"endColumn":6},{"ruleId":"367","severity":1,"message":"421","line":173,"column":8,"nodeType":"371","endLine":173,"endColumn":76,"suggestions":"437"},{"ruleId":"355","severity":1,"message":"438","line":20,"column":7,"nodeType":"357","messageId":"358","endLine":20,"endColumn":16},{"ruleId":"367","severity":1,"message":"368","line":57,"column":15,"nodeType":"369","endLine":79,"endColumn":6},{"ruleId":"367","severity":1,"message":"439","line":79,"column":8,"nodeType":"371","endLine":79,"endColumn":10,"suggestions":"440"},{"ruleId":"367","severity":1,"message":"368","line":80,"column":15,"nodeType":"369","endLine":102,"endColumn":6},{"ruleId":"367","severity":1,"message":"370","line":102,"column":8,"nodeType":"371","endLine":102,"endColumn":20,"suggestions":"441"},{"ruleId":"367","severity":1,"message":"442","line":114,"column":8,"nodeType":"371","endLine":114,"endColumn":15,"suggestions":"443"},{"ruleId":"355","severity":1,"message":"444","line":126,"column":11,"nodeType":"357","messageId":"358","endLine":126,"endColumn":22},{"ruleId":"355","severity":1,"message":"423","line":198,"column":11,"nodeType":"357","messageId":"358","endLine":198,"endColumn":19},{"ruleId":"384","severity":1,"message":"445","line":274,"column":112,"nodeType":"386","messageId":"387","endLine":274,"endColumn":114},{"ruleId":"384","severity":1,"message":"445","line":278,"column":81,"nodeType":"386","messageId":"387","endLine":278,"endColumn":83},{"ruleId":"355","severity":1,"message":"432","line":2,"column":8,"nodeType":"357","messageId":"358","endLine":2,"endColumn":25},{"ruleId":"384","severity":1,"message":"385","line":11,"column":122,"nodeType":"386","messageId":"387","endLine":11,"endColumn":124},{"ruleId":"355","severity":1,"message":"394","line":7,"column":8,"nodeType":"357","messageId":"358","endLine":7,"endColumn":18},{"ruleId":"355","severity":1,"message":"398","line":8,"column":8,"nodeType":"357","messageId":"358","endLine":8,"endColumn":15},{"ruleId":"367","severity":1,"message":"368","line":23,"column":15,"nodeType":"369","endLine":60,"endColumn":6},{"ruleId":"367","severity":1,"message":"435","line":60,"column":8,"nodeType":"371","endLine":60,"endColumn":10,"suggestions":"446"},{"ruleId":"367","severity":1,"message":"368","line":61,"column":15,"nodeType":"369","endLine":80,"endColumn":6},{"ruleId":"367","severity":1,"message":"370","line":80,"column":8,"nodeType":"371","endLine":80,"endColumn":10,"suggestions":"447"},{"ruleId":"355","severity":1,"message":"448","line":101,"column":11,"nodeType":"357","messageId":"358","endLine":101,"endColumn":26},{"ruleId":"384","severity":1,"message":"385","line":110,"column":58,"nodeType":"386","messageId":"387","endLine":110,"endColumn":60},{"ruleId":"355","severity":1,"message":"424","line":30,"column":9,"nodeType":"357","messageId":"358","endLine":30,"endColumn":14},{"ruleId":"355","severity":1,"message":"449","line":41,"column":11,"nodeType":"357","messageId":"358","endLine":41,"endColumn":17},{"ruleId":"367","severity":1,"message":"368","line":44,"column":15,"nodeType":"369","endLine":80,"endColumn":6},{"ruleId":"367","severity":1,"message":"450","line":80,"column":8,"nodeType":"371","endLine":80,"endColumn":10,"suggestions":"451"},{"ruleId":"367","severity":1,"message":"368","line":92,"column":15,"nodeType":"369","endLine":116,"endColumn":6},{"ruleId":"367","severity":1,"message":"452","line":116,"column":8,"nodeType":"371","endLine":116,"endColumn":23,"suggestions":"453"},{"ruleId":"355","severity":1,"message":"454","line":128,"column":19,"nodeType":"357","messageId":"358","endLine":128,"endColumn":23},{"ruleId":"455","severity":1,"message":"456","line":227,"column":29,"nodeType":"361","endLine":227,"endColumn":94},{"ruleId":"355","severity":1,"message":"457","line":4,"column":8,"nodeType":"357","messageId":"358","endLine":4,"endColumn":24},{"ruleId":"355","severity":1,"message":"458","line":9,"column":8,"nodeType":"357","messageId":"358","endLine":9,"endColumn":22},{"ruleId":"355","severity":1,"message":"459","line":10,"column":13,"nodeType":"357","messageId":"358","endLine":10,"endColumn":20},{"ruleId":"355","severity":1,"message":"424","line":16,"column":11,"nodeType":"357","messageId":"358","endLine":16,"endColumn":16},{"ruleId":"367","severity":1,"message":"368","line":28,"column":15,"nodeType":"369","endLine":66,"endColumn":6},{"ruleId":"367","severity":1,"message":"435","line":66,"column":8,"nodeType":"371","endLine":66,"endColumn":10,"suggestions":"460"},{"ruleId":"355","severity":1,"message":"461","line":4,"column":10,"nodeType":"357","messageId":"358","endLine":4,"endColumn":16},{"ruleId":"355","severity":1,"message":"462","line":10,"column":21,"nodeType":"357","messageId":"358","endLine":10,"endColumn":32},{"ruleId":"355","severity":1,"message":"366","line":25,"column":11,"nodeType":"357","messageId":"358","endLine":25,"endColumn":17},{"ruleId":"367","severity":1,"message":"368","line":28,"column":15,"nodeType":"369","endLine":48,"endColumn":6},{"ruleId":"359","severity":1,"message":"373","line":67,"column":21,"nodeType":"361","endLine":67,"endColumn":58},{"ruleId":"359","severity":1,"message":"373","line":70,"column":21,"nodeType":"361","endLine":70,"endColumn":67},{"ruleId":"355","severity":1,"message":"463","line":5,"column":8,"nodeType":"357","messageId":"358","endLine":5,"endColumn":18},{"ruleId":"355","severity":1,"message":"459","line":8,"column":13,"nodeType":"357","messageId":"358","endLine":8,"endColumn":20},{"ruleId":"355","severity":1,"message":"464","line":52,"column":11,"nodeType":"357","messageId":"358","endLine":52,"endColumn":30},{"ruleId":"355","severity":1,"message":"465","line":4,"column":15,"nodeType":"357","messageId":"358","endLine":4,"endColumn":19},{"ruleId":"355","severity":1,"message":"466","line":4,"column":21,"nodeType":"357","messageId":"358","endLine":4,"endColumn":24},{"ruleId":"367","severity":1,"message":"368","line":17,"column":15,"nodeType":"369","endLine":40,"endColumn":6},{"ruleId":"367","severity":1,"message":"370","line":40,"column":8,"nodeType":"371","endLine":40,"endColumn":10,"suggestions":"467"},{"ruleId":"367","severity":1,"message":"368","line":56,"column":15,"nodeType":"369","endLine":76,"endColumn":6},{"ruleId":"367","severity":1,"message":"468","line":76,"column":7,"nodeType":"371","endLine":76,"endColumn":9,"suggestions":"469"},{"ruleId":"367","severity":1,"message":"368","line":78,"column":15,"nodeType":"369","endLine":99,"endColumn":6},{"ruleId":"367","severity":1,"message":"470","line":99,"column":7,"nodeType":"371","endLine":99,"endColumn":17,"suggestions":"471"},{"ruleId":"367","severity":1,"message":"472","line":134,"column":7,"nodeType":"371","endLine":134,"endColumn":19,"suggestions":"473"},"no-native-reassign",["474"],"no-negated-in-lhs",["475"],"no-unused-vars","'Avatar' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'MainCard' is defined but never used.","'useParams' is defined but never used.","'MenuIcon' is defined but never used.","'state1' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'H' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["476"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'makeStyles' is defined but never used.","'flexbox' is defined but never used.","'attendance' is defined but never used.","'useState' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","jsx-a11y/aria-role","Elements with ARIA roles must use a valid, non-abstract ARIA role.","JSXAttribute","'Teacherblog' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["477"],"'Link' is defined but never used.","'applyMiddleware' is defined but never used.","'composeWithDevTools' is defined but never used.","'logger' is defined but never used.","'thunk' is defined but never used.","'IconButton' is defined but never used.","'InputBase' is defined but never used.","'SearchIcon' is defined but never used.","'Checkbox' is defined but never used.","'AddIcon' is defined but never used.",["478"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'checked' is assigned a value but never used.","'setchecked' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'section', and 'subject'. Either include them or remove the dependency array.",["479"],"'icon' is defined but never used.","'useHistory' is defined but never used.","'Modal' is defined but never used.","'link' is assigned a value but never used.","'setlink' is assigned a value but never used.","'tempLink' is assigned a value but never used.","'Add' is defined but never used.","'htmlToDraft' is defined but never used.","'transitions' is defined but never used.","no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","'AddCircleIcon' is defined but never used.",["480"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["481"],"'classes1' is assigned a value but never used.","'state' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'getColDef' is defined but never used.",["482"],["483"],"'DataGrid' is defined but never used.","'FilterListIcon' is defined but never used.","'DeleteOutlineIcon' is defined but never used.","'addDisplay' is assigned a value but never used.","'setOnRefresh' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'H', 'dispatch', and 'props.type'. Either include them or remove the dependency array.",["484"],["485"],"'useStyles' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props.type'. Either include them or remove the dependency array.",["486"],["487"],"React Hook useEffect has missing dependencies: 'endDay' and 'startDay'. Either include them or remove the dependency array.",["488"],"'beforeToday' is assigned a value but never used.","Expected '!==' and instead saw '!='.",["489"],["490"],"'addNotification' is assigned a value but never used.","'state2' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'H', 'dispatch', 'props.type', and 'type'. Either include them or remove the dependency array.",["491"],"React Hook useEffect has missing dependencies: 'dispatch' and 'title'. Either include them or remove the dependency array.",["492"],"'data' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'DashboardContent' is defined but never used.","'DashboardEvent' is defined but never used.","'FaIcons' is defined but never used.",["493"],"'Button' is defined but never used.","'useDispatch' is defined but never used.","'ClassLinks' is defined but never used.","'dashboardMenuStyles' is assigned a value but never used.","'Line' is defined but never used.","'Pie' is defined but never used.",["494"],"React Hook useEffect has a missing dependency: 'totalAttendancePercentage'. Either include it or remove the dependency array.",["495"],"React Hook useEffect has a missing dependency: 'section'. Either include it or remove the dependency array.",["496"],"React Hook useEffect has missing dependencies: 'attendanceCount.totalNumberOfClassesAttended', 'attendanceCount.totalNumberOfClassesConducted', 'section', and 'studentAttendenceDetailes.subjectName'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setstudentAttendenceDetailes' needs the current value of 'studentAttendenceDetailes.subjectName'.",["497"],"no-global-assign","no-unsafe-negation",{"desc":"498","fix":"499"},{"desc":"498","fix":"500"},{"desc":"498","fix":"501"},{"desc":"502","fix":"503"},{"desc":"498","fix":"504"},{"desc":"505","fix":"506"},{"desc":"498","fix":"507"},{"desc":"508","fix":"509"},{"desc":"510","fix":"511"},{"desc":"512","fix":"513"},{"desc":"514","fix":"515"},{"desc":"516","fix":"517"},{"desc":"518","fix":"519"},{"desc":"510","fix":"520"},{"desc":"498","fix":"521"},{"desc":"522","fix":"523"},{"desc":"524","fix":"525"},{"desc":"510","fix":"526"},{"desc":"498","fix":"527"},{"desc":"528","fix":"529"},{"desc":"530","fix":"531"},{"desc":"532","fix":"533"},"Update the dependencies array to be: [H, dispatch]",{"range":"534","text":"535"},{"range":"536","text":"535"},{"range":"537","text":"535"},"Update the dependencies array to be: [dispatch, section, subject]",{"range":"538","text":"539"},{"range":"540","text":"535"},"Update the dependencies array to be: [dispatch, onadd]",{"range":"541","text":"542"},{"range":"543","text":"535"},"Update the dependencies array to be: [H, dispatch, onsearch]",{"range":"544","text":"545"},"Update the dependencies array to be: [H, dispatch, props.type]",{"range":"546","text":"547"},"Update the dependencies array to be: [currentPage, onAdd, onRefresh, records, userFilter, searchVal, onDel, dispatch]",{"range":"548","text":"549"},"Update the dependencies array to be: [dispatch, props.type]",{"range":"550","text":"551"},"Update the dependencies array to be: [H, dispatch, onAddEvent]",{"range":"552","text":"553"},"Update the dependencies array to be: [endDay, startDay, value]",{"range":"554","text":"555"},{"range":"556","text":"547"},{"range":"557","text":"535"},"Update the dependencies array to be: [H, dispatch, props.type, type]",{"range":"558","text":"559"},"Update the dependencies array to be: [dispatch, title, updateMessage]",{"range":"560","text":"561"},{"range":"562","text":"547"},{"range":"563","text":"535"},"Update the dependencies array to be: [totalAttendancePercentage]",{"range":"564","text":"565"},"Update the dependencies array to be: [onsignin, section]",{"range":"566","text":"567"},"Update the dependencies array to be: [attendanceCount.totalNumberOfClassesAttended, attendanceCount.totalNumberOfClassesConducted, onsubjects, section, studentAttendenceDetailes.subjectName]",{"range":"568","text":"569"},[2147,2149],"[H, dispatch]",[2149,2151],[2558,2560],[6632,6634],"[dispatch, section, subject]",[2374,2376],[3255,3262],"[dispatch, onadd]",[2444,2446],[3295,3305],"[H, dispatch, onsearch]",[4832,4834],"[H, dispatch, props.type]",[7843,7911],"[currentPage, onAdd, onRefresh, records, userFilter, searchVal, onDel, dispatch]",[3432,3434],"[dispatch, props.type]",[4299,4311],"[H, dispatch, onAddEvent]",[4655,4662],"[endDay, startDay, value]",[2258,2260],[3128,3130],[3020,3022],"[H, dispatch, props.type, type]",[4429,4444],"[dispatch, title, updateMessage]",[2606,2608],[1686,1688],[3323,3325],"[totalAttendancePercentage]",[4418,4428],"[onsignin, section]",[6334,6346],"[attendanceCount.totalNumberOfClassesAttended, attendanceCount.totalNumberOfClassesConducted, onsubjects, section, studentAttendenceDetailes.subjectName]"]